// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif
/// A type that performs HTTP operations defined by the OpenAPI document.
internal protocol APIProtocol: Sendable {
    /// 条目搜索
    ///
    /// ## 实验性 API， 本 schema 和实际的 API 行为都可能随时发生改动
    ///
    /// 目前支持的筛选条件包括:
    /// - `type`: 条目类型，参照 `SubjectType` enum， `或`。
    /// - `tag`: 标签，可以多次出现。`且` 关系。
    /// - `airdate`: 播出日期/发售日期。`且` 关系。
    /// - `rating`: 用于搜索指定评分的条目。`且` 关系。
    /// - `rank`: 用于搜索指定排名的条目。`且` 关系。
    /// - `nsfw`: 使用 `include` 包含NSFW搜索结果。默认排除搜索NSFW条目。无权限情况下忽略此选项，不会返回NSFW条目。
    ///
    /// 不同筛选条件之间为 `且`
    ///
    ///
    /// 由于目前 meilisearch 的一些问题，条目排名更新并不会触发搜索数据更新，所以条目排名可能是过期数据。
    ///
    /// 希望未来版本的 meilisearch 能解决相关的问题。
    ///
    ///
    /// - Remark: HTTP `POST /v0/search/subjects`.
    /// - Remark: Generated from `#/paths//v0/search/subjects/post(searchSubjects)`.
    func searchSubjects(_ input: Operations.searchSubjects.Input) async throws -> Operations.searchSubjects.Output
    /// 浏览条目
    ///
    /// 第一页会 cache 24h，之后会 cache 1h
    ///
    /// - Remark: HTTP `GET /v0/subjects`.
    /// - Remark: Generated from `#/paths//v0/subjects/get(getSubjects)`.
    func getSubjects(_ input: Operations.getSubjects.Input) async throws -> Operations.getSubjects.Output
    /// 获取条目
    ///
    /// cache with 300s
    ///
    /// - Remark: HTTP `GET /v0/subjects/{subject_id}`.
    /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/get(getSubjectById)`.
    func getSubjectById(_ input: Operations.getSubjectById.Input) async throws -> Operations.getSubjectById.Output
    /// Get Subject Image
    ///
    /// - Remark: HTTP `GET /v0/subjects/{subject_id}/image`.
    /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/image/get(getSubjectImageById)`.
    func getSubjectImageById(_ input: Operations.getSubjectImageById.Input) async throws -> Operations.getSubjectImageById.Output
    /// Get Subject Persons
    ///
    /// - Remark: HTTP `GET /v0/subjects/{subject_id}/persons`.
    /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/persons/get(getRelatedPersonsBySubjectId)`.
    func getRelatedPersonsBySubjectId(_ input: Operations.getRelatedPersonsBySubjectId.Input) async throws -> Operations.getRelatedPersonsBySubjectId.Output
    /// Get Subject Characters
    ///
    /// - Remark: HTTP `GET /v0/subjects/{subject_id}/characters`.
    /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/characters/get(getRelatedCharactersBySubjectId)`.
    func getRelatedCharactersBySubjectId(_ input: Operations.getRelatedCharactersBySubjectId.Input) async throws -> Operations.getRelatedCharactersBySubjectId.Output
    /// Get Subject Relations
    ///
    /// - Remark: HTTP `GET /v0/subjects/{subject_id}/subjects`.
    /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/subjects/get(getRelatedSubjectsBySubjectId)`.
    func getRelatedSubjectsBySubjectId(_ input: Operations.getRelatedSubjectsBySubjectId.Input) async throws -> Operations.getRelatedSubjectsBySubjectId.Output
    /// Get Episodes
    ///
    /// - Remark: HTTP `GET /v0/episodes`.
    /// - Remark: Generated from `#/paths//v0/episodes/get(getEpisodes)`.
    func getEpisodes(_ input: Operations.getEpisodes.Input) async throws -> Operations.getEpisodes.Output
    /// Get Episode
    ///
    /// - Remark: HTTP `GET /v0/episodes/{episode_id}`.
    /// - Remark: Generated from `#/paths//v0/episodes/{episode_id}/get(getEpisodeById)`.
    func getEpisodeById(_ input: Operations.getEpisodeById.Input) async throws -> Operations.getEpisodeById.Output
    /// Get Character Detail
    ///
    /// cache with 60s
    ///
    /// - Remark: HTTP `GET /v0/characters/{character_id}`.
    /// - Remark: Generated from `#/paths//v0/characters/{character_id}/get(getCharacterById)`.
    func getCharacterById(_ input: Operations.getCharacterById.Input) async throws -> Operations.getCharacterById.Output
    /// Get Character Image
    ///
    /// - Remark: HTTP `GET /v0/characters/{character_id}/image`.
    /// - Remark: Generated from `#/paths//v0/characters/{character_id}/image/get(getCharacterImageById)`.
    func getCharacterImageById(_ input: Operations.getCharacterImageById.Input) async throws -> Operations.getCharacterImageById.Output
    /// get character related subjects
    ///
    /// - Remark: HTTP `GET /v0/characters/{character_id}/subjects`.
    /// - Remark: Generated from `#/paths//v0/characters/{character_id}/subjects/get(getRelatedSubjectsByCharacterId)`.
    func getRelatedSubjectsByCharacterId(_ input: Operations.getRelatedSubjectsByCharacterId.Input) async throws -> Operations.getRelatedSubjectsByCharacterId.Output
    /// get character related persons
    ///
    /// - Remark: HTTP `GET /v0/characters/{character_id}/persons`.
    /// - Remark: Generated from `#/paths//v0/characters/{character_id}/persons/get(getRelatedPersonsByCharacterId)`.
    func getRelatedPersonsByCharacterId(_ input: Operations.getRelatedPersonsByCharacterId.Input) async throws -> Operations.getRelatedPersonsByCharacterId.Output
    /// Collect character for current user
    ///
    /// 为当前用户收藏角色
    ///
    /// - Remark: HTTP `POST /v0/characters/{character_id}/collect`.
    /// - Remark: Generated from `#/paths//v0/characters/{character_id}/collect/post(collectCharacterByCharacterIdAndUserId)`.
    func collectCharacterByCharacterIdAndUserId(_ input: Operations.collectCharacterByCharacterIdAndUserId.Input) async throws -> Operations.collectCharacterByCharacterIdAndUserId.Output
    /// Uncollect character for current user
    ///
    /// 为当前用户取消收藏角色
    ///
    /// - Remark: HTTP `DELETE /v0/characters/{character_id}/collect`.
    /// - Remark: Generated from `#/paths//v0/characters/{character_id}/collect/delete(uncollectCharacterByCharacterIdAndUserId)`.
    func uncollectCharacterByCharacterIdAndUserId(_ input: Operations.uncollectCharacterByCharacterIdAndUserId.Input) async throws -> Operations.uncollectCharacterByCharacterIdAndUserId.Output
    /// Get Person
    ///
    /// cache with 60s
    ///
    /// - Remark: HTTP `GET /v0/persons/{person_id}`.
    /// - Remark: Generated from `#/paths//v0/persons/{person_id}/get(getPersonById)`.
    func getPersonById(_ input: Operations.getPersonById.Input) async throws -> Operations.getPersonById.Output
    /// Get Person Image
    ///
    /// - Remark: HTTP `GET /v0/persons/{person_id}/image`.
    /// - Remark: Generated from `#/paths//v0/persons/{person_id}/image/get(getPersonImageById)`.
    func getPersonImageById(_ input: Operations.getPersonImageById.Input) async throws -> Operations.getPersonImageById.Output
    /// get person related subjects
    ///
    /// - Remark: HTTP `GET /v0/persons/{person_id}/subjects`.
    /// - Remark: Generated from `#/paths//v0/persons/{person_id}/subjects/get(getRelatedSubjectsByPersonId)`.
    func getRelatedSubjectsByPersonId(_ input: Operations.getRelatedSubjectsByPersonId.Input) async throws -> Operations.getRelatedSubjectsByPersonId.Output
    /// get person related characters
    ///
    /// - Remark: HTTP `GET /v0/persons/{person_id}/characters`.
    /// - Remark: Generated from `#/paths//v0/persons/{person_id}/characters/get(getRelatedCharactersByPersonId)`.
    func getRelatedCharactersByPersonId(_ input: Operations.getRelatedCharactersByPersonId.Input) async throws -> Operations.getRelatedCharactersByPersonId.Output
    /// Collect person for current user
    ///
    /// 为当前用户收藏人物
    ///
    /// - Remark: HTTP `POST /v0/persons/{person_id}/collect`.
    /// - Remark: Generated from `#/paths//v0/persons/{person_id}/collect/post(collectPersonByPersonIdAndUserId)`.
    func collectPersonByPersonIdAndUserId(_ input: Operations.collectPersonByPersonIdAndUserId.Input) async throws -> Operations.collectPersonByPersonIdAndUserId.Output
    /// Uncollect person for current user
    ///
    /// 为当前用户取消收藏人物
    ///
    /// - Remark: HTTP `DELETE /v0/persons/{person_id}/collect`.
    /// - Remark: Generated from `#/paths//v0/persons/{person_id}/collect/delete(uncollectPersonByPersonIdAndUserId)`.
    func uncollectPersonByPersonIdAndUserId(_ input: Operations.uncollectPersonByPersonIdAndUserId.Input) async throws -> Operations.uncollectPersonByPersonIdAndUserId.Output
    /// Get User by name
    ///
    /// 获取用户信息
    ///
    /// - Remark: HTTP `GET /v0/users/{username}`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/get(getUserByName)`.
    func getUserByName(_ input: Operations.getUserByName.Input) async throws -> Operations.getUserByName.Output
    /// Get User Avatar by name
    ///
    /// 获取用户头像，302 重定向至头像地址，设置了 username 之后无法使用 UID 查询。
    ///
    /// - Remark: HTTP `GET /v0/users/{username}/avatar`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/avatar/get(getUserAvatarByName)`.
    func getUserAvatarByName(_ input: Operations.getUserAvatarByName.Input) async throws -> Operations.getUserAvatarByName.Output
    /// Get User
    ///
    /// 返回当前 Access Token 对应的用户信息
    ///
    /// - Remark: HTTP `GET /v0/me`.
    /// - Remark: Generated from `#/paths//v0/me/get(getMyself)`.
    func getMyself(_ input: Operations.getMyself.Input) async throws -> Operations.getMyself.Output
    /// 获取用户收藏
    ///
    /// 获取对应用户的收藏，查看私有收藏需要access token。
    ///
    /// - Remark: HTTP `GET /v0/users/{username}/collections`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/collections/get(getUserCollectionsByUsername)`.
    func getUserCollectionsByUsername(_ input: Operations.getUserCollectionsByUsername.Input) async throws -> Operations.getUserCollectionsByUsername.Output
    /// 获取用户单个条目收藏
    ///
    /// 获取对应用户的收藏，查看私有收藏需要 access token
    ///
    /// - Remark: HTTP `GET /v0/users/{username}/collections/{subject_id}`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/collections/{subject_id}/get(getUserCollection)`.
    func getUserCollection(_ input: Operations.getUserCollection.Input) async throws -> Operations.getUserCollection.Output
    /// 新增或修改用户单个条目收藏
    ///
    /// 修改条目收藏状态, 如果不存在则创建，如果存在则修改
    ///
    /// 由于直接修改剧集条目的完成度可能会引起意料之外效果，只能用于修改书籍类条目的完成度。
    ///
    /// 方法的所有请求体字段均可选
    ///
    ///
    /// - Remark: HTTP `POST /v0/users/-/collections/{subject_id}`.
    /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/post(postUserCollection)`.
    func postUserCollection(_ input: Operations.postUserCollection.Input) async throws -> Operations.postUserCollection.Output
    /// 修改用户单个收藏
    ///
    /// 修改条目收藏状态
    ///
    /// 由于直接修改剧集条目的完成度可能会引起意料之外效果，只能用于修改书籍类条目的完成度。
    ///
    /// PATCH 方法的所有请求体字段均可选
    ///
    ///
    /// - Remark: HTTP `PATCH /v0/users/-/collections/{subject_id}`.
    /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/patch(patchUserCollection)`.
    func patchUserCollection(_ input: Operations.patchUserCollection.Input) async throws -> Operations.patchUserCollection.Output
    /// 章节收藏信息
    ///
    /// - Remark: HTTP `GET /v0/users/-/collections/{subject_id}/episodes`.
    /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/episodes/get(getUserSubjectEpisodeCollection)`.
    func getUserSubjectEpisodeCollection(_ input: Operations.getUserSubjectEpisodeCollection.Input) async throws -> Operations.getUserSubjectEpisodeCollection.Output
    /// 章节收藏信息
    ///
    /// 同时会重新计算条目的完成度
    ///
    ///
    /// - Remark: HTTP `PATCH /v0/users/-/collections/{subject_id}/episodes`.
    /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/episodes/patch(patchUserSubjectEpisodeCollection)`.
    func patchUserSubjectEpisodeCollection(_ input: Operations.patchUserSubjectEpisodeCollection.Input) async throws -> Operations.patchUserSubjectEpisodeCollection.Output
    /// 章节收藏信息
    ///
    /// - Remark: HTTP `GET /v0/users/-/collections/-/episodes/{episode_id}`.
    /// - Remark: Generated from `#/paths//v0/users/-/collections/-/episodes/{episode_id}/get(getUserEpisodeCollection)`.
    func getUserEpisodeCollection(_ input: Operations.getUserEpisodeCollection.Input) async throws -> Operations.getUserEpisodeCollection.Output
    /// 更新章节收藏信息
    ///
    /// - Remark: HTTP `PUT /v0/users/-/collections/-/episodes/{episode_id}`.
    /// - Remark: Generated from `#/paths//v0/users/-/collections/-/episodes/{episode_id}/put(putUserEpisodeCollection)`.
    func putUserEpisodeCollection(_ input: Operations.putUserEpisodeCollection.Input) async throws -> Operations.putUserEpisodeCollection.Output
    /// 获取用户角色收藏列表
    ///
    /// - Remark: HTTP `GET /v0/users/{username}/collections/-/characters`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/collections/-/characters/get(getUserCharacterCollections)`.
    func getUserCharacterCollections(_ input: Operations.getUserCharacterCollections.Input) async throws -> Operations.getUserCharacterCollections.Output
    /// 获取用户单个角色收藏信息
    ///
    /// - Remark: HTTP `GET /v0/users/{username}/collections/-/characters/{character_id}`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/collections/-/characters/{character_id}/get(getUserCharacterCollection)`.
    func getUserCharacterCollection(_ input: Operations.getUserCharacterCollection.Input) async throws -> Operations.getUserCharacterCollection.Output
    /// 获取用户人物收藏列表
    ///
    /// - Remark: HTTP `GET /v0/users/{username}/collections/-/persons`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/collections/-/persons/get(getUserPersonCollections)`.
    func getUserPersonCollections(_ input: Operations.getUserPersonCollections.Input) async throws -> Operations.getUserPersonCollections.Output
    /// 获取用户单个人物收藏信息
    ///
    /// - Remark: HTTP `GET /v0/users/{username}/collections/-/persons/{person_id}`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/collections/-/persons/{person_id}/get(getUserPersonCollection)`.
    func getUserPersonCollection(_ input: Operations.getUserPersonCollection.Input) async throws -> Operations.getUserPersonCollection.Output
    /// Get Person Revisions
    ///
    /// - Remark: HTTP `GET /v0/revisions/persons`.
    /// - Remark: Generated from `#/paths//v0/revisions/persons/get(getPersonRevisions)`.
    func getPersonRevisions(_ input: Operations.getPersonRevisions.Input) async throws -> Operations.getPersonRevisions.Output
    /// Get Person Revision
    ///
    /// - Remark: HTTP `GET /v0/revisions/persons/{revision_id}`.
    /// - Remark: Generated from `#/paths//v0/revisions/persons/{revision_id}/get(getPersonRevisionByRevisionId)`.
    func getPersonRevisionByRevisionId(_ input: Operations.getPersonRevisionByRevisionId.Input) async throws -> Operations.getPersonRevisionByRevisionId.Output
    /// Get Character Revisions
    ///
    /// - Remark: HTTP `GET /v0/revisions/characters`.
    /// - Remark: Generated from `#/paths//v0/revisions/characters/get(getCharacterRevisions)`.
    func getCharacterRevisions(_ input: Operations.getCharacterRevisions.Input) async throws -> Operations.getCharacterRevisions.Output
    /// Get Character Revision
    ///
    /// - Remark: HTTP `GET /v0/revisions/characters/{revision_id}`.
    /// - Remark: Generated from `#/paths//v0/revisions/characters/{revision_id}/get(getCharacterRevisionByRevisionId)`.
    func getCharacterRevisionByRevisionId(_ input: Operations.getCharacterRevisionByRevisionId.Input) async throws -> Operations.getCharacterRevisionByRevisionId.Output
    /// Get Subject Revisions
    ///
    /// - Remark: HTTP `GET /v0/revisions/subjects`.
    /// - Remark: Generated from `#/paths//v0/revisions/subjects/get(getSubjectRevisions)`.
    func getSubjectRevisions(_ input: Operations.getSubjectRevisions.Input) async throws -> Operations.getSubjectRevisions.Output
    /// Get Subject Revision
    ///
    /// - Remark: HTTP `GET /v0/revisions/subjects/{revision_id}`.
    /// - Remark: Generated from `#/paths//v0/revisions/subjects/{revision_id}/get(getSubjectRevisionByRevisionId)`.
    func getSubjectRevisionByRevisionId(_ input: Operations.getSubjectRevisionByRevisionId.Input) async throws -> Operations.getSubjectRevisionByRevisionId.Output
    /// Get Episode Revisions
    ///
    /// - Remark: HTTP `GET /v0/revisions/episodes`.
    /// - Remark: Generated from `#/paths//v0/revisions/episodes/get(getEpisodeRevisions)`.
    func getEpisodeRevisions(_ input: Operations.getEpisodeRevisions.Input) async throws -> Operations.getEpisodeRevisions.Output
    /// Get Episode Revision
    ///
    /// - Remark: HTTP `GET /v0/revisions/episodes/{revision_id}`.
    /// - Remark: Generated from `#/paths//v0/revisions/episodes/{revision_id}/get(getEpisodeRevisionByRevisionId)`.
    func getEpisodeRevisionByRevisionId(_ input: Operations.getEpisodeRevisionByRevisionId.Input) async throws -> Operations.getEpisodeRevisionByRevisionId.Output
    /// Create a new index
    ///
    /// - Remark: HTTP `POST /v0/indices`.
    /// - Remark: Generated from `#/paths//v0/indices/post(newIndex)`.
    func newIndex(_ input: Operations.newIndex.Input) async throws -> Operations.newIndex.Output
    /// Get Index By ID
    ///
    /// - Remark: HTTP `GET /v0/indices/{index_id}`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/get(getIndexById)`.
    func getIndexById(_ input: Operations.getIndexById.Input) async throws -> Operations.getIndexById.Output
    /// Edit index's information
    ///
    /// - Remark: HTTP `PUT /v0/indices/{index_id}`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/put(editIndexById)`.
    func editIndexById(_ input: Operations.editIndexById.Input) async throws -> Operations.editIndexById.Output
    /// Get Index Subjects
    ///
    /// - Remark: HTTP `GET /v0/indices/{index_id}/subjects`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/get(getIndexSubjectsByIndexId)`.
    func getIndexSubjectsByIndexId(_ input: Operations.getIndexSubjectsByIndexId.Input) async throws -> Operations.getIndexSubjectsByIndexId.Output
    /// Add a subject to Index
    ///
    /// - Remark: HTTP `POST /v0/indices/{index_id}/subjects`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/post(addSubjectToIndexByIndexId)`.
    func addSubjectToIndexByIndexId(_ input: Operations.addSubjectToIndexByIndexId.Input) async throws -> Operations.addSubjectToIndexByIndexId.Output
    /// Edit subject information in a index
    ///
    /// 如果条目不存在于目录，会创建该条目
    ///
    /// - Remark: HTTP `PUT /v0/indices/{index_id}/subjects/{subject_id}`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/{subject_id}/put(editIndexSubjectsByIndexIdAndSubjectID)`.
    func editIndexSubjectsByIndexIdAndSubjectID(_ input: Operations.editIndexSubjectsByIndexIdAndSubjectID.Input) async throws -> Operations.editIndexSubjectsByIndexIdAndSubjectID.Output
    /// Delete a subject from a Index
    ///
    /// - Remark: HTTP `DELETE /v0/indices/{index_id}/subjects/{subject_id}`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/{subject_id}/delete(delelteSubjectFromIndexByIndexIdAndSubjectID)`.
    func delelteSubjectFromIndexByIndexIdAndSubjectID(_ input: Operations.delelteSubjectFromIndexByIndexIdAndSubjectID.Input) async throws -> Operations.delelteSubjectFromIndexByIndexIdAndSubjectID.Output
    /// Collect index for current user
    ///
    /// 为当前用户收藏一条目录
    ///
    /// - Remark: HTTP `POST /v0/indices/{index_id}/collect`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/collect/post(collectIndexByIndexIdAndUserId)`.
    func collectIndexByIndexIdAndUserId(_ input: Operations.collectIndexByIndexIdAndUserId.Input) async throws -> Operations.collectIndexByIndexIdAndUserId.Output
    /// Uncollect index for current user
    ///
    /// 为当前用户取消收藏一条目录
    ///
    /// - Remark: HTTP `DELETE /v0/indices/{index_id}/collect`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/collect/delete(uncollectIndexByIndexIdAndUserId)`.
    func uncollectIndexByIndexIdAndUserId(_ input: Operations.uncollectIndexByIndexIdAndUserId.Input) async throws -> Operations.uncollectIndexByIndexIdAndUserId.Output
}

/// Convenience overloads for operation inputs.
extension APIProtocol {
    /// 条目搜索
    ///
    /// ## 实验性 API， 本 schema 和实际的 API 行为都可能随时发生改动
    ///
    /// 目前支持的筛选条件包括:
    /// - `type`: 条目类型，参照 `SubjectType` enum， `或`。
    /// - `tag`: 标签，可以多次出现。`且` 关系。
    /// - `airdate`: 播出日期/发售日期。`且` 关系。
    /// - `rating`: 用于搜索指定评分的条目。`且` 关系。
    /// - `rank`: 用于搜索指定排名的条目。`且` 关系。
    /// - `nsfw`: 使用 `include` 包含NSFW搜索结果。默认排除搜索NSFW条目。无权限情况下忽略此选项，不会返回NSFW条目。
    ///
    /// 不同筛选条件之间为 `且`
    ///
    ///
    /// 由于目前 meilisearch 的一些问题，条目排名更新并不会触发搜索数据更新，所以条目排名可能是过期数据。
    ///
    /// 希望未来版本的 meilisearch 能解决相关的问题。
    ///
    ///
    /// - Remark: HTTP `POST /v0/search/subjects`.
    /// - Remark: Generated from `#/paths//v0/search/subjects/post(searchSubjects)`.
    internal func searchSubjects(
        query: Operations.searchSubjects.Input.Query = .init(),
        headers: Operations.searchSubjects.Input.Headers = .init(),
        body: Operations.searchSubjects.Input.Body? = nil
    ) async throws -> Operations.searchSubjects.Output {
        try await searchSubjects(Operations.searchSubjects.Input(
            query: query,
            headers: headers,
            body: body
        ))
    }
    /// 浏览条目
    ///
    /// 第一页会 cache 24h，之后会 cache 1h
    ///
    /// - Remark: HTTP `GET /v0/subjects`.
    /// - Remark: Generated from `#/paths//v0/subjects/get(getSubjects)`.
    internal func getSubjects(
        query: Operations.getSubjects.Input.Query,
        headers: Operations.getSubjects.Input.Headers = .init()
    ) async throws -> Operations.getSubjects.Output {
        try await getSubjects(Operations.getSubjects.Input(
            query: query,
            headers: headers
        ))
    }
    /// 获取条目
    ///
    /// cache with 300s
    ///
    /// - Remark: HTTP `GET /v0/subjects/{subject_id}`.
    /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/get(getSubjectById)`.
    internal func getSubjectById(
        path: Operations.getSubjectById.Input.Path,
        headers: Operations.getSubjectById.Input.Headers = .init()
    ) async throws -> Operations.getSubjectById.Output {
        try await getSubjectById(Operations.getSubjectById.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get Subject Image
    ///
    /// - Remark: HTTP `GET /v0/subjects/{subject_id}/image`.
    /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/image/get(getSubjectImageById)`.
    internal func getSubjectImageById(
        path: Operations.getSubjectImageById.Input.Path,
        query: Operations.getSubjectImageById.Input.Query,
        headers: Operations.getSubjectImageById.Input.Headers = .init()
    ) async throws -> Operations.getSubjectImageById.Output {
        try await getSubjectImageById(Operations.getSubjectImageById.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Get Subject Persons
    ///
    /// - Remark: HTTP `GET /v0/subjects/{subject_id}/persons`.
    /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/persons/get(getRelatedPersonsBySubjectId)`.
    internal func getRelatedPersonsBySubjectId(
        path: Operations.getRelatedPersonsBySubjectId.Input.Path,
        headers: Operations.getRelatedPersonsBySubjectId.Input.Headers = .init()
    ) async throws -> Operations.getRelatedPersonsBySubjectId.Output {
        try await getRelatedPersonsBySubjectId(Operations.getRelatedPersonsBySubjectId.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get Subject Characters
    ///
    /// - Remark: HTTP `GET /v0/subjects/{subject_id}/characters`.
    /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/characters/get(getRelatedCharactersBySubjectId)`.
    internal func getRelatedCharactersBySubjectId(
        path: Operations.getRelatedCharactersBySubjectId.Input.Path,
        headers: Operations.getRelatedCharactersBySubjectId.Input.Headers = .init()
    ) async throws -> Operations.getRelatedCharactersBySubjectId.Output {
        try await getRelatedCharactersBySubjectId(Operations.getRelatedCharactersBySubjectId.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get Subject Relations
    ///
    /// - Remark: HTTP `GET /v0/subjects/{subject_id}/subjects`.
    /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/subjects/get(getRelatedSubjectsBySubjectId)`.
    internal func getRelatedSubjectsBySubjectId(
        path: Operations.getRelatedSubjectsBySubjectId.Input.Path,
        headers: Operations.getRelatedSubjectsBySubjectId.Input.Headers = .init()
    ) async throws -> Operations.getRelatedSubjectsBySubjectId.Output {
        try await getRelatedSubjectsBySubjectId(Operations.getRelatedSubjectsBySubjectId.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get Episodes
    ///
    /// - Remark: HTTP `GET /v0/episodes`.
    /// - Remark: Generated from `#/paths//v0/episodes/get(getEpisodes)`.
    internal func getEpisodes(
        query: Operations.getEpisodes.Input.Query,
        headers: Operations.getEpisodes.Input.Headers = .init()
    ) async throws -> Operations.getEpisodes.Output {
        try await getEpisodes(Operations.getEpisodes.Input(
            query: query,
            headers: headers
        ))
    }
    /// Get Episode
    ///
    /// - Remark: HTTP `GET /v0/episodes/{episode_id}`.
    /// - Remark: Generated from `#/paths//v0/episodes/{episode_id}/get(getEpisodeById)`.
    internal func getEpisodeById(
        path: Operations.getEpisodeById.Input.Path,
        headers: Operations.getEpisodeById.Input.Headers = .init()
    ) async throws -> Operations.getEpisodeById.Output {
        try await getEpisodeById(Operations.getEpisodeById.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get Character Detail
    ///
    /// cache with 60s
    ///
    /// - Remark: HTTP `GET /v0/characters/{character_id}`.
    /// - Remark: Generated from `#/paths//v0/characters/{character_id}/get(getCharacterById)`.
    internal func getCharacterById(
        path: Operations.getCharacterById.Input.Path,
        headers: Operations.getCharacterById.Input.Headers = .init()
    ) async throws -> Operations.getCharacterById.Output {
        try await getCharacterById(Operations.getCharacterById.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get Character Image
    ///
    /// - Remark: HTTP `GET /v0/characters/{character_id}/image`.
    /// - Remark: Generated from `#/paths//v0/characters/{character_id}/image/get(getCharacterImageById)`.
    internal func getCharacterImageById(
        path: Operations.getCharacterImageById.Input.Path,
        query: Operations.getCharacterImageById.Input.Query,
        headers: Operations.getCharacterImageById.Input.Headers = .init()
    ) async throws -> Operations.getCharacterImageById.Output {
        try await getCharacterImageById(Operations.getCharacterImageById.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// get character related subjects
    ///
    /// - Remark: HTTP `GET /v0/characters/{character_id}/subjects`.
    /// - Remark: Generated from `#/paths//v0/characters/{character_id}/subjects/get(getRelatedSubjectsByCharacterId)`.
    internal func getRelatedSubjectsByCharacterId(
        path: Operations.getRelatedSubjectsByCharacterId.Input.Path,
        headers: Operations.getRelatedSubjectsByCharacterId.Input.Headers = .init()
    ) async throws -> Operations.getRelatedSubjectsByCharacterId.Output {
        try await getRelatedSubjectsByCharacterId(Operations.getRelatedSubjectsByCharacterId.Input(
            path: path,
            headers: headers
        ))
    }
    /// get character related persons
    ///
    /// - Remark: HTTP `GET /v0/characters/{character_id}/persons`.
    /// - Remark: Generated from `#/paths//v0/characters/{character_id}/persons/get(getRelatedPersonsByCharacterId)`.
    internal func getRelatedPersonsByCharacterId(
        path: Operations.getRelatedPersonsByCharacterId.Input.Path,
        headers: Operations.getRelatedPersonsByCharacterId.Input.Headers = .init()
    ) async throws -> Operations.getRelatedPersonsByCharacterId.Output {
        try await getRelatedPersonsByCharacterId(Operations.getRelatedPersonsByCharacterId.Input(
            path: path,
            headers: headers
        ))
    }
    /// Collect character for current user
    ///
    /// 为当前用户收藏角色
    ///
    /// - Remark: HTTP `POST /v0/characters/{character_id}/collect`.
    /// - Remark: Generated from `#/paths//v0/characters/{character_id}/collect/post(collectCharacterByCharacterIdAndUserId)`.
    internal func collectCharacterByCharacterIdAndUserId(
        path: Operations.collectCharacterByCharacterIdAndUserId.Input.Path,
        headers: Operations.collectCharacterByCharacterIdAndUserId.Input.Headers = .init()
    ) async throws -> Operations.collectCharacterByCharacterIdAndUserId.Output {
        try await collectCharacterByCharacterIdAndUserId(Operations.collectCharacterByCharacterIdAndUserId.Input(
            path: path,
            headers: headers
        ))
    }
    /// Uncollect character for current user
    ///
    /// 为当前用户取消收藏角色
    ///
    /// - Remark: HTTP `DELETE /v0/characters/{character_id}/collect`.
    /// - Remark: Generated from `#/paths//v0/characters/{character_id}/collect/delete(uncollectCharacterByCharacterIdAndUserId)`.
    internal func uncollectCharacterByCharacterIdAndUserId(
        path: Operations.uncollectCharacterByCharacterIdAndUserId.Input.Path,
        headers: Operations.uncollectCharacterByCharacterIdAndUserId.Input.Headers = .init()
    ) async throws -> Operations.uncollectCharacterByCharacterIdAndUserId.Output {
        try await uncollectCharacterByCharacterIdAndUserId(Operations.uncollectCharacterByCharacterIdAndUserId.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get Person
    ///
    /// cache with 60s
    ///
    /// - Remark: HTTP `GET /v0/persons/{person_id}`.
    /// - Remark: Generated from `#/paths//v0/persons/{person_id}/get(getPersonById)`.
    internal func getPersonById(
        path: Operations.getPersonById.Input.Path,
        headers: Operations.getPersonById.Input.Headers = .init()
    ) async throws -> Operations.getPersonById.Output {
        try await getPersonById(Operations.getPersonById.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get Person Image
    ///
    /// - Remark: HTTP `GET /v0/persons/{person_id}/image`.
    /// - Remark: Generated from `#/paths//v0/persons/{person_id}/image/get(getPersonImageById)`.
    internal func getPersonImageById(
        path: Operations.getPersonImageById.Input.Path,
        query: Operations.getPersonImageById.Input.Query,
        headers: Operations.getPersonImageById.Input.Headers = .init()
    ) async throws -> Operations.getPersonImageById.Output {
        try await getPersonImageById(Operations.getPersonImageById.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// get person related subjects
    ///
    /// - Remark: HTTP `GET /v0/persons/{person_id}/subjects`.
    /// - Remark: Generated from `#/paths//v0/persons/{person_id}/subjects/get(getRelatedSubjectsByPersonId)`.
    internal func getRelatedSubjectsByPersonId(
        path: Operations.getRelatedSubjectsByPersonId.Input.Path,
        headers: Operations.getRelatedSubjectsByPersonId.Input.Headers = .init()
    ) async throws -> Operations.getRelatedSubjectsByPersonId.Output {
        try await getRelatedSubjectsByPersonId(Operations.getRelatedSubjectsByPersonId.Input(
            path: path,
            headers: headers
        ))
    }
    /// get person related characters
    ///
    /// - Remark: HTTP `GET /v0/persons/{person_id}/characters`.
    /// - Remark: Generated from `#/paths//v0/persons/{person_id}/characters/get(getRelatedCharactersByPersonId)`.
    internal func getRelatedCharactersByPersonId(
        path: Operations.getRelatedCharactersByPersonId.Input.Path,
        headers: Operations.getRelatedCharactersByPersonId.Input.Headers = .init()
    ) async throws -> Operations.getRelatedCharactersByPersonId.Output {
        try await getRelatedCharactersByPersonId(Operations.getRelatedCharactersByPersonId.Input(
            path: path,
            headers: headers
        ))
    }
    /// Collect person for current user
    ///
    /// 为当前用户收藏人物
    ///
    /// - Remark: HTTP `POST /v0/persons/{person_id}/collect`.
    /// - Remark: Generated from `#/paths//v0/persons/{person_id}/collect/post(collectPersonByPersonIdAndUserId)`.
    internal func collectPersonByPersonIdAndUserId(
        path: Operations.collectPersonByPersonIdAndUserId.Input.Path,
        headers: Operations.collectPersonByPersonIdAndUserId.Input.Headers = .init()
    ) async throws -> Operations.collectPersonByPersonIdAndUserId.Output {
        try await collectPersonByPersonIdAndUserId(Operations.collectPersonByPersonIdAndUserId.Input(
            path: path,
            headers: headers
        ))
    }
    /// Uncollect person for current user
    ///
    /// 为当前用户取消收藏人物
    ///
    /// - Remark: HTTP `DELETE /v0/persons/{person_id}/collect`.
    /// - Remark: Generated from `#/paths//v0/persons/{person_id}/collect/delete(uncollectPersonByPersonIdAndUserId)`.
    internal func uncollectPersonByPersonIdAndUserId(
        path: Operations.uncollectPersonByPersonIdAndUserId.Input.Path,
        headers: Operations.uncollectPersonByPersonIdAndUserId.Input.Headers = .init()
    ) async throws -> Operations.uncollectPersonByPersonIdAndUserId.Output {
        try await uncollectPersonByPersonIdAndUserId(Operations.uncollectPersonByPersonIdAndUserId.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get User by name
    ///
    /// 获取用户信息
    ///
    /// - Remark: HTTP `GET /v0/users/{username}`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/get(getUserByName)`.
    internal func getUserByName(
        path: Operations.getUserByName.Input.Path,
        headers: Operations.getUserByName.Input.Headers = .init()
    ) async throws -> Operations.getUserByName.Output {
        try await getUserByName(Operations.getUserByName.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get User Avatar by name
    ///
    /// 获取用户头像，302 重定向至头像地址，设置了 username 之后无法使用 UID 查询。
    ///
    /// - Remark: HTTP `GET /v0/users/{username}/avatar`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/avatar/get(getUserAvatarByName)`.
    internal func getUserAvatarByName(
        path: Operations.getUserAvatarByName.Input.Path,
        query: Operations.getUserAvatarByName.Input.Query,
        headers: Operations.getUserAvatarByName.Input.Headers = .init()
    ) async throws -> Operations.getUserAvatarByName.Output {
        try await getUserAvatarByName(Operations.getUserAvatarByName.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Get User
    ///
    /// 返回当前 Access Token 对应的用户信息
    ///
    /// - Remark: HTTP `GET /v0/me`.
    /// - Remark: Generated from `#/paths//v0/me/get(getMyself)`.
    internal func getMyself(headers: Operations.getMyself.Input.Headers = .init()) async throws -> Operations.getMyself.Output {
        try await getMyself(Operations.getMyself.Input(headers: headers))
    }
    /// 获取用户收藏
    ///
    /// 获取对应用户的收藏，查看私有收藏需要access token。
    ///
    /// - Remark: HTTP `GET /v0/users/{username}/collections`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/collections/get(getUserCollectionsByUsername)`.
    internal func getUserCollectionsByUsername(
        path: Operations.getUserCollectionsByUsername.Input.Path,
        query: Operations.getUserCollectionsByUsername.Input.Query = .init(),
        headers: Operations.getUserCollectionsByUsername.Input.Headers = .init()
    ) async throws -> Operations.getUserCollectionsByUsername.Output {
        try await getUserCollectionsByUsername(Operations.getUserCollectionsByUsername.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// 获取用户单个条目收藏
    ///
    /// 获取对应用户的收藏，查看私有收藏需要 access token
    ///
    /// - Remark: HTTP `GET /v0/users/{username}/collections/{subject_id}`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/collections/{subject_id}/get(getUserCollection)`.
    internal func getUserCollection(
        path: Operations.getUserCollection.Input.Path,
        headers: Operations.getUserCollection.Input.Headers = .init()
    ) async throws -> Operations.getUserCollection.Output {
        try await getUserCollection(Operations.getUserCollection.Input(
            path: path,
            headers: headers
        ))
    }
    /// 新增或修改用户单个条目收藏
    ///
    /// 修改条目收藏状态, 如果不存在则创建，如果存在则修改
    ///
    /// 由于直接修改剧集条目的完成度可能会引起意料之外效果，只能用于修改书籍类条目的完成度。
    ///
    /// 方法的所有请求体字段均可选
    ///
    ///
    /// - Remark: HTTP `POST /v0/users/-/collections/{subject_id}`.
    /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/post(postUserCollection)`.
    internal func postUserCollection(
        path: Operations.postUserCollection.Input.Path,
        headers: Operations.postUserCollection.Input.Headers = .init(),
        body: Operations.postUserCollection.Input.Body? = nil
    ) async throws -> Operations.postUserCollection.Output {
        try await postUserCollection(Operations.postUserCollection.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// 修改用户单个收藏
    ///
    /// 修改条目收藏状态
    ///
    /// 由于直接修改剧集条目的完成度可能会引起意料之外效果，只能用于修改书籍类条目的完成度。
    ///
    /// PATCH 方法的所有请求体字段均可选
    ///
    ///
    /// - Remark: HTTP `PATCH /v0/users/-/collections/{subject_id}`.
    /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/patch(patchUserCollection)`.
    internal func patchUserCollection(
        path: Operations.patchUserCollection.Input.Path,
        headers: Operations.patchUserCollection.Input.Headers = .init(),
        body: Operations.patchUserCollection.Input.Body? = nil
    ) async throws -> Operations.patchUserCollection.Output {
        try await patchUserCollection(Operations.patchUserCollection.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// 章节收藏信息
    ///
    /// - Remark: HTTP `GET /v0/users/-/collections/{subject_id}/episodes`.
    /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/episodes/get(getUserSubjectEpisodeCollection)`.
    internal func getUserSubjectEpisodeCollection(
        path: Operations.getUserSubjectEpisodeCollection.Input.Path,
        query: Operations.getUserSubjectEpisodeCollection.Input.Query = .init(),
        headers: Operations.getUserSubjectEpisodeCollection.Input.Headers = .init()
    ) async throws -> Operations.getUserSubjectEpisodeCollection.Output {
        try await getUserSubjectEpisodeCollection(Operations.getUserSubjectEpisodeCollection.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// 章节收藏信息
    ///
    /// 同时会重新计算条目的完成度
    ///
    ///
    /// - Remark: HTTP `PATCH /v0/users/-/collections/{subject_id}/episodes`.
    /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/episodes/patch(patchUserSubjectEpisodeCollection)`.
    internal func patchUserSubjectEpisodeCollection(
        path: Operations.patchUserSubjectEpisodeCollection.Input.Path,
        headers: Operations.patchUserSubjectEpisodeCollection.Input.Headers = .init(),
        body: Operations.patchUserSubjectEpisodeCollection.Input.Body? = nil
    ) async throws -> Operations.patchUserSubjectEpisodeCollection.Output {
        try await patchUserSubjectEpisodeCollection(Operations.patchUserSubjectEpisodeCollection.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// 章节收藏信息
    ///
    /// - Remark: HTTP `GET /v0/users/-/collections/-/episodes/{episode_id}`.
    /// - Remark: Generated from `#/paths//v0/users/-/collections/-/episodes/{episode_id}/get(getUserEpisodeCollection)`.
    internal func getUserEpisodeCollection(
        path: Operations.getUserEpisodeCollection.Input.Path,
        headers: Operations.getUserEpisodeCollection.Input.Headers = .init()
    ) async throws -> Operations.getUserEpisodeCollection.Output {
        try await getUserEpisodeCollection(Operations.getUserEpisodeCollection.Input(
            path: path,
            headers: headers
        ))
    }
    /// 更新章节收藏信息
    ///
    /// - Remark: HTTP `PUT /v0/users/-/collections/-/episodes/{episode_id}`.
    /// - Remark: Generated from `#/paths//v0/users/-/collections/-/episodes/{episode_id}/put(putUserEpisodeCollection)`.
    internal func putUserEpisodeCollection(
        path: Operations.putUserEpisodeCollection.Input.Path,
        headers: Operations.putUserEpisodeCollection.Input.Headers = .init(),
        body: Operations.putUserEpisodeCollection.Input.Body? = nil
    ) async throws -> Operations.putUserEpisodeCollection.Output {
        try await putUserEpisodeCollection(Operations.putUserEpisodeCollection.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// 获取用户角色收藏列表
    ///
    /// - Remark: HTTP `GET /v0/users/{username}/collections/-/characters`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/collections/-/characters/get(getUserCharacterCollections)`.
    internal func getUserCharacterCollections(
        path: Operations.getUserCharacterCollections.Input.Path,
        headers: Operations.getUserCharacterCollections.Input.Headers = .init()
    ) async throws -> Operations.getUserCharacterCollections.Output {
        try await getUserCharacterCollections(Operations.getUserCharacterCollections.Input(
            path: path,
            headers: headers
        ))
    }
    /// 获取用户单个角色收藏信息
    ///
    /// - Remark: HTTP `GET /v0/users/{username}/collections/-/characters/{character_id}`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/collections/-/characters/{character_id}/get(getUserCharacterCollection)`.
    internal func getUserCharacterCollection(
        path: Operations.getUserCharacterCollection.Input.Path,
        headers: Operations.getUserCharacterCollection.Input.Headers = .init()
    ) async throws -> Operations.getUserCharacterCollection.Output {
        try await getUserCharacterCollection(Operations.getUserCharacterCollection.Input(
            path: path,
            headers: headers
        ))
    }
    /// 获取用户人物收藏列表
    ///
    /// - Remark: HTTP `GET /v0/users/{username}/collections/-/persons`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/collections/-/persons/get(getUserPersonCollections)`.
    internal func getUserPersonCollections(
        path: Operations.getUserPersonCollections.Input.Path,
        headers: Operations.getUserPersonCollections.Input.Headers = .init()
    ) async throws -> Operations.getUserPersonCollections.Output {
        try await getUserPersonCollections(Operations.getUserPersonCollections.Input(
            path: path,
            headers: headers
        ))
    }
    /// 获取用户单个人物收藏信息
    ///
    /// - Remark: HTTP `GET /v0/users/{username}/collections/-/persons/{person_id}`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/collections/-/persons/{person_id}/get(getUserPersonCollection)`.
    internal func getUserPersonCollection(
        path: Operations.getUserPersonCollection.Input.Path,
        headers: Operations.getUserPersonCollection.Input.Headers = .init()
    ) async throws -> Operations.getUserPersonCollection.Output {
        try await getUserPersonCollection(Operations.getUserPersonCollection.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get Person Revisions
    ///
    /// - Remark: HTTP `GET /v0/revisions/persons`.
    /// - Remark: Generated from `#/paths//v0/revisions/persons/get(getPersonRevisions)`.
    internal func getPersonRevisions(
        query: Operations.getPersonRevisions.Input.Query,
        headers: Operations.getPersonRevisions.Input.Headers = .init()
    ) async throws -> Operations.getPersonRevisions.Output {
        try await getPersonRevisions(Operations.getPersonRevisions.Input(
            query: query,
            headers: headers
        ))
    }
    /// Get Person Revision
    ///
    /// - Remark: HTTP `GET /v0/revisions/persons/{revision_id}`.
    /// - Remark: Generated from `#/paths//v0/revisions/persons/{revision_id}/get(getPersonRevisionByRevisionId)`.
    internal func getPersonRevisionByRevisionId(
        path: Operations.getPersonRevisionByRevisionId.Input.Path,
        headers: Operations.getPersonRevisionByRevisionId.Input.Headers = .init()
    ) async throws -> Operations.getPersonRevisionByRevisionId.Output {
        try await getPersonRevisionByRevisionId(Operations.getPersonRevisionByRevisionId.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get Character Revisions
    ///
    /// - Remark: HTTP `GET /v0/revisions/characters`.
    /// - Remark: Generated from `#/paths//v0/revisions/characters/get(getCharacterRevisions)`.
    internal func getCharacterRevisions(
        query: Operations.getCharacterRevisions.Input.Query,
        headers: Operations.getCharacterRevisions.Input.Headers = .init()
    ) async throws -> Operations.getCharacterRevisions.Output {
        try await getCharacterRevisions(Operations.getCharacterRevisions.Input(
            query: query,
            headers: headers
        ))
    }
    /// Get Character Revision
    ///
    /// - Remark: HTTP `GET /v0/revisions/characters/{revision_id}`.
    /// - Remark: Generated from `#/paths//v0/revisions/characters/{revision_id}/get(getCharacterRevisionByRevisionId)`.
    internal func getCharacterRevisionByRevisionId(
        path: Operations.getCharacterRevisionByRevisionId.Input.Path,
        headers: Operations.getCharacterRevisionByRevisionId.Input.Headers = .init()
    ) async throws -> Operations.getCharacterRevisionByRevisionId.Output {
        try await getCharacterRevisionByRevisionId(Operations.getCharacterRevisionByRevisionId.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get Subject Revisions
    ///
    /// - Remark: HTTP `GET /v0/revisions/subjects`.
    /// - Remark: Generated from `#/paths//v0/revisions/subjects/get(getSubjectRevisions)`.
    internal func getSubjectRevisions(
        query: Operations.getSubjectRevisions.Input.Query,
        headers: Operations.getSubjectRevisions.Input.Headers = .init()
    ) async throws -> Operations.getSubjectRevisions.Output {
        try await getSubjectRevisions(Operations.getSubjectRevisions.Input(
            query: query,
            headers: headers
        ))
    }
    /// Get Subject Revision
    ///
    /// - Remark: HTTP `GET /v0/revisions/subjects/{revision_id}`.
    /// - Remark: Generated from `#/paths//v0/revisions/subjects/{revision_id}/get(getSubjectRevisionByRevisionId)`.
    internal func getSubjectRevisionByRevisionId(
        path: Operations.getSubjectRevisionByRevisionId.Input.Path,
        headers: Operations.getSubjectRevisionByRevisionId.Input.Headers = .init()
    ) async throws -> Operations.getSubjectRevisionByRevisionId.Output {
        try await getSubjectRevisionByRevisionId(Operations.getSubjectRevisionByRevisionId.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get Episode Revisions
    ///
    /// - Remark: HTTP `GET /v0/revisions/episodes`.
    /// - Remark: Generated from `#/paths//v0/revisions/episodes/get(getEpisodeRevisions)`.
    internal func getEpisodeRevisions(
        query: Operations.getEpisodeRevisions.Input.Query,
        headers: Operations.getEpisodeRevisions.Input.Headers = .init()
    ) async throws -> Operations.getEpisodeRevisions.Output {
        try await getEpisodeRevisions(Operations.getEpisodeRevisions.Input(
            query: query,
            headers: headers
        ))
    }
    /// Get Episode Revision
    ///
    /// - Remark: HTTP `GET /v0/revisions/episodes/{revision_id}`.
    /// - Remark: Generated from `#/paths//v0/revisions/episodes/{revision_id}/get(getEpisodeRevisionByRevisionId)`.
    internal func getEpisodeRevisionByRevisionId(
        path: Operations.getEpisodeRevisionByRevisionId.Input.Path,
        headers: Operations.getEpisodeRevisionByRevisionId.Input.Headers = .init()
    ) async throws -> Operations.getEpisodeRevisionByRevisionId.Output {
        try await getEpisodeRevisionByRevisionId(Operations.getEpisodeRevisionByRevisionId.Input(
            path: path,
            headers: headers
        ))
    }
    /// Create a new index
    ///
    /// - Remark: HTTP `POST /v0/indices`.
    /// - Remark: Generated from `#/paths//v0/indices/post(newIndex)`.
    internal func newIndex(headers: Operations.newIndex.Input.Headers = .init()) async throws -> Operations.newIndex.Output {
        try await newIndex(Operations.newIndex.Input(headers: headers))
    }
    /// Get Index By ID
    ///
    /// - Remark: HTTP `GET /v0/indices/{index_id}`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/get(getIndexById)`.
    internal func getIndexById(
        path: Operations.getIndexById.Input.Path,
        headers: Operations.getIndexById.Input.Headers = .init()
    ) async throws -> Operations.getIndexById.Output {
        try await getIndexById(Operations.getIndexById.Input(
            path: path,
            headers: headers
        ))
    }
    /// Edit index's information
    ///
    /// - Remark: HTTP `PUT /v0/indices/{index_id}`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/put(editIndexById)`.
    internal func editIndexById(
        path: Operations.editIndexById.Input.Path,
        headers: Operations.editIndexById.Input.Headers = .init(),
        body: Operations.editIndexById.Input.Body? = nil
    ) async throws -> Operations.editIndexById.Output {
        try await editIndexById(Operations.editIndexById.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Get Index Subjects
    ///
    /// - Remark: HTTP `GET /v0/indices/{index_id}/subjects`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/get(getIndexSubjectsByIndexId)`.
    internal func getIndexSubjectsByIndexId(
        path: Operations.getIndexSubjectsByIndexId.Input.Path,
        query: Operations.getIndexSubjectsByIndexId.Input.Query = .init(),
        headers: Operations.getIndexSubjectsByIndexId.Input.Headers = .init()
    ) async throws -> Operations.getIndexSubjectsByIndexId.Output {
        try await getIndexSubjectsByIndexId(Operations.getIndexSubjectsByIndexId.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Add a subject to Index
    ///
    /// - Remark: HTTP `POST /v0/indices/{index_id}/subjects`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/post(addSubjectToIndexByIndexId)`.
    internal func addSubjectToIndexByIndexId(
        path: Operations.addSubjectToIndexByIndexId.Input.Path,
        headers: Operations.addSubjectToIndexByIndexId.Input.Headers = .init(),
        body: Operations.addSubjectToIndexByIndexId.Input.Body? = nil
    ) async throws -> Operations.addSubjectToIndexByIndexId.Output {
        try await addSubjectToIndexByIndexId(Operations.addSubjectToIndexByIndexId.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Edit subject information in a index
    ///
    /// 如果条目不存在于目录，会创建该条目
    ///
    /// - Remark: HTTP `PUT /v0/indices/{index_id}/subjects/{subject_id}`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/{subject_id}/put(editIndexSubjectsByIndexIdAndSubjectID)`.
    internal func editIndexSubjectsByIndexIdAndSubjectID(
        path: Operations.editIndexSubjectsByIndexIdAndSubjectID.Input.Path,
        headers: Operations.editIndexSubjectsByIndexIdAndSubjectID.Input.Headers = .init(),
        body: Operations.editIndexSubjectsByIndexIdAndSubjectID.Input.Body? = nil
    ) async throws -> Operations.editIndexSubjectsByIndexIdAndSubjectID.Output {
        try await editIndexSubjectsByIndexIdAndSubjectID(Operations.editIndexSubjectsByIndexIdAndSubjectID.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete a subject from a Index
    ///
    /// - Remark: HTTP `DELETE /v0/indices/{index_id}/subjects/{subject_id}`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/{subject_id}/delete(delelteSubjectFromIndexByIndexIdAndSubjectID)`.
    internal func delelteSubjectFromIndexByIndexIdAndSubjectID(
        path: Operations.delelteSubjectFromIndexByIndexIdAndSubjectID.Input.Path,
        headers: Operations.delelteSubjectFromIndexByIndexIdAndSubjectID.Input.Headers = .init()
    ) async throws -> Operations.delelteSubjectFromIndexByIndexIdAndSubjectID.Output {
        try await delelteSubjectFromIndexByIndexIdAndSubjectID(Operations.delelteSubjectFromIndexByIndexIdAndSubjectID.Input(
            path: path,
            headers: headers
        ))
    }
    /// Collect index for current user
    ///
    /// 为当前用户收藏一条目录
    ///
    /// - Remark: HTTP `POST /v0/indices/{index_id}/collect`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/collect/post(collectIndexByIndexIdAndUserId)`.
    internal func collectIndexByIndexIdAndUserId(
        path: Operations.collectIndexByIndexIdAndUserId.Input.Path,
        headers: Operations.collectIndexByIndexIdAndUserId.Input.Headers = .init()
    ) async throws -> Operations.collectIndexByIndexIdAndUserId.Output {
        try await collectIndexByIndexIdAndUserId(Operations.collectIndexByIndexIdAndUserId.Input(
            path: path,
            headers: headers
        ))
    }
    /// Uncollect index for current user
    ///
    /// 为当前用户取消收藏一条目录
    ///
    /// - Remark: HTTP `DELETE /v0/indices/{index_id}/collect`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/collect/delete(uncollectIndexByIndexIdAndUserId)`.
    internal func uncollectIndexByIndexIdAndUserId(
        path: Operations.uncollectIndexByIndexIdAndUserId.Input.Path,
        headers: Operations.uncollectIndexByIndexIdAndUserId.Input.Headers = .init()
    ) async throws -> Operations.uncollectIndexByIndexIdAndUserId.Output {
        try await uncollectIndexByIndexIdAndUserId(Operations.uncollectIndexByIndexIdAndUserId.Input(
            path: path,
            headers: headers
        ))
    }
}

/// Server URLs defined in the OpenAPI document.
internal enum Servers {}

/// Types generated from the components section of the OpenAPI document.
internal enum Components {
    /// Types generated from the `#/components/schemas` section of the OpenAPI document.
    internal enum Schemas {
        /// 条目 ID
        ///
        /// - Remark: Generated from `#/components/schemas/SubjectID`.
        internal typealias SubjectID = Swift.Int
        /// 实际的返回值可能包括文档未声明的 `url` 字段，此字段主要用于开发者从 api 响应直接转跳到网页。
        /// 客户端开发者请不用依赖于此特性，此字段的值随时可能会改变。
        ///
        ///
        /// - Remark: Generated from `#/components/schemas/User`.
        internal struct User: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/User/id`.
            internal var id: Swift.Int
            /// 唯一用户名，初始与 UID 相同，可修改一次
            ///
            /// - Remark: Generated from `#/components/schemas/User/username`.
            internal var username: Swift.String
            /// - Remark: Generated from `#/components/schemas/User/nickname`.
            internal var nickname: Swift.String
            /// - Remark: Generated from `#/components/schemas/User/user_group`.
            internal var user_group: Components.Schemas.UserGroup
            /// - Remark: Generated from `#/components/schemas/User/avatar`.
            internal var avatar: Components.Schemas.Avatar
            /// 个人签名
            ///
            /// - Remark: Generated from `#/components/schemas/User/sign`.
            internal var sign: Swift.String
            /// Creates a new `User`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - username: 唯一用户名，初始与 UID 相同，可修改一次
            ///   - nickname:
            ///   - user_group:
            ///   - avatar:
            ///   - sign: 个人签名
            internal init(
                id: Swift.Int,
                username: Swift.String,
                nickname: Swift.String,
                user_group: Components.Schemas.UserGroup,
                avatar: Components.Schemas.Avatar,
                sign: Swift.String
            ) {
                self.id = id
                self.username = username
                self.nickname = nickname
                self.user_group = user_group
                self.avatar = avatar
                self.sign = sign
            }
            internal enum CodingKeys: String, CodingKey {
                case id
                case username
                case nickname
                case user_group
                case avatar
                case sign
            }
        }
        /// - Remark: Generated from `#/components/schemas/Avatar`.
        internal struct Avatar: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Avatar/large`.
            internal var large: Swift.String
            /// - Remark: Generated from `#/components/schemas/Avatar/medium`.
            internal var medium: Swift.String
            /// - Remark: Generated from `#/components/schemas/Avatar/small`.
            internal var small: Swift.String
            /// Creates a new `Avatar`.
            ///
            /// - Parameters:
            ///   - large:
            ///   - medium:
            ///   - small:
            internal init(
                large: Swift.String,
                medium: Swift.String,
                small: Swift.String
            ) {
                self.large = large
                self.medium = medium
                self.small = small
            }
            internal enum CodingKeys: String, CodingKey {
                case large
                case medium
                case small
            }
        }
        /// 用户组 - 1 = 管理员 - 2 = Bangumi 管理猿 - 3 = 天窗管理猿 - 4 = 禁言用户 - 5 = 禁止访问用户 - 8 = 人物管理猿 - 9 = 维基条目管理猿 - 10 = 用户 - 11 = 维基人
        ///
        /// - Remark: Generated from `#/components/schemas/UserGroup`.
        internal enum UserGroup: Int, Codable, Hashable, Sendable, CaseIterable {
            case _1 = 1
            case _2 = 2
            case _3 = 3
            case _4 = 4
            case _5 = 5
            case _8 = 8
            case _9 = 9
            case _10 = 10
            case _11 = 11
        }
        /// Blood type of a person. A, B, AB, O
        ///
        /// - Remark: Generated from `#/components/schemas/BloodType`.
        internal enum BloodType: Int, Codable, Hashable, Sendable, CaseIterable {
            case _1 = 1
            case _2 = 2
            case _3 = 3
            case _4 = 4
        }
        /// - Remark: Generated from `#/components/schemas/CharacterDetail`.
        internal struct CharacterDetail: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/CharacterDetail/id`.
            internal var id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/CharacterDetail/name`.
            internal var name: Swift.String
            /// 角色，机体，舰船，组织...
            ///
            /// - Remark: Generated from `#/components/schemas/CharacterDetail/type`.
            internal struct _typePayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/CharacterDetail/type/value1`.
                internal var value1: Components.Schemas.CharacterType
                /// Creates a new `_typePayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.CharacterType) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try decoder.decodeFromSingleValueContainer()
                }
                internal func encode(to encoder: any Encoder) throws {
                    try encoder.encodeToSingleValueContainer(value1)
                }
            }
            /// 角色，机体，舰船，组织...
            ///
            /// - Remark: Generated from `#/components/schemas/CharacterDetail/type`.
            internal var _type: Components.Schemas.CharacterDetail._typePayload
            /// object with some size of images, this object maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/CharacterDetail/images`.
            internal struct imagesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/CharacterDetail/images/value1`.
                internal var value1: Components.Schemas.PersonImages
                /// Creates a new `imagesPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.PersonImages) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                }
                internal func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                }
            }
            /// object with some size of images, this object maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/CharacterDetail/images`.
            internal var images: Components.Schemas.CharacterDetail.imagesPayload?
            /// - Remark: Generated from `#/components/schemas/CharacterDetail/summary`.
            internal var summary: Swift.String
            /// - Remark: Generated from `#/components/schemas/CharacterDetail/locked`.
            internal var locked: Swift.Bool
            /// server parsed infobox, a map from key to string or tuple
            /// null if server infobox is not valid
            ///
            /// - Remark: Generated from `#/components/schemas/CharacterDetail/infobox`.
            internal var infobox: [OpenAPIRuntime.OpenAPIObjectContainer]?
            /// parsed from wiki, maybe null
            ///
            /// - Remark: Generated from `#/components/schemas/CharacterDetail/gender`.
            internal var gender: Swift.String?
            /// parsed from wiki, maybe null, `1, 2, 3, 4` for `A, B, AB, O`
            ///
            /// - Remark: Generated from `#/components/schemas/CharacterDetail/blood_type`.
            internal struct blood_typePayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/CharacterDetail/blood_type/value1`.
                internal var value1: Components.Schemas.BloodType
                /// Creates a new `blood_typePayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.BloodType) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try decoder.decodeFromSingleValueContainer()
                }
                internal func encode(to encoder: any Encoder) throws {
                    try encoder.encodeToSingleValueContainer(value1)
                }
            }
            /// parsed from wiki, maybe null, `1, 2, 3, 4` for `A, B, AB, O`
            ///
            /// - Remark: Generated from `#/components/schemas/CharacterDetail/blood_type`.
            internal var blood_type: Components.Schemas.CharacterDetail.blood_typePayload?
            /// parsed from wiki, maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/CharacterDetail/birth_year`.
            internal var birth_year: Swift.Int?
            /// parsed from wiki, maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/CharacterDetail/birth_mon`.
            internal var birth_mon: Swift.Int?
            /// parsed from wiki, maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/CharacterDetail/birth_day`.
            internal var birth_day: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/CharacterDetail/stat`.
            internal var stat: Components.Schemas.Stat
            /// Creates a new `CharacterDetail`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - name:
            ///   - _type: 角色，机体，舰船，组织...
            ///   - images: object with some size of images, this object maybe `null`
            ///   - summary:
            ///   - locked:
            ///   - infobox: server parsed infobox, a map from key to string or tuple
            ///   - gender: parsed from wiki, maybe null
            ///   - blood_type: parsed from wiki, maybe null, `1, 2, 3, 4` for `A, B, AB, O`
            ///   - birth_year: parsed from wiki, maybe `null`
            ///   - birth_mon: parsed from wiki, maybe `null`
            ///   - birth_day: parsed from wiki, maybe `null`
            ///   - stat:
            internal init(
                id: Swift.Int,
                name: Swift.String,
                _type: Components.Schemas.CharacterDetail._typePayload,
                images: Components.Schemas.CharacterDetail.imagesPayload? = nil,
                summary: Swift.String,
                locked: Swift.Bool,
                infobox: [OpenAPIRuntime.OpenAPIObjectContainer]? = nil,
                gender: Swift.String? = nil,
                blood_type: Components.Schemas.CharacterDetail.blood_typePayload? = nil,
                birth_year: Swift.Int? = nil,
                birth_mon: Swift.Int? = nil,
                birth_day: Swift.Int? = nil,
                stat: Components.Schemas.Stat
            ) {
                self.id = id
                self.name = name
                self._type = _type
                self.images = images
                self.summary = summary
                self.locked = locked
                self.infobox = infobox
                self.gender = gender
                self.blood_type = blood_type
                self.birth_year = birth_year
                self.birth_mon = birth_mon
                self.birth_day = birth_day
                self.stat = stat
            }
            internal enum CodingKeys: String, CodingKey {
                case id
                case name
                case _type = "type"
                case images
                case summary
                case locked
                case infobox
                case gender
                case blood_type
                case birth_year
                case birth_mon
                case birth_day
                case stat
            }
        }
        /// - Remark: Generated from `#/components/schemas/CharacterPerson`.
        internal struct CharacterPerson: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/CharacterPerson/id`.
            internal var id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/CharacterPerson/name`.
            internal var name: Swift.String
            /// 角色，机体，舰船，组织...
            ///
            /// - Remark: Generated from `#/components/schemas/CharacterPerson/type`.
            internal struct _typePayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/CharacterPerson/type/value1`.
                internal var value1: Components.Schemas.CharacterType
                /// Creates a new `_typePayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.CharacterType) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try decoder.decodeFromSingleValueContainer()
                }
                internal func encode(to encoder: any Encoder) throws {
                    try encoder.encodeToSingleValueContainer(value1)
                }
            }
            /// 角色，机体，舰船，组织...
            ///
            /// - Remark: Generated from `#/components/schemas/CharacterPerson/type`.
            internal var _type: Components.Schemas.CharacterPerson._typePayload
            /// object with some size of images, this object maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/CharacterPerson/images`.
            internal struct imagesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/CharacterPerson/images/value1`.
                internal var value1: Components.Schemas.PersonImages
                /// Creates a new `imagesPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.PersonImages) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                }
                internal func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                }
            }
            /// object with some size of images, this object maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/CharacterPerson/images`.
            internal var images: Components.Schemas.CharacterPerson.imagesPayload?
            /// - Remark: Generated from `#/components/schemas/CharacterPerson/subject_id`.
            internal var subject_id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/CharacterPerson/subject_type`.
            internal var subject_type: Components.Schemas.SubjectType
            /// - Remark: Generated from `#/components/schemas/CharacterPerson/subject_name`.
            internal var subject_name: Swift.String
            /// - Remark: Generated from `#/components/schemas/CharacterPerson/subject_name_cn`.
            internal var subject_name_cn: Swift.String
            /// - Remark: Generated from `#/components/schemas/CharacterPerson/staff`.
            internal var staff: Swift.String?
            /// Creates a new `CharacterPerson`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - name:
            ///   - _type: 角色，机体，舰船，组织...
            ///   - images: object with some size of images, this object maybe `null`
            ///   - subject_id:
            ///   - subject_type:
            ///   - subject_name:
            ///   - subject_name_cn:
            ///   - staff:
            internal init(
                id: Swift.Int,
                name: Swift.String,
                _type: Components.Schemas.CharacterPerson._typePayload,
                images: Components.Schemas.CharacterPerson.imagesPayload? = nil,
                subject_id: Swift.Int,
                subject_type: Components.Schemas.SubjectType,
                subject_name: Swift.String,
                subject_name_cn: Swift.String,
                staff: Swift.String? = nil
            ) {
                self.id = id
                self.name = name
                self._type = _type
                self.images = images
                self.subject_id = subject_id
                self.subject_type = subject_type
                self.subject_name = subject_name
                self.subject_name_cn = subject_name_cn
                self.staff = staff
            }
            internal enum CodingKeys: String, CodingKey {
                case id
                case name
                case _type = "type"
                case images
                case subject_id
                case subject_type
                case subject_name
                case subject_name_cn
                case staff
            }
        }
        /// type of a character 角色，机体，舰船，组织...
        ///
        /// - Remark: Generated from `#/components/schemas/CharacterType`.
        internal enum CharacterType: Int, Codable, Hashable, Sendable, CaseIterable {
            case _1 = 1
            case _2 = 2
            case _3 = 3
            case _4 = 4
        }
        /// - `1`: 想看
        /// - `2`: 看过
        /// - `3`: 在看
        /// - `4`: 搁置
        /// - `5`: 抛弃
        ///
        /// - Remark: Generated from `#/components/schemas/SubjectCollectionType`.
        internal enum SubjectCollectionType: Int, Codable, Hashable, Sendable, CaseIterable {
            case _1 = 1
            case _2 = 2
            case _3 = 3
            case _4 = 4
            case _5 = 5
        }
        /// - `0`: 未收藏
        /// - `1`: 想看
        /// - `2`: 看过
        /// - `3`: 抛弃
        ///
        /// - Remark: Generated from `#/components/schemas/EpisodeCollectionType`.
        internal enum EpisodeCollectionType: Int, Codable, Hashable, Sendable, CaseIterable {
            case _1 = 1
            case _2 = 2
            case _3 = 3
        }
        /// 意义同<a href="#model-Me">Me</a>
        ///
        /// - Remark: Generated from `#/components/schemas/Creator`.
        internal struct Creator: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Creator/username`.
            internal var username: Swift.String
            /// - Remark: Generated from `#/components/schemas/Creator/nickname`.
            internal var nickname: Swift.String
            /// Creates a new `Creator`.
            ///
            /// - Parameters:
            ///   - username:
            ///   - nickname:
            internal init(
                username: Swift.String,
                nickname: Swift.String
            ) {
                self.username = username
                self.nickname = nickname
            }
            internal enum CodingKeys: String, CodingKey {
                case username
                case nickname
            }
        }
        /// - Remark: Generated from `#/components/schemas/DetailedRevision`.
        internal struct DetailedRevision: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/DetailedRevision/id`.
            internal var id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/DetailedRevision/type`.
            internal var _type: Swift.Int
            /// - Remark: Generated from `#/components/schemas/DetailedRevision/creator`.
            internal var creator: Components.Schemas.Creator?
            /// - Remark: Generated from `#/components/schemas/DetailedRevision/summary`.
            internal var summary: Swift.String
            /// - Remark: Generated from `#/components/schemas/DetailedRevision/created_at`.
            internal var created_at: Foundation.Date
            /// 编辑修改内容，响应类型不固定
            ///
            /// - Remark: Generated from `#/components/schemas/DetailedRevision/data`.
            internal var data: OpenAPIRuntime.OpenAPIObjectContainer?
            /// Creates a new `DetailedRevision`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - _type:
            ///   - creator:
            ///   - summary:
            ///   - created_at:
            ///   - data: 编辑修改内容，响应类型不固定
            internal init(
                id: Swift.Int,
                _type: Swift.Int,
                creator: Components.Schemas.Creator? = nil,
                summary: Swift.String,
                created_at: Foundation.Date,
                data: OpenAPIRuntime.OpenAPIObjectContainer? = nil
            ) {
                self.id = id
                self._type = _type
                self.creator = creator
                self.summary = summary
                self.created_at = created_at
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case id
                case _type = "type"
                case creator
                case summary
                case created_at
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/PersonRevision`.
        internal struct PersonRevision: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/PersonRevision/value1`.
            internal var value1: Components.Schemas.Revision
            /// - Remark: Generated from `#/components/schemas/PersonRevision/value2`.
            internal struct Value2Payload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/PersonRevision/value2/data`.
                internal struct dataPayload: Codable, Hashable, Sendable {
                    /// A container of undocumented properties.
                    internal var additionalProperties: [String: Components.Schemas.PersonRevisionDataItem]
                    /// Creates a new `dataPayload`.
                    ///
                    /// - Parameters:
                    ///   - additionalProperties: A container of undocumented properties.
                    internal init(additionalProperties: [String: Components.Schemas.PersonRevisionDataItem] = .init()) {
                        self.additionalProperties = additionalProperties
                    }
                    internal init(from decoder: any Decoder) throws {
                        additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                    }
                    internal func encode(to encoder: any Encoder) throws {
                        try encoder.encodeAdditionalProperties(additionalProperties)
                    }
                }
                /// - Remark: Generated from `#/components/schemas/PersonRevision/value2/data`.
                internal var data: Components.Schemas.PersonRevision.Value2Payload.dataPayload?
                /// Creates a new `Value2Payload`.
                ///
                /// - Parameters:
                ///   - data:
                internal init(data: Components.Schemas.PersonRevision.Value2Payload.dataPayload? = nil) {
                    self.data = data
                }
                internal enum CodingKeys: String, CodingKey {
                    case data
                }
            }
            /// - Remark: Generated from `#/components/schemas/PersonRevision/value2`.
            internal var value2: Components.Schemas.PersonRevision.Value2Payload
            /// Creates a new `PersonRevision`.
            ///
            /// - Parameters:
            ///   - value1:
            ///   - value2:
            internal init(
                value1: Components.Schemas.Revision,
                value2: Components.Schemas.PersonRevision.Value2Payload
            ) {
                self.value1 = value1
                self.value2 = value2
            }
            internal init(from decoder: any Decoder) throws {
                value1 = try .init(from: decoder)
                value2 = try .init(from: decoder)
            }
            internal func encode(to encoder: any Encoder) throws {
                try value1.encode(to: encoder)
                try value2.encode(to: encoder)
            }
        }
        /// - Remark: Generated from `#/components/schemas/PersonRevisionDataItem`.
        internal struct PersonRevisionDataItem: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/PersonRevisionDataItem/prsn_infobox`.
            internal var prsn_infobox: Swift.String
            /// - Remark: Generated from `#/components/schemas/PersonRevisionDataItem/prsn_summary`.
            internal var prsn_summary: Swift.String
            /// - Remark: Generated from `#/components/schemas/PersonRevisionDataItem/profession`.
            internal var profession: Components.Schemas.PersonRevisionProfession
            /// - Remark: Generated from `#/components/schemas/PersonRevisionDataItem/extra`.
            internal var extra: Components.Schemas.RevisionExtra
            /// - Remark: Generated from `#/components/schemas/PersonRevisionDataItem/prsn_name`.
            internal var prsn_name: Swift.String
            /// Creates a new `PersonRevisionDataItem`.
            ///
            /// - Parameters:
            ///   - prsn_infobox:
            ///   - prsn_summary:
            ///   - profession:
            ///   - extra:
            ///   - prsn_name:
            internal init(
                prsn_infobox: Swift.String,
                prsn_summary: Swift.String,
                profession: Components.Schemas.PersonRevisionProfession,
                extra: Components.Schemas.RevisionExtra,
                prsn_name: Swift.String
            ) {
                self.prsn_infobox = prsn_infobox
                self.prsn_summary = prsn_summary
                self.profession = profession
                self.extra = extra
                self.prsn_name = prsn_name
            }
            internal enum CodingKeys: String, CodingKey {
                case prsn_infobox
                case prsn_summary
                case profession
                case extra
                case prsn_name
            }
        }
        /// - Remark: Generated from `#/components/schemas/PersonRevisionProfession`.
        internal struct PersonRevisionProfession: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/PersonRevisionProfession/producer`.
            internal var producer: Swift.String?
            /// - Remark: Generated from `#/components/schemas/PersonRevisionProfession/mangaka`.
            internal var mangaka: Swift.String?
            /// - Remark: Generated from `#/components/schemas/PersonRevisionProfession/artist`.
            internal var artist: Swift.String?
            /// - Remark: Generated from `#/components/schemas/PersonRevisionProfession/seiyu`.
            internal var seiyu: Swift.String?
            /// - Remark: Generated from `#/components/schemas/PersonRevisionProfession/writer`.
            internal var writer: Swift.String?
            /// - Remark: Generated from `#/components/schemas/PersonRevisionProfession/illustrator`.
            internal var illustrator: Swift.String?
            /// - Remark: Generated from `#/components/schemas/PersonRevisionProfession/actor`.
            internal var actor: Swift.String?
            /// Creates a new `PersonRevisionProfession`.
            ///
            /// - Parameters:
            ///   - producer:
            ///   - mangaka:
            ///   - artist:
            ///   - seiyu:
            ///   - writer:
            ///   - illustrator:
            ///   - actor:
            internal init(
                producer: Swift.String? = nil,
                mangaka: Swift.String? = nil,
                artist: Swift.String? = nil,
                seiyu: Swift.String? = nil,
                writer: Swift.String? = nil,
                illustrator: Swift.String? = nil,
                actor: Swift.String? = nil
            ) {
                self.producer = producer
                self.mangaka = mangaka
                self.artist = artist
                self.seiyu = seiyu
                self.writer = writer
                self.illustrator = illustrator
                self.actor = actor
            }
            internal enum CodingKeys: String, CodingKey {
                case producer
                case mangaka
                case artist
                case seiyu
                case writer
                case illustrator
                case actor
            }
        }
        /// - Remark: Generated from `#/components/schemas/RevisionExtra`.
        internal struct RevisionExtra: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/RevisionExtra/img`.
            internal var img: Swift.String?
            /// Creates a new `RevisionExtra`.
            ///
            /// - Parameters:
            ///   - img:
            internal init(img: Swift.String? = nil) {
                self.img = img
            }
            internal enum CodingKeys: String, CodingKey {
                case img
            }
        }
        /// - Remark: Generated from `#/components/schemas/SubjectRevision`.
        internal struct SubjectRevision: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SubjectRevision/value1`.
            internal var value1: Components.Schemas.Revision
            /// - Remark: Generated from `#/components/schemas/SubjectRevision/value2`.
            internal struct Value2Payload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/SubjectRevision/value2/data`.
                internal var data: Components.Schemas.SubjectRevisionData?
                /// Creates a new `Value2Payload`.
                ///
                /// - Parameters:
                ///   - data:
                internal init(data: Components.Schemas.SubjectRevisionData? = nil) {
                    self.data = data
                }
                internal enum CodingKeys: String, CodingKey {
                    case data
                }
            }
            /// - Remark: Generated from `#/components/schemas/SubjectRevision/value2`.
            internal var value2: Components.Schemas.SubjectRevision.Value2Payload
            /// Creates a new `SubjectRevision`.
            ///
            /// - Parameters:
            ///   - value1:
            ///   - value2:
            internal init(
                value1: Components.Schemas.Revision,
                value2: Components.Schemas.SubjectRevision.Value2Payload
            ) {
                self.value1 = value1
                self.value2 = value2
            }
            internal init(from decoder: any Decoder) throws {
                value1 = try .init(from: decoder)
                value2 = try .init(from: decoder)
            }
            internal func encode(to encoder: any Encoder) throws {
                try value1.encode(to: encoder)
                try value2.encode(to: encoder)
            }
        }
        /// - Remark: Generated from `#/components/schemas/SubjectRevisionData`.
        internal struct SubjectRevisionData: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SubjectRevisionData/field_eps`.
            internal var field_eps: Swift.Int
            /// - Remark: Generated from `#/components/schemas/SubjectRevisionData/field_infobox`.
            internal var field_infobox: Swift.String
            /// - Remark: Generated from `#/components/schemas/SubjectRevisionData/field_summary`.
            internal var field_summary: Swift.String
            /// - Remark: Generated from `#/components/schemas/SubjectRevisionData/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/SubjectRevisionData/name_cn`.
            internal var name_cn: Swift.String
            /// - Remark: Generated from `#/components/schemas/SubjectRevisionData/platform`.
            internal var platform: Swift.Int
            /// - Remark: Generated from `#/components/schemas/SubjectRevisionData/subject_id`.
            internal var subject_id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/SubjectRevisionData/type`.
            internal var _type: Swift.Int
            /// - Remark: Generated from `#/components/schemas/SubjectRevisionData/type_id`.
            internal var type_id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/SubjectRevisionData/vote_field`.
            internal var vote_field: Swift.String
            /// Creates a new `SubjectRevisionData`.
            ///
            /// - Parameters:
            ///   - field_eps:
            ///   - field_infobox:
            ///   - field_summary:
            ///   - name:
            ///   - name_cn:
            ///   - platform:
            ///   - subject_id:
            ///   - _type:
            ///   - type_id:
            ///   - vote_field:
            internal init(
                field_eps: Swift.Int,
                field_infobox: Swift.String,
                field_summary: Swift.String,
                name: Swift.String,
                name_cn: Swift.String,
                platform: Swift.Int,
                subject_id: Swift.Int,
                _type: Swift.Int,
                type_id: Swift.Int,
                vote_field: Swift.String
            ) {
                self.field_eps = field_eps
                self.field_infobox = field_infobox
                self.field_summary = field_summary
                self.name = name
                self.name_cn = name_cn
                self.platform = platform
                self.subject_id = subject_id
                self._type = _type
                self.type_id = type_id
                self.vote_field = vote_field
            }
            internal enum CodingKeys: String, CodingKey {
                case field_eps
                case field_infobox
                case field_summary
                case name
                case name_cn
                case platform
                case subject_id
                case _type = "type"
                case type_id
                case vote_field
            }
        }
        /// - Remark: Generated from `#/components/schemas/CharacterRevision`.
        internal struct CharacterRevision: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/CharacterRevision/value1`.
            internal var value1: Components.Schemas.Revision
            /// - Remark: Generated from `#/components/schemas/CharacterRevision/value2`.
            internal struct Value2Payload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/CharacterRevision/value2/data`.
                internal struct dataPayload: Codable, Hashable, Sendable {
                    /// A container of undocumented properties.
                    internal var additionalProperties: [String: Components.Schemas.CharacterRevisionDataItem]
                    /// Creates a new `dataPayload`.
                    ///
                    /// - Parameters:
                    ///   - additionalProperties: A container of undocumented properties.
                    internal init(additionalProperties: [String: Components.Schemas.CharacterRevisionDataItem] = .init()) {
                        self.additionalProperties = additionalProperties
                    }
                    internal init(from decoder: any Decoder) throws {
                        additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                    }
                    internal func encode(to encoder: any Encoder) throws {
                        try encoder.encodeAdditionalProperties(additionalProperties)
                    }
                }
                /// - Remark: Generated from `#/components/schemas/CharacterRevision/value2/data`.
                internal var data: Components.Schemas.CharacterRevision.Value2Payload.dataPayload?
                /// Creates a new `Value2Payload`.
                ///
                /// - Parameters:
                ///   - data:
                internal init(data: Components.Schemas.CharacterRevision.Value2Payload.dataPayload? = nil) {
                    self.data = data
                }
                internal enum CodingKeys: String, CodingKey {
                    case data
                }
            }
            /// - Remark: Generated from `#/components/schemas/CharacterRevision/value2`.
            internal var value2: Components.Schemas.CharacterRevision.Value2Payload
            /// Creates a new `CharacterRevision`.
            ///
            /// - Parameters:
            ///   - value1:
            ///   - value2:
            internal init(
                value1: Components.Schemas.Revision,
                value2: Components.Schemas.CharacterRevision.Value2Payload
            ) {
                self.value1 = value1
                self.value2 = value2
            }
            internal init(from decoder: any Decoder) throws {
                value1 = try .init(from: decoder)
                value2 = try .init(from: decoder)
            }
            internal func encode(to encoder: any Encoder) throws {
                try value1.encode(to: encoder)
                try value2.encode(to: encoder)
            }
        }
        /// - Remark: Generated from `#/components/schemas/CharacterRevisionDataItem`.
        internal struct CharacterRevisionDataItem: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/CharacterRevisionDataItem/infobox`.
            internal var infobox: Swift.String
            /// - Remark: Generated from `#/components/schemas/CharacterRevisionDataItem/summary`.
            internal var summary: Swift.String
            /// - Remark: Generated from `#/components/schemas/CharacterRevisionDataItem/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/CharacterRevisionDataItem/extra`.
            internal var extra: Components.Schemas.RevisionExtra
            /// Creates a new `CharacterRevisionDataItem`.
            ///
            /// - Parameters:
            ///   - infobox:
            ///   - summary:
            ///   - name:
            ///   - extra:
            internal init(
                infobox: Swift.String,
                summary: Swift.String,
                name: Swift.String,
                extra: Components.Schemas.RevisionExtra
            ) {
                self.infobox = infobox
                self.summary = summary
                self.name = name
                self.extra = extra
            }
            internal enum CodingKeys: String, CodingKey {
                case infobox
                case summary
                case name
                case extra
            }
        }
        /// 本篇 = 0
        /// 特别篇 = 1
        /// OP = 2
        /// ED = 3
        /// 预告/宣传/广告 = 4
        /// MAD = 5
        /// 其他 = 6
        ///
        /// - Remark: Generated from `#/components/schemas/EpType`.
        internal enum EpType: Int, Codable, Hashable, Sendable, CaseIterable {
            case _0 = 0
            case _1 = 1
            case _2 = 2
            case _3 = 3
            case _4 = 4
            case _5 = 5
            case _6 = 6
        }
        /// - Remark: Generated from `#/components/schemas/Episode`.
        internal struct Episode: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Episode/id`.
            internal var id: Swift.Int
            /// `0` 本篇，`1` SP，`2` OP，`3` ED
            ///
            /// - Remark: Generated from `#/components/schemas/Episode/type`.
            internal var _type: Swift.Int
            /// - Remark: Generated from `#/components/schemas/Episode/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/Episode/name_cn`.
            internal var name_cn: Swift.String
            /// 同类条目的排序和集数
            ///
            /// - Remark: Generated from `#/components/schemas/Episode/sort`.
            internal var sort: Swift.Double
            /// 条目内的集数, 从`1`开始。非本篇剧集的此字段无意义
            ///
            /// - Remark: Generated from `#/components/schemas/Episode/ep`.
            internal var ep: Swift.Double?
            /// - Remark: Generated from `#/components/schemas/Episode/airdate`.
            internal var airdate: Swift.String
            /// - Remark: Generated from `#/components/schemas/Episode/comment`.
            internal var comment: Swift.Int
            /// 维基人填写的原始时长
            ///
            /// - Remark: Generated from `#/components/schemas/Episode/duration`.
            internal var duration: Swift.String
            /// 简介
            ///
            /// - Remark: Generated from `#/components/schemas/Episode/desc`.
            internal var desc: Swift.String
            /// 音乐曲目的碟片数
            ///
            /// - Remark: Generated from `#/components/schemas/Episode/disc`.
            internal var disc: Swift.Int
            /// 服务器解析的时长，无法解析时为 `0`
            ///
            /// - Remark: Generated from `#/components/schemas/Episode/duration_seconds`.
            internal var duration_seconds: Swift.Int?
            /// Creates a new `Episode`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - _type: `0` 本篇，`1` SP，`2` OP，`3` ED
            ///   - name:
            ///   - name_cn:
            ///   - sort: 同类条目的排序和集数
            ///   - ep: 条目内的集数, 从`1`开始。非本篇剧集的此字段无意义
            ///   - airdate:
            ///   - comment:
            ///   - duration: 维基人填写的原始时长
            ///   - desc: 简介
            ///   - disc: 音乐曲目的碟片数
            ///   - duration_seconds: 服务器解析的时长，无法解析时为 `0`
            internal init(
                id: Swift.Int,
                _type: Swift.Int,
                name: Swift.String,
                name_cn: Swift.String,
                sort: Swift.Double,
                ep: Swift.Double? = nil,
                airdate: Swift.String,
                comment: Swift.Int,
                duration: Swift.String,
                desc: Swift.String,
                disc: Swift.Int,
                duration_seconds: Swift.Int? = nil
            ) {
                self.id = id
                self._type = _type
                self.name = name
                self.name_cn = name_cn
                self.sort = sort
                self.ep = ep
                self.airdate = airdate
                self.comment = comment
                self.duration = duration
                self.desc = desc
                self.disc = disc
                self.duration_seconds = duration_seconds
            }
            internal enum CodingKeys: String, CodingKey {
                case id
                case _type = "type"
                case name
                case name_cn
                case sort
                case ep
                case airdate
                case comment
                case duration
                case desc
                case disc
                case duration_seconds
            }
        }
        /// - Remark: Generated from `#/components/schemas/EpisodeDetail`.
        internal struct EpisodeDetail: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/EpisodeDetail/id`.
            internal var id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/EpisodeDetail/type`.
            internal var _type: Components.Schemas.EpType
            /// - Remark: Generated from `#/components/schemas/EpisodeDetail/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/EpisodeDetail/name_cn`.
            internal var name_cn: Swift.String
            /// 同类条目的排序和集数
            ///
            /// - Remark: Generated from `#/components/schemas/EpisodeDetail/sort`.
            internal var sort: Swift.Double
            /// 条目内的集数, 从`1`开始。非本篇剧集的此字段无意义
            ///
            /// - Remark: Generated from `#/components/schemas/EpisodeDetail/ep`.
            internal var ep: Swift.Double?
            /// - Remark: Generated from `#/components/schemas/EpisodeDetail/airdate`.
            internal var airdate: Swift.String
            /// - Remark: Generated from `#/components/schemas/EpisodeDetail/comment`.
            internal var comment: Swift.Int
            /// - Remark: Generated from `#/components/schemas/EpisodeDetail/duration`.
            internal var duration: Swift.String
            /// 简介
            ///
            /// - Remark: Generated from `#/components/schemas/EpisodeDetail/desc`.
            internal var desc: Swift.String
            /// 音乐曲目的碟片数
            ///
            /// - Remark: Generated from `#/components/schemas/EpisodeDetail/disc`.
            internal var disc: Swift.Int
            /// - Remark: Generated from `#/components/schemas/EpisodeDetail/subject_id`.
            internal var subject_id: Swift.Int
            /// Creates a new `EpisodeDetail`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - _type:
            ///   - name:
            ///   - name_cn:
            ///   - sort: 同类条目的排序和集数
            ///   - ep: 条目内的集数, 从`1`开始。非本篇剧集的此字段无意义
            ///   - airdate:
            ///   - comment:
            ///   - duration:
            ///   - desc: 简介
            ///   - disc: 音乐曲目的碟片数
            ///   - subject_id:
            internal init(
                id: Swift.Int,
                _type: Components.Schemas.EpType,
                name: Swift.String,
                name_cn: Swift.String,
                sort: Swift.Double,
                ep: Swift.Double? = nil,
                airdate: Swift.String,
                comment: Swift.Int,
                duration: Swift.String,
                desc: Swift.String,
                disc: Swift.Int,
                subject_id: Swift.Int
            ) {
                self.id = id
                self._type = _type
                self.name = name
                self.name_cn = name_cn
                self.sort = sort
                self.ep = ep
                self.airdate = airdate
                self.comment = comment
                self.duration = duration
                self.desc = desc
                self.disc = disc
                self.subject_id = subject_id
            }
            internal enum CodingKeys: String, CodingKey {
                case id
                case _type = "type"
                case name
                case name_cn
                case sort
                case ep
                case airdate
                case comment
                case duration
                case desc
                case disc
                case subject_id
            }
        }
        /// - Remark: Generated from `#/components/schemas/ErrorDetail`.
        internal struct ErrorDetail: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ErrorDetail/title`.
            internal var title: Swift.String
            /// - Remark: Generated from `#/components/schemas/ErrorDetail/description`.
            internal var description: Swift.String
            /// - Remark: Generated from `#/components/schemas/ErrorDetail/details`.
            internal enum detailsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/ErrorDetail/details/case1`.
                case case1(Swift.String)
                /// - Remark: Generated from `#/components/schemas/ErrorDetail/details/case2`.
                internal struct Case2Payload: Codable, Hashable, Sendable {
                    /// error message
                    ///
                    /// - Remark: Generated from `#/components/schemas/ErrorDetail/details/case2/error`.
                    internal var error: Swift.String?
                    /// request path
                    ///
                    /// - Remark: Generated from `#/components/schemas/ErrorDetail/details/case2/path`.
                    internal var path: Swift.String?
                    /// Creates a new `Case2Payload`.
                    ///
                    /// - Parameters:
                    ///   - error: error message
                    ///   - path: request path
                    internal init(
                        error: Swift.String? = nil,
                        path: Swift.String? = nil
                    ) {
                        self.error = error
                        self.path = path
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case error
                        case path
                    }
                }
                /// - Remark: Generated from `#/components/schemas/ErrorDetail/details/case2`.
                case case2(Components.Schemas.ErrorDetail.detailsPayload.Case2Payload)
                internal init(from decoder: any Decoder) throws {
                    var errors: [any Error] = []
                    do {
                        self = .case1(try decoder.decodeFromSingleValueContainer())
                        return
                    } catch {
                        errors.append(error)
                    }
                    do {
                        self = .case2(try .init(from: decoder))
                        return
                    } catch {
                        errors.append(error)
                    }
                    throw Swift.DecodingError.failedToDecodeOneOfSchema(
                        type: Self.self,
                        codingPath: decoder.codingPath,
                        errors: errors
                    )
                }
                internal func encode(to encoder: any Encoder) throws {
                    switch self {
                    case let .case1(value):
                        try encoder.encodeToSingleValueContainer(value)
                    case let .case2(value):
                        try value.encode(to: encoder)
                    }
                }
            }
            /// - Remark: Generated from `#/components/schemas/ErrorDetail/details`.
            internal var details: Components.Schemas.ErrorDetail.detailsPayload?
            /// Creates a new `ErrorDetail`.
            ///
            /// - Parameters:
            ///   - title:
            ///   - description:
            ///   - details:
            internal init(
                title: Swift.String,
                description: Swift.String,
                details: Components.Schemas.ErrorDetail.detailsPayload? = nil
            ) {
                self.title = title
                self.description = description
                self.details = details
            }
            internal enum CodingKeys: String, CodingKey {
                case title
                case description
                case details
            }
        }
        /// - Remark: Generated from `#/components/schemas/Images`.
        internal struct Images: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Images/large`.
            internal var large: Swift.String
            /// - Remark: Generated from `#/components/schemas/Images/common`.
            internal var common: Swift.String
            /// - Remark: Generated from `#/components/schemas/Images/medium`.
            internal var medium: Swift.String
            /// - Remark: Generated from `#/components/schemas/Images/small`.
            internal var small: Swift.String
            /// - Remark: Generated from `#/components/schemas/Images/grid`.
            internal var grid: Swift.String
            /// Creates a new `Images`.
            ///
            /// - Parameters:
            ///   - large:
            ///   - common:
            ///   - medium:
            ///   - small:
            ///   - grid:
            internal init(
                large: Swift.String,
                common: Swift.String,
                medium: Swift.String,
                small: Swift.String,
                grid: Swift.String
            ) {
                self.large = large
                self.common = common
                self.medium = medium
                self.small = small
                self.grid = grid
            }
            internal enum CodingKeys: String, CodingKey {
                case large
                case common
                case medium
                case small
                case grid
            }
        }
        /// - Remark: Generated from `#/components/schemas/Index`.
        internal struct Index: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Index/id`.
            internal var id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/Index/title`.
            internal var title: Swift.String
            /// - Remark: Generated from `#/components/schemas/Index/desc`.
            internal var desc: Swift.String
            /// 收录条目总数
            ///
            /// - Remark: Generated from `#/components/schemas/Index/total`.
            internal var total: Swift.Int?
            /// 目录评论及收藏数
            ///
            /// - Remark: Generated from `#/components/schemas/Index/stat`.
            internal struct statPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/Index/stat/value1`.
                internal var value1: Components.Schemas.Stat
                /// Creates a new `statPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.Stat) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                }
                internal func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                }
            }
            /// 目录评论及收藏数
            ///
            /// - Remark: Generated from `#/components/schemas/Index/stat`.
            internal var stat: Components.Schemas.Index.statPayload
            /// - Remark: Generated from `#/components/schemas/Index/created_at`.
            internal var created_at: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/Index/updated_at`.
            internal var updated_at: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/Index/creator`.
            internal var creator: Components.Schemas.Creator
            /// deprecated, always false.
            ///
            /// - Remark: Generated from `#/components/schemas/Index/ban`.
            @available(*, deprecated)
            internal var ban: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/Index/nsfw`.
            internal var nsfw: Swift.Bool
            /// Creates a new `Index`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - title:
            ///   - desc:
            ///   - total: 收录条目总数
            ///   - stat: 目录评论及收藏数
            ///   - created_at:
            ///   - updated_at:
            ///   - creator:
            ///   - ban: deprecated, always false.
            ///   - nsfw:
            internal init(
                id: Swift.Int,
                title: Swift.String,
                desc: Swift.String,
                total: Swift.Int? = nil,
                stat: Components.Schemas.Index.statPayload,
                created_at: Foundation.Date,
                updated_at: Foundation.Date,
                creator: Components.Schemas.Creator,
                ban: Swift.Bool,
                nsfw: Swift.Bool
            ) {
                self.id = id
                self.title = title
                self.desc = desc
                self.total = total
                self.stat = stat
                self.created_at = created_at
                self.updated_at = updated_at
                self.creator = creator
                self.ban = ban
                self.nsfw = nsfw
            }
            internal enum CodingKeys: String, CodingKey {
                case id
                case title
                case desc
                case total
                case stat
                case created_at
                case updated_at
                case creator
                case ban
                case nsfw
            }
        }
        /// 同名字段意义同<a href="#model-Subject">Subject</a>
        ///
        /// - Remark: Generated from `#/components/schemas/IndexSubject`.
        internal struct IndexSubject: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/IndexSubject/id`.
            internal var id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/IndexSubject/type`.
            internal var _type: Swift.Int
            /// - Remark: Generated from `#/components/schemas/IndexSubject/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/IndexSubject/images`.
            internal var images: Components.Schemas.Images?
            /// - Remark: Generated from `#/components/schemas/IndexSubject/infobox`.
            internal var infobox: Components.Schemas.WikiV0?
            /// - Remark: Generated from `#/components/schemas/IndexSubject/date`.
            internal var date: Swift.String?
            /// - Remark: Generated from `#/components/schemas/IndexSubject/comment`.
            internal var comment: Swift.String
            /// - Remark: Generated from `#/components/schemas/IndexSubject/added_at`.
            internal var added_at: Foundation.Date
            /// Creates a new `IndexSubject`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - _type:
            ///   - name:
            ///   - images:
            ///   - infobox:
            ///   - date:
            ///   - comment:
            ///   - added_at:
            internal init(
                id: Swift.Int,
                _type: Swift.Int,
                name: Swift.String,
                images: Components.Schemas.Images? = nil,
                infobox: Components.Schemas.WikiV0? = nil,
                date: Swift.String? = nil,
                comment: Swift.String,
                added_at: Foundation.Date
            ) {
                self.id = id
                self._type = _type
                self.name = name
                self.images = images
                self.infobox = infobox
                self.date = date
                self.comment = comment
                self.added_at = added_at
            }
            internal enum CodingKeys: String, CodingKey {
                case id
                case _type = "type"
                case name
                case images
                case infobox
                case date
                case comment
                case added_at
            }
        }
        /// 新增或修改条目的内容，同名字段意义同<a href="#model-Subject">Subject</a>
        ///
        /// - Remark: Generated from `#/components/schemas/IndexBasicInfo`.
        internal struct IndexBasicInfo: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/IndexBasicInfo/title`.
            internal var title: Swift.String?
            /// - Remark: Generated from `#/components/schemas/IndexBasicInfo/description`.
            internal var description: Swift.String?
            /// Creates a new `IndexBasicInfo`.
            ///
            /// - Parameters:
            ///   - title:
            ///   - description:
            internal init(
                title: Swift.String? = nil,
                description: Swift.String? = nil
            ) {
                self.title = title
                self.description = description
            }
            internal enum CodingKeys: String, CodingKey {
                case title
                case description
            }
        }
        /// 新增某条目到目录的请求信息
        ///
        /// - Remark: Generated from `#/components/schemas/IndexSubjectAddInfo`.
        internal struct IndexSubjectAddInfo: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/IndexSubjectAddInfo/subject_id`.
            internal var subject_id: Swift.Int?
            /// 排序条件，越小越靠前
            ///
            /// - Remark: Generated from `#/components/schemas/IndexSubjectAddInfo/sort`.
            internal var sort: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/IndexSubjectAddInfo/comment`.
            internal var comment: Swift.String?
            /// Creates a new `IndexSubjectAddInfo`.
            ///
            /// - Parameters:
            ///   - subject_id:
            ///   - sort: 排序条件，越小越靠前
            ///   - comment:
            internal init(
                subject_id: Swift.Int? = nil,
                sort: Swift.Int? = nil,
                comment: Swift.String? = nil
            ) {
                self.subject_id = subject_id
                self.sort = sort
                self.comment = comment
            }
            internal enum CodingKeys: String, CodingKey {
                case subject_id
                case sort
                case comment
            }
        }
        /// 修改目录中条目的信息
        ///
        /// - Remark: Generated from `#/components/schemas/IndexSubjectEditInfo`.
        internal struct IndexSubjectEditInfo: Codable, Hashable, Sendable {
            /// 排序条件，越小越靠前
            ///
            /// - Remark: Generated from `#/components/schemas/IndexSubjectEditInfo/sort`.
            internal var sort: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/IndexSubjectEditInfo/comment`.
            internal var comment: Swift.String?
            /// Creates a new `IndexSubjectEditInfo`.
            ///
            /// - Parameters:
            ///   - sort: 排序条件，越小越靠前
            ///   - comment:
            internal init(
                sort: Swift.Int? = nil,
                comment: Swift.String? = nil
            ) {
                self.sort = sort
                self.comment = comment
            }
            internal enum CodingKeys: String, CodingKey {
                case sort
                case comment
            }
        }
        /// - Remark: Generated from `#/components/schemas/WikiV0`.
        internal struct WikiV0Payload: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/WikiV0/key`.
            internal var key: Swift.String
            /// - Remark: Generated from `#/components/schemas/WikiV0/value`.
            internal struct valuePayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/WikiV0/value/value1`.
                internal var value1: Swift.String?
                /// - Remark: Generated from `#/components/schemas/WikiV0/value/Value2Payload`.
                internal struct Value2PayloadPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/WikiV0/value/Value2Payload/value1`.
                    internal struct Value1Payload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/WikiV0/value/Value2Payload/value1/k`.
                        internal var k: Swift.String
                        /// - Remark: Generated from `#/components/schemas/WikiV0/value/Value2Payload/value1/v`.
                        internal var v: Swift.String
                        /// Creates a new `Value1Payload`.
                        ///
                        /// - Parameters:
                        ///   - k:
                        ///   - v:
                        internal init(
                            k: Swift.String,
                            v: Swift.String
                        ) {
                            self.k = k
                            self.v = v
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case k
                            case v
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/WikiV0/value/Value2Payload/value1`.
                    internal var value1: Components.Schemas.WikiV0Payload.valuePayload.Value2PayloadPayload.Value1Payload?
                    /// - Remark: Generated from `#/components/schemas/WikiV0/value/Value2Payload/value2`.
                    internal struct Value2Payload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/WikiV0/value/Value2Payload/value2/v`.
                        internal var v: Swift.String
                        /// Creates a new `Value2Payload`.
                        ///
                        /// - Parameters:
                        ///   - v:
                        internal init(v: Swift.String) {
                            self.v = v
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case v
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/WikiV0/value/Value2Payload/value2`.
                    internal var value2: Components.Schemas.WikiV0Payload.valuePayload.Value2PayloadPayload.Value2Payload?
                    /// Creates a new `Value2PayloadPayload`.
                    ///
                    /// - Parameters:
                    ///   - value1:
                    ///   - value2:
                    internal init(
                        value1: Components.Schemas.WikiV0Payload.valuePayload.Value2PayloadPayload.Value1Payload? = nil,
                        value2: Components.Schemas.WikiV0Payload.valuePayload.Value2PayloadPayload.Value2Payload? = nil
                    ) {
                        self.value1 = value1
                        self.value2 = value2
                    }
                    internal init(from decoder: any Decoder) throws {
                        var errors: [any Error] = []
                        do {
                            value1 = try .init(from: decoder)
                        } catch {
                            errors.append(error)
                        }
                        do {
                            value2 = try .init(from: decoder)
                        } catch {
                            errors.append(error)
                        }
                        try Swift.DecodingError.verifyAtLeastOneSchemaIsNotNil(
                            [
                                value1,
                                value2
                            ],
                            type: Self.self,
                            codingPath: decoder.codingPath,
                            errors: errors
                        )
                    }
                    internal func encode(to encoder: any Encoder) throws {
                        try value1?.encode(to: encoder)
                        try value2?.encode(to: encoder)
                    }
                }
                /// - Remark: Generated from `#/components/schemas/WikiV0/value/value2`.
                internal typealias Value2Payload = [Components.Schemas.WikiV0Payload.valuePayload.Value2PayloadPayload]
                /// - Remark: Generated from `#/components/schemas/WikiV0/value/value2`.
                internal var value2: Components.Schemas.WikiV0Payload.valuePayload.Value2Payload?
                /// Creates a new `valuePayload`.
                ///
                /// - Parameters:
                ///   - value1:
                ///   - value2:
                internal init(
                    value1: Swift.String? = nil,
                    value2: Components.Schemas.WikiV0Payload.valuePayload.Value2Payload? = nil
                ) {
                    self.value1 = value1
                    self.value2 = value2
                }
                internal init(from decoder: any Decoder) throws {
                    var errors: [any Error] = []
                    do {
                        value1 = try decoder.decodeFromSingleValueContainer()
                    } catch {
                        errors.append(error)
                    }
                    do {
                        value2 = try decoder.decodeFromSingleValueContainer()
                    } catch {
                        errors.append(error)
                    }
                    try Swift.DecodingError.verifyAtLeastOneSchemaIsNotNil(
                        [
                            value1,
                            value2
                        ],
                        type: Self.self,
                        codingPath: decoder.codingPath,
                        errors: errors
                    )
                }
                internal func encode(to encoder: any Encoder) throws {
                    try encoder.encodeFirstNonNilValueToSingleValueContainer([
                        value1,
                        value2
                    ])
                }
            }
            /// - Remark: Generated from `#/components/schemas/WikiV0/value`.
            internal var value: Components.Schemas.WikiV0Payload.valuePayload
            /// Creates a new `WikiV0Payload`.
            ///
            /// - Parameters:
            ///   - key:
            ///   - value:
            internal init(
                key: Swift.String,
                value: Components.Schemas.WikiV0Payload.valuePayload
            ) {
                self.key = key
                self.value = value
            }
            internal enum CodingKeys: String, CodingKey {
                case key
                case value
            }
        }
        /// - Remark: Generated from `#/components/schemas/WikiV0`.
        internal typealias WikiV0 = [Components.Schemas.WikiV0Payload]
        /// - Remark: Generated from `#/components/schemas/Page`.
        internal struct Page: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Page/total`.
            internal var total: Swift.Int
            /// - Remark: Generated from `#/components/schemas/Page/limit`.
            internal var limit: Swift.Int
            /// - Remark: Generated from `#/components/schemas/Page/offset`.
            internal var offset: Swift.Int
            /// Creates a new `Page`.
            ///
            /// - Parameters:
            ///   - total:
            ///   - limit:
            ///   - offset:
            internal init(
                total: Swift.Int,
                limit: Swift.Int,
                offset: Swift.Int
            ) {
                self.total = total
                self.limit = limit
                self.offset = offset
            }
            internal enum CodingKeys: String, CodingKey {
                case total
                case limit
                case offset
            }
        }
        /// - Remark: Generated from `#/components/schemas/Paged_Subject`.
        internal struct Paged_Subject: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Paged_Subject/total`.
            internal var total: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/Paged_Subject/limit`.
            internal var limit: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/Paged_Subject/offset`.
            internal var offset: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/Paged_Subject/data`.
            internal var data: [Components.Schemas.Subject]?
            /// Creates a new `Paged_Subject`.
            ///
            /// - Parameters:
            ///   - total:
            ///   - limit:
            ///   - offset:
            ///   - data:
            internal init(
                total: Swift.Int? = nil,
                limit: Swift.Int? = nil,
                offset: Swift.Int? = nil,
                data: [Components.Schemas.Subject]? = nil
            ) {
                self.total = total
                self.limit = limit
                self.offset = offset
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case total
                case limit
                case offset
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/Paged_Episode`.
        internal struct Paged_Episode: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Paged_Episode/total`.
            internal var total: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/Paged_Episode/limit`.
            internal var limit: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/Paged_Episode/offset`.
            internal var offset: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/Paged_Episode/data`.
            internal var data: [Components.Schemas.Episode]?
            /// Creates a new `Paged_Episode`.
            ///
            /// - Parameters:
            ///   - total:
            ///   - limit:
            ///   - offset:
            ///   - data:
            internal init(
                total: Swift.Int? = nil,
                limit: Swift.Int? = nil,
                offset: Swift.Int? = nil,
                data: [Components.Schemas.Episode]? = nil
            ) {
                self.total = total
                self.limit = limit
                self.offset = offset
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case total
                case limit
                case offset
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/Paged_IndexSubject`.
        internal struct Paged_IndexSubject: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Paged_IndexSubject/total`.
            internal var total: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/Paged_IndexSubject/limit`.
            internal var limit: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/Paged_IndexSubject/offset`.
            internal var offset: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/Paged_IndexSubject/data`.
            internal var data: [Components.Schemas.IndexSubject]?
            /// Creates a new `Paged_IndexSubject`.
            ///
            /// - Parameters:
            ///   - total:
            ///   - limit:
            ///   - offset:
            ///   - data:
            internal init(
                total: Swift.Int? = nil,
                limit: Swift.Int? = nil,
                offset: Swift.Int? = nil,
                data: [Components.Schemas.IndexSubject]? = nil
            ) {
                self.total = total
                self.limit = limit
                self.offset = offset
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case total
                case limit
                case offset
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/Paged_Revision`.
        internal struct Paged_Revision: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Paged_Revision/total`.
            internal var total: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/Paged_Revision/limit`.
            internal var limit: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/Paged_Revision/offset`.
            internal var offset: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/Paged_Revision/data`.
            internal var data: [Components.Schemas.Revision]?
            /// Creates a new `Paged_Revision`.
            ///
            /// - Parameters:
            ///   - total:
            ///   - limit:
            ///   - offset:
            ///   - data:
            internal init(
                total: Swift.Int? = nil,
                limit: Swift.Int? = nil,
                offset: Swift.Int? = nil,
                data: [Components.Schemas.Revision]? = nil
            ) {
                self.total = total
                self.limit = limit
                self.offset = offset
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case total
                case limit
                case offset
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/Paged_UserCollection`.
        internal struct Paged_UserCollection: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Paged_UserCollection/total`.
            internal var total: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/Paged_UserCollection/limit`.
            internal var limit: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/Paged_UserCollection/offset`.
            internal var offset: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/Paged_UserCollection/data`.
            internal var data: [Components.Schemas.UserSubjectCollection]?
            /// Creates a new `Paged_UserCollection`.
            ///
            /// - Parameters:
            ///   - total:
            ///   - limit:
            ///   - offset:
            ///   - data:
            internal init(
                total: Swift.Int? = nil,
                limit: Swift.Int? = nil,
                offset: Swift.Int? = nil,
                data: [Components.Schemas.UserSubjectCollection]? = nil
            ) {
                self.total = total
                self.limit = limit
                self.offset = offset
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case total
                case limit
                case offset
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/Paged_UserCharacterCollection`.
        internal struct Paged_UserCharacterCollection: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Paged_UserCharacterCollection/total`.
            internal var total: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/Paged_UserCharacterCollection/limit`.
            internal var limit: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/Paged_UserCharacterCollection/offset`.
            internal var offset: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/Paged_UserCharacterCollection/data`.
            internal var data: [Components.Schemas.UserCharacterCollection]?
            /// Creates a new `Paged_UserCharacterCollection`.
            ///
            /// - Parameters:
            ///   - total:
            ///   - limit:
            ///   - offset:
            ///   - data:
            internal init(
                total: Swift.Int? = nil,
                limit: Swift.Int? = nil,
                offset: Swift.Int? = nil,
                data: [Components.Schemas.UserCharacterCollection]? = nil
            ) {
                self.total = total
                self.limit = limit
                self.offset = offset
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case total
                case limit
                case offset
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/Paged_UserPersonCollection`.
        internal struct Paged_UserPersonCollection: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Paged_UserPersonCollection/total`.
            internal var total: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/Paged_UserPersonCollection/limit`.
            internal var limit: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/Paged_UserPersonCollection/offset`.
            internal var offset: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/Paged_UserPersonCollection/data`.
            internal var data: [Components.Schemas.UserPersonCollection]?
            /// Creates a new `Paged_UserPersonCollection`.
            ///
            /// - Parameters:
            ///   - total:
            ///   - limit:
            ///   - offset:
            ///   - data:
            internal init(
                total: Swift.Int? = nil,
                limit: Swift.Int? = nil,
                offset: Swift.Int? = nil,
                data: [Components.Schemas.UserPersonCollection]? = nil
            ) {
                self.total = total
                self.limit = limit
                self.offset = offset
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case total
                case limit
                case offset
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/Person`.
        internal struct Person: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Person/id`.
            internal var id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/Person/name`.
            internal var name: Swift.String
            /// `1`, `2`, `3` 表示 `个人`, `公司`, `组合`
            ///
            /// - Remark: Generated from `#/components/schemas/Person/type`.
            internal struct _typePayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/Person/type/value1`.
                internal var value1: Components.Schemas.PersonType
                /// Creates a new `_typePayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.PersonType) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try decoder.decodeFromSingleValueContainer()
                }
                internal func encode(to encoder: any Encoder) throws {
                    try encoder.encodeToSingleValueContainer(value1)
                }
            }
            /// `1`, `2`, `3` 表示 `个人`, `公司`, `组合`
            ///
            /// - Remark: Generated from `#/components/schemas/Person/type`.
            internal var _type: Components.Schemas.Person._typePayload
            /// - Remark: Generated from `#/components/schemas/Person/career`.
            internal var career: [Components.Schemas.PersonCareer]
            /// object with some size of images, this object maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/Person/images`.
            internal struct imagesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/Person/images/value1`.
                internal var value1: Components.Schemas.PersonImages
                /// Creates a new `imagesPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.PersonImages) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                }
                internal func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                }
            }
            /// object with some size of images, this object maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/Person/images`.
            internal var images: Components.Schemas.Person.imagesPayload?
            /// - Remark: Generated from `#/components/schemas/Person/short_summary`.
            internal var short_summary: Swift.String
            /// - Remark: Generated from `#/components/schemas/Person/locked`.
            internal var locked: Swift.Bool
            /// Creates a new `Person`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - name:
            ///   - _type: `1`, `2`, `3` 表示 `个人`, `公司`, `组合`
            ///   - career:
            ///   - images: object with some size of images, this object maybe `null`
            ///   - short_summary:
            ///   - locked:
            internal init(
                id: Swift.Int,
                name: Swift.String,
                _type: Components.Schemas.Person._typePayload,
                career: [Components.Schemas.PersonCareer],
                images: Components.Schemas.Person.imagesPayload? = nil,
                short_summary: Swift.String,
                locked: Swift.Bool
            ) {
                self.id = id
                self.name = name
                self._type = _type
                self.career = career
                self.images = images
                self.short_summary = short_summary
                self.locked = locked
            }
            internal enum CodingKeys: String, CodingKey {
                case id
                case name
                case _type = "type"
                case career
                case images
                case short_summary
                case locked
            }
        }
        /// An enumeration.
        ///
        /// - Remark: Generated from `#/components/schemas/PersonCareer`.
        internal enum PersonCareer: String, Codable, Hashable, Sendable, CaseIterable {
            case producer = "producer"
            case mangaka = "mangaka"
            case artist = "artist"
            case seiyu = "seiyu"
            case writer = "writer"
            case illustrator = "illustrator"
            case actor = "actor"
        }
        /// - Remark: Generated from `#/components/schemas/PersonCharacter`.
        internal struct PersonCharacter: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/PersonCharacter/id`.
            internal var id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/PersonCharacter/name`.
            internal var name: Swift.String
            /// 角色，机体，舰船，组织...
            ///
            /// - Remark: Generated from `#/components/schemas/PersonCharacter/type`.
            internal struct _typePayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/PersonCharacter/type/value1`.
                internal var value1: Components.Schemas.CharacterType
                /// Creates a new `_typePayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.CharacterType) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try decoder.decodeFromSingleValueContainer()
                }
                internal func encode(to encoder: any Encoder) throws {
                    try encoder.encodeToSingleValueContainer(value1)
                }
            }
            /// 角色，机体，舰船，组织...
            ///
            /// - Remark: Generated from `#/components/schemas/PersonCharacter/type`.
            internal var _type: Components.Schemas.PersonCharacter._typePayload
            /// object with some size of images, this object maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/PersonCharacter/images`.
            internal struct imagesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/PersonCharacter/images/value1`.
                internal var value1: Components.Schemas.PersonImages
                /// Creates a new `imagesPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.PersonImages) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                }
                internal func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                }
            }
            /// object with some size of images, this object maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/PersonCharacter/images`.
            internal var images: Components.Schemas.PersonCharacter.imagesPayload?
            /// - Remark: Generated from `#/components/schemas/PersonCharacter/subject_id`.
            internal var subject_id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/PersonCharacter/subject_type`.
            internal var subject_type: Components.Schemas.SubjectType
            /// - Remark: Generated from `#/components/schemas/PersonCharacter/subject_name`.
            internal var subject_name: Swift.String
            /// - Remark: Generated from `#/components/schemas/PersonCharacter/subject_name_cn`.
            internal var subject_name_cn: Swift.String
            /// - Remark: Generated from `#/components/schemas/PersonCharacter/staff`.
            internal var staff: Swift.String?
            /// Creates a new `PersonCharacter`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - name:
            ///   - _type: 角色，机体，舰船，组织...
            ///   - images: object with some size of images, this object maybe `null`
            ///   - subject_id:
            ///   - subject_type:
            ///   - subject_name:
            ///   - subject_name_cn:
            ///   - staff:
            internal init(
                id: Swift.Int,
                name: Swift.String,
                _type: Components.Schemas.PersonCharacter._typePayload,
                images: Components.Schemas.PersonCharacter.imagesPayload? = nil,
                subject_id: Swift.Int,
                subject_type: Components.Schemas.SubjectType,
                subject_name: Swift.String,
                subject_name_cn: Swift.String,
                staff: Swift.String? = nil
            ) {
                self.id = id
                self.name = name
                self._type = _type
                self.images = images
                self.subject_id = subject_id
                self.subject_type = subject_type
                self.subject_name = subject_name
                self.subject_name_cn = subject_name_cn
                self.staff = staff
            }
            internal enum CodingKeys: String, CodingKey {
                case id
                case name
                case _type = "type"
                case images
                case subject_id
                case subject_type
                case subject_name
                case subject_name_cn
                case staff
            }
        }
        /// - Remark: Generated from `#/components/schemas/PersonDetail`.
        internal struct PersonDetail: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/PersonDetail/id`.
            internal var id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/PersonDetail/name`.
            internal var name: Swift.String
            /// `1`, `2`, `3` 表示 `个人`, `公司`, `组合`
            ///
            /// - Remark: Generated from `#/components/schemas/PersonDetail/type`.
            internal struct _typePayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/PersonDetail/type/value1`.
                internal var value1: Components.Schemas.PersonType
                /// Creates a new `_typePayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.PersonType) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try decoder.decodeFromSingleValueContainer()
                }
                internal func encode(to encoder: any Encoder) throws {
                    try encoder.encodeToSingleValueContainer(value1)
                }
            }
            /// `1`, `2`, `3` 表示 `个人`, `公司`, `组合`
            ///
            /// - Remark: Generated from `#/components/schemas/PersonDetail/type`.
            internal var _type: Components.Schemas.PersonDetail._typePayload
            /// - Remark: Generated from `#/components/schemas/PersonDetail/career`.
            internal var career: [Components.Schemas.PersonCareer]
            /// object with some size of images, this object maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/PersonDetail/images`.
            internal struct imagesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/PersonDetail/images/value1`.
                internal var value1: Components.Schemas.PersonImages
                /// Creates a new `imagesPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.PersonImages) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                }
                internal func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                }
            }
            /// object with some size of images, this object maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/PersonDetail/images`.
            internal var images: Components.Schemas.PersonDetail.imagesPayload?
            /// - Remark: Generated from `#/components/schemas/PersonDetail/summary`.
            internal var summary: Swift.String
            /// - Remark: Generated from `#/components/schemas/PersonDetail/locked`.
            internal var locked: Swift.Bool
            /// currently it's latest user comment time, it will be replaced by wiki modified date in the future
            ///
            /// - Remark: Generated from `#/components/schemas/PersonDetail/last_modified`.
            internal var last_modified: Foundation.Date
            /// server parsed infobox, a map from key to string or tuple
            /// null if server infobox is not valid
            ///
            /// - Remark: Generated from `#/components/schemas/PersonDetail/infobox`.
            internal var infobox: [OpenAPIRuntime.OpenAPIObjectContainer]?
            /// parsed from wiki, maybe null
            ///
            /// - Remark: Generated from `#/components/schemas/PersonDetail/gender`.
            internal var gender: Swift.String?
            /// parsed from wiki, maybe null, `1, 2, 3, 4` for `A, B, AB, O`
            ///
            /// - Remark: Generated from `#/components/schemas/PersonDetail/blood_type`.
            internal struct blood_typePayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/PersonDetail/blood_type/value1`.
                internal var value1: Components.Schemas.BloodType
                /// Creates a new `blood_typePayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.BloodType) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try decoder.decodeFromSingleValueContainer()
                }
                internal func encode(to encoder: any Encoder) throws {
                    try encoder.encodeToSingleValueContainer(value1)
                }
            }
            /// parsed from wiki, maybe null, `1, 2, 3, 4` for `A, B, AB, O`
            ///
            /// - Remark: Generated from `#/components/schemas/PersonDetail/blood_type`.
            internal var blood_type: Components.Schemas.PersonDetail.blood_typePayload?
            /// parsed from wiki, maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/PersonDetail/birth_year`.
            internal var birth_year: Swift.Int?
            /// parsed from wiki, maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/PersonDetail/birth_mon`.
            internal var birth_mon: Swift.Int?
            /// parsed from wiki, maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/PersonDetail/birth_day`.
            internal var birth_day: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/PersonDetail/stat`.
            internal var stat: Components.Schemas.Stat
            /// Creates a new `PersonDetail`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - name:
            ///   - _type: `1`, `2`, `3` 表示 `个人`, `公司`, `组合`
            ///   - career:
            ///   - images: object with some size of images, this object maybe `null`
            ///   - summary:
            ///   - locked:
            ///   - last_modified: currently it's latest user comment time, it will be replaced by wiki modified date in the future
            ///   - infobox: server parsed infobox, a map from key to string or tuple
            ///   - gender: parsed from wiki, maybe null
            ///   - blood_type: parsed from wiki, maybe null, `1, 2, 3, 4` for `A, B, AB, O`
            ///   - birth_year: parsed from wiki, maybe `null`
            ///   - birth_mon: parsed from wiki, maybe `null`
            ///   - birth_day: parsed from wiki, maybe `null`
            ///   - stat:
            internal init(
                id: Swift.Int,
                name: Swift.String,
                _type: Components.Schemas.PersonDetail._typePayload,
                career: [Components.Schemas.PersonCareer],
                images: Components.Schemas.PersonDetail.imagesPayload? = nil,
                summary: Swift.String,
                locked: Swift.Bool,
                last_modified: Foundation.Date,
                infobox: [OpenAPIRuntime.OpenAPIObjectContainer]? = nil,
                gender: Swift.String? = nil,
                blood_type: Components.Schemas.PersonDetail.blood_typePayload? = nil,
                birth_year: Swift.Int? = nil,
                birth_mon: Swift.Int? = nil,
                birth_day: Swift.Int? = nil,
                stat: Components.Schemas.Stat
            ) {
                self.id = id
                self.name = name
                self._type = _type
                self.career = career
                self.images = images
                self.summary = summary
                self.locked = locked
                self.last_modified = last_modified
                self.infobox = infobox
                self.gender = gender
                self.blood_type = blood_type
                self.birth_year = birth_year
                self.birth_mon = birth_mon
                self.birth_day = birth_day
                self.stat = stat
            }
            internal enum CodingKeys: String, CodingKey {
                case id
                case name
                case _type = "type"
                case career
                case images
                case summary
                case locked
                case last_modified
                case infobox
                case gender
                case blood_type
                case birth_year
                case birth_mon
                case birth_day
                case stat
            }
        }
        /// - Remark: Generated from `#/components/schemas/PersonImages`.
        internal struct PersonImages: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/PersonImages/large`.
            internal var large: Swift.String
            /// - Remark: Generated from `#/components/schemas/PersonImages/medium`.
            internal var medium: Swift.String
            /// - Remark: Generated from `#/components/schemas/PersonImages/small`.
            internal var small: Swift.String
            /// - Remark: Generated from `#/components/schemas/PersonImages/grid`.
            internal var grid: Swift.String
            /// Creates a new `PersonImages`.
            ///
            /// - Parameters:
            ///   - large:
            ///   - medium:
            ///   - small:
            ///   - grid:
            internal init(
                large: Swift.String,
                medium: Swift.String,
                small: Swift.String,
                grid: Swift.String
            ) {
                self.large = large
                self.medium = medium
                self.small = small
                self.grid = grid
            }
            internal enum CodingKeys: String, CodingKey {
                case large
                case medium
                case small
                case grid
            }
        }
        /// `1`, `2`, `3` 表示 `个人`, `公司`, `组合`
        ///
        /// - Remark: Generated from `#/components/schemas/PersonType`.
        internal enum PersonType: Int, Codable, Hashable, Sendable, CaseIterable {
            case _1 = 1
            case _2 = 2
            case _3 = 3
        }
        /// - Remark: Generated from `#/components/schemas/RelatedCharacter`.
        internal struct RelatedCharacter: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/RelatedCharacter/id`.
            internal var id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/RelatedCharacter/name`.
            internal var name: Swift.String
            /// 角色，机体，舰船，组织...
            ///
            /// - Remark: Generated from `#/components/schemas/RelatedCharacter/type`.
            internal struct _typePayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/RelatedCharacter/type/value1`.
                internal var value1: Components.Schemas.CharacterType
                /// Creates a new `_typePayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.CharacterType) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try decoder.decodeFromSingleValueContainer()
                }
                internal func encode(to encoder: any Encoder) throws {
                    try encoder.encodeToSingleValueContainer(value1)
                }
            }
            /// 角色，机体，舰船，组织...
            ///
            /// - Remark: Generated from `#/components/schemas/RelatedCharacter/type`.
            internal var _type: Components.Schemas.RelatedCharacter._typePayload
            /// object with some size of images, this object maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/RelatedCharacter/images`.
            internal struct imagesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/RelatedCharacter/images/value1`.
                internal var value1: Components.Schemas.PersonImages
                /// Creates a new `imagesPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.PersonImages) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                }
                internal func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                }
            }
            /// object with some size of images, this object maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/RelatedCharacter/images`.
            internal var images: Components.Schemas.RelatedCharacter.imagesPayload?
            /// - Remark: Generated from `#/components/schemas/RelatedCharacter/relation`.
            internal var relation: Swift.String
            /// 演员列表
            ///
            /// - Remark: Generated from `#/components/schemas/RelatedCharacter/actors`.
            internal var actors: [Components.Schemas.Person]?
            /// Creates a new `RelatedCharacter`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - name:
            ///   - _type: 角色，机体，舰船，组织...
            ///   - images: object with some size of images, this object maybe `null`
            ///   - relation:
            ///   - actors: 演员列表
            internal init(
                id: Swift.Int,
                name: Swift.String,
                _type: Components.Schemas.RelatedCharacter._typePayload,
                images: Components.Schemas.RelatedCharacter.imagesPayload? = nil,
                relation: Swift.String,
                actors: [Components.Schemas.Person]? = nil
            ) {
                self.id = id
                self.name = name
                self._type = _type
                self.images = images
                self.relation = relation
                self.actors = actors
            }
            internal enum CodingKeys: String, CodingKey {
                case id
                case name
                case _type = "type"
                case images
                case relation
                case actors
            }
        }
        /// - Remark: Generated from `#/components/schemas/RelatedPerson`.
        internal struct RelatedPerson: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/RelatedPerson/id`.
            internal var id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/RelatedPerson/name`.
            internal var name: Swift.String
            /// `1`, `2`, `3` 表示 `个人`, `公司`, `组合`
            ///
            /// - Remark: Generated from `#/components/schemas/RelatedPerson/type`.
            internal struct _typePayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/RelatedPerson/type/value1`.
                internal var value1: Components.Schemas.PersonType
                /// Creates a new `_typePayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.PersonType) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try decoder.decodeFromSingleValueContainer()
                }
                internal func encode(to encoder: any Encoder) throws {
                    try encoder.encodeToSingleValueContainer(value1)
                }
            }
            /// `1`, `2`, `3` 表示 `个人`, `公司`, `组合`
            ///
            /// - Remark: Generated from `#/components/schemas/RelatedPerson/type`.
            internal var _type: Components.Schemas.RelatedPerson._typePayload
            /// - Remark: Generated from `#/components/schemas/RelatedPerson/career`.
            internal var career: [Components.Schemas.PersonCareer]
            /// object with some size of images, this object maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/RelatedPerson/images`.
            internal struct imagesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/RelatedPerson/images/value1`.
                internal var value1: Components.Schemas.PersonImages
                /// Creates a new `imagesPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.PersonImages) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                }
                internal func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                }
            }
            /// object with some size of images, this object maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/RelatedPerson/images`.
            internal var images: Components.Schemas.RelatedPerson.imagesPayload?
            /// - Remark: Generated from `#/components/schemas/RelatedPerson/relation`.
            internal var relation: Swift.String
            /// 参与章节/曲目
            ///
            /// - Remark: Generated from `#/components/schemas/RelatedPerson/eps`.
            internal var eps: Swift.String
            /// Creates a new `RelatedPerson`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - name:
            ///   - _type: `1`, `2`, `3` 表示 `个人`, `公司`, `组合`
            ///   - career:
            ///   - images: object with some size of images, this object maybe `null`
            ///   - relation:
            ///   - eps: 参与章节/曲目
            internal init(
                id: Swift.Int,
                name: Swift.String,
                _type: Components.Schemas.RelatedPerson._typePayload,
                career: [Components.Schemas.PersonCareer],
                images: Components.Schemas.RelatedPerson.imagesPayload? = nil,
                relation: Swift.String,
                eps: Swift.String
            ) {
                self.id = id
                self.name = name
                self._type = _type
                self.career = career
                self.images = images
                self.relation = relation
                self.eps = eps
            }
            internal enum CodingKeys: String, CodingKey {
                case id
                case name
                case _type = "type"
                case career
                case images
                case relation
                case eps
            }
        }
        /// - Remark: Generated from `#/components/schemas/UserCharacterCollection`.
        internal struct UserCharacterCollection: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UserCharacterCollection/id`.
            internal var id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/UserCharacterCollection/name`.
            internal var name: Swift.String
            /// 角色，机体，舰船，组织...
            ///
            /// - Remark: Generated from `#/components/schemas/UserCharacterCollection/type`.
            internal struct _typePayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/UserCharacterCollection/type/value1`.
                internal var value1: Components.Schemas.CharacterType
                /// Creates a new `_typePayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.CharacterType) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try decoder.decodeFromSingleValueContainer()
                }
                internal func encode(to encoder: any Encoder) throws {
                    try encoder.encodeToSingleValueContainer(value1)
                }
            }
            /// 角色，机体，舰船，组织...
            ///
            /// - Remark: Generated from `#/components/schemas/UserCharacterCollection/type`.
            internal var _type: Components.Schemas.UserCharacterCollection._typePayload
            /// object with some size of images, this object maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/UserCharacterCollection/images`.
            internal struct imagesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/UserCharacterCollection/images/value1`.
                internal var value1: Components.Schemas.PersonImages
                /// Creates a new `imagesPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.PersonImages) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                }
                internal func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                }
            }
            /// object with some size of images, this object maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/UserCharacterCollection/images`.
            internal var images: Components.Schemas.UserCharacterCollection.imagesPayload?
            /// - Remark: Generated from `#/components/schemas/UserCharacterCollection/created_at`.
            internal var created_at: Foundation.Date
            /// Creates a new `UserCharacterCollection`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - name:
            ///   - _type: 角色，机体，舰船，组织...
            ///   - images: object with some size of images, this object maybe `null`
            ///   - created_at:
            internal init(
                id: Swift.Int,
                name: Swift.String,
                _type: Components.Schemas.UserCharacterCollection._typePayload,
                images: Components.Schemas.UserCharacterCollection.imagesPayload? = nil,
                created_at: Foundation.Date
            ) {
                self.id = id
                self.name = name
                self._type = _type
                self.images = images
                self.created_at = created_at
            }
            internal enum CodingKeys: String, CodingKey {
                case id
                case name
                case _type = "type"
                case images
                case created_at
            }
        }
        /// - Remark: Generated from `#/components/schemas/UserPersonCollection`.
        internal struct UserPersonCollection: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UserPersonCollection/id`.
            internal var id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/UserPersonCollection/name`.
            internal var name: Swift.String
            /// `1`, `2`, `3` 表示 `个人`, `公司`, `组合`
            ///
            /// - Remark: Generated from `#/components/schemas/UserPersonCollection/type`.
            internal struct _typePayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/UserPersonCollection/type/value1`.
                internal var value1: Components.Schemas.PersonType
                /// Creates a new `_typePayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.PersonType) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try decoder.decodeFromSingleValueContainer()
                }
                internal func encode(to encoder: any Encoder) throws {
                    try encoder.encodeToSingleValueContainer(value1)
                }
            }
            /// `1`, `2`, `3` 表示 `个人`, `公司`, `组合`
            ///
            /// - Remark: Generated from `#/components/schemas/UserPersonCollection/type`.
            internal var _type: Components.Schemas.UserPersonCollection._typePayload
            /// - Remark: Generated from `#/components/schemas/UserPersonCollection/career`.
            internal var career: [Components.Schemas.PersonCareer]
            /// object with some size of images, this object maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/UserPersonCollection/images`.
            internal struct imagesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/UserPersonCollection/images/value1`.
                internal var value1: Components.Schemas.PersonImages
                /// Creates a new `imagesPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.PersonImages) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                }
                internal func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                }
            }
            /// object with some size of images, this object maybe `null`
            ///
            /// - Remark: Generated from `#/components/schemas/UserPersonCollection/images`.
            internal var images: Components.Schemas.UserPersonCollection.imagesPayload?
            /// - Remark: Generated from `#/components/schemas/UserPersonCollection/created_at`.
            internal var created_at: Foundation.Date
            /// Creates a new `UserPersonCollection`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - name:
            ///   - _type: `1`, `2`, `3` 表示 `个人`, `公司`, `组合`
            ///   - career:
            ///   - images: object with some size of images, this object maybe `null`
            ///   - created_at:
            internal init(
                id: Swift.Int,
                name: Swift.String,
                _type: Components.Schemas.UserPersonCollection._typePayload,
                career: [Components.Schemas.PersonCareer],
                images: Components.Schemas.UserPersonCollection.imagesPayload? = nil,
                created_at: Foundation.Date
            ) {
                self.id = id
                self.name = name
                self._type = _type
                self.career = career
                self.images = images
                self.created_at = created_at
            }
            internal enum CodingKeys: String, CodingKey {
                case id
                case name
                case _type = "type"
                case career
                case images
                case created_at
            }
        }
        /// - Remark: Generated from `#/components/schemas/Revision`.
        internal struct Revision: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Revision/id`.
            internal var id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/Revision/type`.
            internal var _type: Swift.Int
            /// - Remark: Generated from `#/components/schemas/Revision/creator`.
            internal var creator: Components.Schemas.Creator?
            /// - Remark: Generated from `#/components/schemas/Revision/summary`.
            internal var summary: Swift.String
            /// - Remark: Generated from `#/components/schemas/Revision/created_at`.
            internal var created_at: Foundation.Date
            /// Creates a new `Revision`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - _type:
            ///   - creator:
            ///   - summary:
            ///   - created_at:
            internal init(
                id: Swift.Int,
                _type: Swift.Int,
                creator: Components.Schemas.Creator? = nil,
                summary: Swift.String,
                created_at: Foundation.Date
            ) {
                self.id = id
                self._type = _type
                self.creator = creator
                self.summary = summary
                self.created_at = created_at
            }
            internal enum CodingKeys: String, CodingKey {
                case id
                case _type = "type"
                case creator
                case summary
                case created_at
            }
        }
        /// - Remark: Generated from `#/components/schemas/Stat`.
        internal struct Stat: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Stat/comments`.
            internal var comments: Swift.Int
            /// - Remark: Generated from `#/components/schemas/Stat/collects`.
            internal var collects: Swift.Int
            /// Creates a new `Stat`.
            ///
            /// - Parameters:
            ///   - comments:
            ///   - collects:
            internal init(
                comments: Swift.Int,
                collects: Swift.Int
            ) {
                self.comments = comments
                self.collects = collects
            }
            internal enum CodingKeys: String, CodingKey {
                case comments
                case collects
            }
        }
        /// - Remark: Generated from `#/components/schemas/Subject`.
        internal struct Subject: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Subject/id`.
            internal var id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/Subject/type`.
            internal struct _typePayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/Subject/type/value1`.
                internal var value1: Components.Schemas.SubjectType
                /// Creates a new `_typePayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.SubjectType) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try decoder.decodeFromSingleValueContainer()
                }
                internal func encode(to encoder: any Encoder) throws {
                    try encoder.encodeToSingleValueContainer(value1)
                }
            }
            /// - Remark: Generated from `#/components/schemas/Subject/type`.
            internal var _type: Components.Schemas.Subject._typePayload
            /// - Remark: Generated from `#/components/schemas/Subject/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/Subject/name_cn`.
            internal var name_cn: Swift.String
            /// - Remark: Generated from `#/components/schemas/Subject/summary`.
            internal var summary: Swift.String
            /// 是否为书籍系列的主条目
            ///
            /// - Remark: Generated from `#/components/schemas/Subject/series`.
            internal var series: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/Subject/nsfw`.
            internal var nsfw: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/Subject/locked`.
            internal var locked: Swift.Bool
            /// air date in `YYYY-MM-DD` format
            ///
            /// - Remark: Generated from `#/components/schemas/Subject/date`.
            internal var date: Swift.String?
            /// TV, Web, 欧美剧, DLC...
            ///
            /// - Remark: Generated from `#/components/schemas/Subject/platform`.
            internal var platform: Swift.String
            /// - Remark: Generated from `#/components/schemas/Subject/images`.
            internal var images: Components.Schemas.Images
            /// - Remark: Generated from `#/components/schemas/Subject/infobox`.
            internal var infobox: Components.Schemas.WikiV0?
            /// 书籍条目的册数，由旧服务端从wiki中解析
            ///
            /// - Remark: Generated from `#/components/schemas/Subject/volumes`.
            internal var volumes: Swift.Int
            /// 由旧服务端从wiki中解析，对于书籍条目为`话数`
            ///
            /// - Remark: Generated from `#/components/schemas/Subject/eps`.
            internal var eps: Swift.Int
            /// 数据库中的章节数量
            ///
            /// - Remark: Generated from `#/components/schemas/Subject/total_episodes`.
            internal var total_episodes: Swift.Int
            /// - Remark: Generated from `#/components/schemas/Subject/rating`.
            internal struct ratingPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/Subject/rating/rank`.
                internal var rank: Swift.Int
                /// - Remark: Generated from `#/components/schemas/Subject/rating/total`.
                internal var total: Swift.Int
                /// - Remark: Generated from `#/components/schemas/Subject/rating/count`.
                internal struct countPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Subject/rating/count/1`.
                    internal var _1: Swift.Int?
                    /// - Remark: Generated from `#/components/schemas/Subject/rating/count/2`.
                    internal var _2: Swift.Int?
                    /// - Remark: Generated from `#/components/schemas/Subject/rating/count/3`.
                    internal var _3: Swift.Int?
                    /// - Remark: Generated from `#/components/schemas/Subject/rating/count/4`.
                    internal var _4: Swift.Int?
                    /// - Remark: Generated from `#/components/schemas/Subject/rating/count/5`.
                    internal var _5: Swift.Int?
                    /// - Remark: Generated from `#/components/schemas/Subject/rating/count/6`.
                    internal var _6: Swift.Int?
                    /// - Remark: Generated from `#/components/schemas/Subject/rating/count/7`.
                    internal var _7: Swift.Int?
                    /// - Remark: Generated from `#/components/schemas/Subject/rating/count/8`.
                    internal var _8: Swift.Int?
                    /// - Remark: Generated from `#/components/schemas/Subject/rating/count/9`.
                    internal var _9: Swift.Int?
                    /// - Remark: Generated from `#/components/schemas/Subject/rating/count/10`.
                    internal var _10: Swift.Int?
                    /// Creates a new `countPayload`.
                    ///
                    /// - Parameters:
                    ///   - _1:
                    ///   - _2:
                    ///   - _3:
                    ///   - _4:
                    ///   - _5:
                    ///   - _6:
                    ///   - _7:
                    ///   - _8:
                    ///   - _9:
                    ///   - _10:
                    internal init(
                        _1: Swift.Int? = nil,
                        _2: Swift.Int? = nil,
                        _3: Swift.Int? = nil,
                        _4: Swift.Int? = nil,
                        _5: Swift.Int? = nil,
                        _6: Swift.Int? = nil,
                        _7: Swift.Int? = nil,
                        _8: Swift.Int? = nil,
                        _9: Swift.Int? = nil,
                        _10: Swift.Int? = nil
                    ) {
                        self._1 = _1
                        self._2 = _2
                        self._3 = _3
                        self._4 = _4
                        self._5 = _5
                        self._6 = _6
                        self._7 = _7
                        self._8 = _8
                        self._9 = _9
                        self._10 = _10
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case _1 = "1"
                        case _2 = "2"
                        case _3 = "3"
                        case _4 = "4"
                        case _5 = "5"
                        case _6 = "6"
                        case _7 = "7"
                        case _8 = "8"
                        case _9 = "9"
                        case _10 = "10"
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Subject/rating/count`.
                internal var count: Components.Schemas.Subject.ratingPayload.countPayload
                /// - Remark: Generated from `#/components/schemas/Subject/rating/score`.
                internal var score: Swift.Double
                /// Creates a new `ratingPayload`.
                ///
                /// - Parameters:
                ///   - rank:
                ///   - total:
                ///   - count:
                ///   - score:
                internal init(
                    rank: Swift.Int,
                    total: Swift.Int,
                    count: Components.Schemas.Subject.ratingPayload.countPayload,
                    score: Swift.Double
                ) {
                    self.rank = rank
                    self.total = total
                    self.count = count
                    self.score = score
                }
                internal enum CodingKeys: String, CodingKey {
                    case rank
                    case total
                    case count
                    case score
                }
            }
            /// - Remark: Generated from `#/components/schemas/Subject/rating`.
            internal var rating: Components.Schemas.Subject.ratingPayload
            /// - Remark: Generated from `#/components/schemas/Subject/collection`.
            internal struct collectionPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/Subject/collection/wish`.
                internal var wish: Swift.Int
                /// - Remark: Generated from `#/components/schemas/Subject/collection/collect`.
                internal var collect: Swift.Int
                /// - Remark: Generated from `#/components/schemas/Subject/collection/doing`.
                internal var doing: Swift.Int
                /// - Remark: Generated from `#/components/schemas/Subject/collection/on_hold`.
                internal var on_hold: Swift.Int
                /// - Remark: Generated from `#/components/schemas/Subject/collection/dropped`.
                internal var dropped: Swift.Int
                /// Creates a new `collectionPayload`.
                ///
                /// - Parameters:
                ///   - wish:
                ///   - collect:
                ///   - doing:
                ///   - on_hold:
                ///   - dropped:
                internal init(
                    wish: Swift.Int,
                    collect: Swift.Int,
                    doing: Swift.Int,
                    on_hold: Swift.Int,
                    dropped: Swift.Int
                ) {
                    self.wish = wish
                    self.collect = collect
                    self.doing = doing
                    self.on_hold = on_hold
                    self.dropped = dropped
                }
                internal enum CodingKeys: String, CodingKey {
                    case wish
                    case collect
                    case doing
                    case on_hold
                    case dropped
                }
            }
            /// - Remark: Generated from `#/components/schemas/Subject/collection`.
            internal var collection: Components.Schemas.Subject.collectionPayload
            /// - Remark: Generated from `#/components/schemas/Subject/tags`.
            internal var tags: Components.Schemas.SubjectTags
            /// Creates a new `Subject`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - _type:
            ///   - name:
            ///   - name_cn:
            ///   - summary:
            ///   - series: 是否为书籍系列的主条目
            ///   - nsfw:
            ///   - locked:
            ///   - date: air date in `YYYY-MM-DD` format
            ///   - platform: TV, Web, 欧美剧, DLC...
            ///   - images:
            ///   - infobox:
            ///   - volumes: 书籍条目的册数，由旧服务端从wiki中解析
            ///   - eps: 由旧服务端从wiki中解析，对于书籍条目为`话数`
            ///   - total_episodes: 数据库中的章节数量
            ///   - rating:
            ///   - collection:
            ///   - tags:
            internal init(
                id: Swift.Int,
                _type: Components.Schemas.Subject._typePayload,
                name: Swift.String,
                name_cn: Swift.String,
                summary: Swift.String,
                series: Swift.Bool,
                nsfw: Swift.Bool,
                locked: Swift.Bool,
                date: Swift.String? = nil,
                platform: Swift.String,
                images: Components.Schemas.Images,
                infobox: Components.Schemas.WikiV0? = nil,
                volumes: Swift.Int,
                eps: Swift.Int,
                total_episodes: Swift.Int,
                rating: Components.Schemas.Subject.ratingPayload,
                collection: Components.Schemas.Subject.collectionPayload,
                tags: Components.Schemas.SubjectTags
            ) {
                self.id = id
                self._type = _type
                self.name = name
                self.name_cn = name_cn
                self.summary = summary
                self.series = series
                self.nsfw = nsfw
                self.locked = locked
                self.date = date
                self.platform = platform
                self.images = images
                self.infobox = infobox
                self.volumes = volumes
                self.eps = eps
                self.total_episodes = total_episodes
                self.rating = rating
                self.collection = collection
                self.tags = tags
            }
            internal enum CodingKeys: String, CodingKey {
                case id
                case _type = "type"
                case name
                case name_cn
                case summary
                case series
                case nsfw
                case locked
                case date
                case platform
                case images
                case infobox
                case volumes
                case eps
                case total_episodes
                case rating
                case collection
                case tags
            }
        }
        /// - Remark: Generated from `#/components/schemas/SlimSubject`.
        internal struct SlimSubject: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SlimSubject/id`.
            internal var id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/SlimSubject/type`.
            internal struct _typePayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/SlimSubject/type/value1`.
                internal var value1: Components.Schemas.SubjectType
                /// Creates a new `_typePayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.SubjectType) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try decoder.decodeFromSingleValueContainer()
                }
                internal func encode(to encoder: any Encoder) throws {
                    try encoder.encodeToSingleValueContainer(value1)
                }
            }
            /// - Remark: Generated from `#/components/schemas/SlimSubject/type`.
            internal var _type: Components.Schemas.SlimSubject._typePayload
            /// - Remark: Generated from `#/components/schemas/SlimSubject/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/SlimSubject/name_cn`.
            internal var name_cn: Swift.String
            /// 截短后的条目描述。
            ///
            /// - Remark: Generated from `#/components/schemas/SlimSubject/short_summary`.
            internal var short_summary: Swift.String
            /// air date in `YYYY-MM-DD` format
            ///
            /// - Remark: Generated from `#/components/schemas/SlimSubject/date`.
            internal var date: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SlimSubject/images`.
            internal var images: Components.Schemas.Images
            /// 书籍条目的册数，由旧服务端从wiki中解析
            ///
            /// - Remark: Generated from `#/components/schemas/SlimSubject/volumes`.
            internal var volumes: Swift.Int
            /// 由旧服务端从wiki中解析，对于书籍条目为`话数`
            ///
            /// - Remark: Generated from `#/components/schemas/SlimSubject/eps`.
            internal var eps: Swift.Int
            /// 收藏人数
            ///
            /// - Remark: Generated from `#/components/schemas/SlimSubject/collection_total`.
            internal var collection_total: Swift.Int
            /// 分数
            ///
            /// - Remark: Generated from `#/components/schemas/SlimSubject/score`.
            internal var score: Swift.Double
            /// 排名
            ///
            /// - Remark: Generated from `#/components/schemas/SlimSubject/rank`.
            internal var rank: Swift.Int
            /// 前 10 个 tag
            ///
            /// - Remark: Generated from `#/components/schemas/SlimSubject/tags`.
            internal struct tagsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/SlimSubject/tags/value1`.
                internal var value1: Components.Schemas.SubjectTags
                /// Creates a new `tagsPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.SubjectTags) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try decoder.decodeFromSingleValueContainer()
                }
                internal func encode(to encoder: any Encoder) throws {
                    try encoder.encodeToSingleValueContainer(value1)
                }
            }
            /// 前 10 个 tag
            ///
            /// - Remark: Generated from `#/components/schemas/SlimSubject/tags`.
            internal var tags: Components.Schemas.SlimSubject.tagsPayload
            /// Creates a new `SlimSubject`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - _type:
            ///   - name:
            ///   - name_cn:
            ///   - short_summary: 截短后的条目描述。
            ///   - date: air date in `YYYY-MM-DD` format
            ///   - images:
            ///   - volumes: 书籍条目的册数，由旧服务端从wiki中解析
            ///   - eps: 由旧服务端从wiki中解析，对于书籍条目为`话数`
            ///   - collection_total: 收藏人数
            ///   - score: 分数
            ///   - rank: 排名
            ///   - tags: 前 10 个 tag
            internal init(
                id: Swift.Int,
                _type: Components.Schemas.SlimSubject._typePayload,
                name: Swift.String,
                name_cn: Swift.String,
                short_summary: Swift.String,
                date: Swift.String? = nil,
                images: Components.Schemas.Images,
                volumes: Swift.Int,
                eps: Swift.Int,
                collection_total: Swift.Int,
                score: Swift.Double,
                rank: Swift.Int,
                tags: Components.Schemas.SlimSubject.tagsPayload
            ) {
                self.id = id
                self._type = _type
                self.name = name
                self.name_cn = name_cn
                self.short_summary = short_summary
                self.date = date
                self.images = images
                self.volumes = volumes
                self.eps = eps
                self.collection_total = collection_total
                self.score = score
                self.rank = rank
                self.tags = tags
            }
            internal enum CodingKeys: String, CodingKey {
                case id
                case _type = "type"
                case name
                case name_cn
                case short_summary
                case date
                case images
                case volumes
                case eps
                case collection_total
                case score
                case rank
                case tags
            }
        }
        /// - Remark: Generated from `#/components/schemas/SubjectTags`.
        internal struct SubjectTagsPayload: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SubjectTags/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/SubjectTags/count`.
            internal var count: Swift.Int
            /// Creates a new `SubjectTagsPayload`.
            ///
            /// - Parameters:
            ///   - name:
            ///   - count:
            internal init(
                name: Swift.String,
                count: Swift.Int
            ) {
                self.name = name
                self.count = count
            }
            internal enum CodingKeys: String, CodingKey {
                case name
                case count
            }
        }
        /// - Remark: Generated from `#/components/schemas/SubjectTags`.
        internal typealias SubjectTags = [Components.Schemas.SubjectTagsPayload]
        /// 条目类型
        /// - `1` 为 书籍
        /// - `2` 为 动画
        /// - `3` 为 音乐
        /// - `4` 为 游戏
        /// - `6` 为 三次元
        ///
        /// 没有 `5`
        ///
        /// - Remark: Generated from `#/components/schemas/SubjectType`.
        internal enum SubjectType: Int, Codable, Hashable, Sendable, CaseIterable {
            case _1 = 1
            case _2 = 2
            case _3 = 3
            case _4 = 4
            case _6 = 6
        }
        /// 书籍类型
        /// - `0` 为 其他
        /// - `1001` 为 漫画
        /// - `1002` 为 小说
        /// - `1003` 为 画集
        ///
        /// - Remark: Generated from `#/components/schemas/SubjectBookCategory`.
        internal enum SubjectBookCategory: Int, Codable, Hashable, Sendable, CaseIterable {
            case _0 = 0
            case _1001 = 1001
            case _1002 = 1002
            case _1003 = 1003
        }
        /// 动画类型
        /// - `0` 为 其他
        /// - `1` 为 TV
        /// - `2` 为 OVA
        /// - `3` 为 Movie
        /// - `5` 为 WEB
        ///
        /// - Remark: Generated from `#/components/schemas/SubjectAnimeCategory`.
        internal enum SubjectAnimeCategory: Int, Codable, Hashable, Sendable, CaseIterable {
            case _0 = 0
            case _1 = 1
            case _2 = 2
            case _3 = 3
            case _5 = 5
        }
        /// 游戏类型
        /// - `0` 为 其他
        /// - `4001` 为 游戏
        /// - `4002` 为 软件
        /// - `4003` 为 扩展包
        /// - `4005` 为 桌游
        ///
        /// - Remark: Generated from `#/components/schemas/SubjectGameCategory`.
        internal enum SubjectGameCategory: Int, Codable, Hashable, Sendable, CaseIterable {
            case _0 = 0
            case _4001 = 4001
            case _4003 = 4003
            case _4002 = 4002
            case _4005 = 4005
        }
        /// 电影类型
        /// - `0` 为 其他
        /// - `1` 为 日剧
        /// - `2` 为 欧美剧
        /// - `3` 为 华语剧
        /// - `6001` 为 电视剧
        /// - `6002` 为 电影
        /// - `6003` 为 演出
        /// - `6004` 为 综艺
        ///
        /// - Remark: Generated from `#/components/schemas/SubjectRealCategory`.
        internal enum SubjectRealCategory: Int, Codable, Hashable, Sendable, CaseIterable {
            case _0 = 0
            case _1 = 1
            case _2 = 2
            case _3 = 3
            case _6001 = 6001
            case _6002 = 6002
            case _6003 = 6003
            case _6004 = 6004
        }
        /// - Remark: Generated from `#/components/schemas/SubjectCategory`.
        internal struct SubjectCategory: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SubjectCategory/value1`.
            internal var value1: Components.Schemas.SubjectBookCategory?
            /// - Remark: Generated from `#/components/schemas/SubjectCategory/value2`.
            internal var value2: Components.Schemas.SubjectAnimeCategory?
            /// - Remark: Generated from `#/components/schemas/SubjectCategory/value3`.
            internal var value3: Components.Schemas.SubjectGameCategory?
            /// - Remark: Generated from `#/components/schemas/SubjectCategory/value4`.
            internal var value4: Components.Schemas.SubjectRealCategory?
            /// Creates a new `SubjectCategory`.
            ///
            /// - Parameters:
            ///   - value1:
            ///   - value2:
            ///   - value3:
            ///   - value4:
            internal init(
                value1: Components.Schemas.SubjectBookCategory? = nil,
                value2: Components.Schemas.SubjectAnimeCategory? = nil,
                value3: Components.Schemas.SubjectGameCategory? = nil,
                value4: Components.Schemas.SubjectRealCategory? = nil
            ) {
                self.value1 = value1
                self.value2 = value2
                self.value3 = value3
                self.value4 = value4
            }
            internal init(from decoder: any Decoder) throws {
                var errors: [any Error] = []
                do {
                    value1 = try decoder.decodeFromSingleValueContainer()
                } catch {
                    errors.append(error)
                }
                do {
                    value2 = try decoder.decodeFromSingleValueContainer()
                } catch {
                    errors.append(error)
                }
                do {
                    value3 = try decoder.decodeFromSingleValueContainer()
                } catch {
                    errors.append(error)
                }
                do {
                    value4 = try decoder.decodeFromSingleValueContainer()
                } catch {
                    errors.append(error)
                }
                try Swift.DecodingError.verifyAtLeastOneSchemaIsNotNil(
                    [
                        value1,
                        value2,
                        value3,
                        value4
                    ],
                    type: Self.self,
                    codingPath: decoder.codingPath,
                    errors: errors
                )
            }
            internal func encode(to encoder: any Encoder) throws {
                try encoder.encodeFirstNonNilValueToSingleValueContainer([
                    value1,
                    value2,
                    value3,
                    value4
                ])
            }
        }
        /// - Remark: Generated from `#/components/schemas/UserSubjectCollection`.
        internal struct UserSubjectCollection: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UserSubjectCollection/subject_id`.
            internal var subject_id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/UserSubjectCollection/subject_type`.
            internal var subject_type: Components.Schemas.SubjectType
            /// - Remark: Generated from `#/components/schemas/UserSubjectCollection/rate`.
            internal var rate: Swift.Int
            /// - Remark: Generated from `#/components/schemas/UserSubjectCollection/type`.
            internal var _type: Components.Schemas.SubjectCollectionType
            /// - Remark: Generated from `#/components/schemas/UserSubjectCollection/comment`.
            internal var comment: Swift.String?
            /// - Remark: Generated from `#/components/schemas/UserSubjectCollection/tags`.
            internal var tags: [Swift.String]
            /// - Remark: Generated from `#/components/schemas/UserSubjectCollection/ep_status`.
            internal var ep_status: Swift.Int
            /// - Remark: Generated from `#/components/schemas/UserSubjectCollection/vol_status`.
            internal var vol_status: Swift.Int
            /// 本时间并不代表条目的收藏时间。修改评分，评价，章节观看状态等收藏信息时未更新此时间是一个 bug。请不要依赖此特性
            ///
            /// - Remark: Generated from `#/components/schemas/UserSubjectCollection/updated_at`.
            internal var updated_at: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/UserSubjectCollection/private`.
            internal var _private: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/UserSubjectCollection/subject`.
            internal var subject: Components.Schemas.SlimSubject?
            /// Creates a new `UserSubjectCollection`.
            ///
            /// - Parameters:
            ///   - subject_id:
            ///   - subject_type:
            ///   - rate:
            ///   - _type:
            ///   - comment:
            ///   - tags:
            ///   - ep_status:
            ///   - vol_status:
            ///   - updated_at: 本时间并不代表条目的收藏时间。修改评分，评价，章节观看状态等收藏信息时未更新此时间是一个 bug。请不要依赖此特性
            ///   - _private:
            ///   - subject:
            internal init(
                subject_id: Swift.Int,
                subject_type: Components.Schemas.SubjectType,
                rate: Swift.Int,
                _type: Components.Schemas.SubjectCollectionType,
                comment: Swift.String? = nil,
                tags: [Swift.String],
                ep_status: Swift.Int,
                vol_status: Swift.Int,
                updated_at: Foundation.Date,
                _private: Swift.Bool,
                subject: Components.Schemas.SlimSubject? = nil
            ) {
                self.subject_id = subject_id
                self.subject_type = subject_type
                self.rate = rate
                self._type = _type
                self.comment = comment
                self.tags = tags
                self.ep_status = ep_status
                self.vol_status = vol_status
                self.updated_at = updated_at
                self._private = _private
                self.subject = subject
            }
            internal enum CodingKeys: String, CodingKey {
                case subject_id
                case subject_type
                case rate
                case _type = "type"
                case comment
                case tags
                case ep_status
                case vol_status
                case updated_at
                case _private = "private"
                case subject
            }
        }
        /// 所有的字段均可选
        ///
        /// - Remark: Generated from `#/components/schemas/UserSubjectCollectionModifyPayload`.
        internal struct UserSubjectCollectionModifyPayload: Codable, Hashable, Sendable {
            /// 修改条目收藏类型
            ///
            /// - Remark: Generated from `#/components/schemas/UserSubjectCollectionModifyPayload/type`.
            internal struct _typePayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/UserSubjectCollectionModifyPayload/type/value1`.
                internal var value1: Components.Schemas.SubjectCollectionType
                /// Creates a new `_typePayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.SubjectCollectionType) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try decoder.decodeFromSingleValueContainer()
                }
                internal func encode(to encoder: any Encoder) throws {
                    try encoder.encodeToSingleValueContainer(value1)
                }
            }
            /// 修改条目收藏类型
            ///
            /// - Remark: Generated from `#/components/schemas/UserSubjectCollectionModifyPayload/type`.
            internal var _type: Components.Schemas.UserSubjectCollectionModifyPayload._typePayload?
            /// 评分，`0` 表示删除评分
            ///
            /// - Remark: Generated from `#/components/schemas/UserSubjectCollectionModifyPayload/rate`.
            internal var rate: Swift.Int?
            /// 只能用于修改书籍条目进度
            ///
            /// - Remark: Generated from `#/components/schemas/UserSubjectCollectionModifyPayload/ep_status`.
            internal var ep_status: Swift.Int?
            /// 只能用于修改书籍条目进度
            ///
            /// - Remark: Generated from `#/components/schemas/UserSubjectCollectionModifyPayload/vol_status`.
            internal var vol_status: Swift.Int?
            /// 评价
            ///
            /// - Remark: Generated from `#/components/schemas/UserSubjectCollectionModifyPayload/comment`.
            internal var comment: Swift.String?
            /// 仅自己可见
            ///
            /// - Remark: Generated from `#/components/schemas/UserSubjectCollectionModifyPayload/private`.
            internal var _private: Swift.Bool?
            /// 不传或者 `null` 都会被忽略，传 `[]` 则会删除所有 tag。
            ///
            /// - Remark: Generated from `#/components/schemas/UserSubjectCollectionModifyPayload/tags`.
            internal var tags: [Swift.String]?
            /// Creates a new `UserSubjectCollectionModifyPayload`.
            ///
            /// - Parameters:
            ///   - _type: 修改条目收藏类型
            ///   - rate: 评分，`0` 表示删除评分
            ///   - ep_status: 只能用于修改书籍条目进度
            ///   - vol_status: 只能用于修改书籍条目进度
            ///   - comment: 评价
            ///   - _private: 仅自己可见
            ///   - tags: 不传或者 `null` 都会被忽略，传 `[]` 则会删除所有 tag。
            internal init(
                _type: Components.Schemas.UserSubjectCollectionModifyPayload._typePayload? = nil,
                rate: Swift.Int? = nil,
                ep_status: Swift.Int? = nil,
                vol_status: Swift.Int? = nil,
                comment: Swift.String? = nil,
                _private: Swift.Bool? = nil,
                tags: [Swift.String]? = nil
            ) {
                self._type = _type
                self.rate = rate
                self.ep_status = ep_status
                self.vol_status = vol_status
                self.comment = comment
                self._private = _private
                self.tags = tags
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case rate
                case ep_status
                case vol_status
                case comment
                case _private = "private"
                case tags
            }
        }
        /// - Remark: Generated from `#/components/schemas/UserEpisodeCollection`.
        internal struct UserEpisodeCollection: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UserEpisodeCollection/episode`.
            internal var episode: Components.Schemas.Episode
            /// - Remark: Generated from `#/components/schemas/UserEpisodeCollection/type`.
            internal var _type: Components.Schemas.EpisodeCollectionType
            /// Creates a new `UserEpisodeCollection`.
            ///
            /// - Parameters:
            ///   - episode:
            ///   - _type:
            internal init(
                episode: Components.Schemas.Episode,
                _type: Components.Schemas.EpisodeCollectionType
            ) {
                self.episode = episode
                self._type = _type
            }
            internal enum CodingKeys: String, CodingKey {
                case episode
                case _type = "type"
            }
            internal init(from decoder: any Decoder) throws {
                let container = try decoder.container(keyedBy: CodingKeys.self)
                episode = try container.decode(
                    Components.Schemas.Episode.self,
                    forKey: .episode
                )
                _type = try container.decode(
                    Components.Schemas.EpisodeCollectionType.self,
                    forKey: ._type
                )
                try decoder.ensureNoAdditionalProperties(knownKeys: [
                    "episode",
                    "type"
                ])
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0_RelatedSubject`.
        internal struct v0_RelatedSubject: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0_RelatedSubject/id`.
            internal var id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/v0_RelatedSubject/type`.
            internal var _type: Components.Schemas.SubjectType
            /// - Remark: Generated from `#/components/schemas/v0_RelatedSubject/staff`.
            internal var staff: Swift.String
            /// - Remark: Generated from `#/components/schemas/v0_RelatedSubject/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/v0_RelatedSubject/name_cn`.
            internal var name_cn: Swift.String
            /// - Remark: Generated from `#/components/schemas/v0_RelatedSubject/image`.
            internal var image: Swift.String?
            /// Creates a new `v0_RelatedSubject`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - _type:
            ///   - staff:
            ///   - name:
            ///   - name_cn:
            ///   - image:
            internal init(
                id: Swift.Int,
                _type: Components.Schemas.SubjectType,
                staff: Swift.String,
                name: Swift.String,
                name_cn: Swift.String,
                image: Swift.String? = nil
            ) {
                self.id = id
                self._type = _type
                self.staff = staff
                self.name = name
                self.name_cn = name_cn
                self.image = image
            }
            internal enum CodingKeys: String, CodingKey {
                case id
                case _type = "type"
                case staff
                case name
                case name_cn
                case image
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0_subject_relation`.
        internal struct v0_subject_relation: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0_subject_relation/id`.
            internal var id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/v0_subject_relation/type`.
            internal var _type: Swift.Int
            /// - Remark: Generated from `#/components/schemas/v0_subject_relation/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/v0_subject_relation/name_cn`.
            internal var name_cn: Swift.String
            /// - Remark: Generated from `#/components/schemas/v0_subject_relation/images`.
            internal var images: Components.Schemas.Images?
            /// - Remark: Generated from `#/components/schemas/v0_subject_relation/relation`.
            internal var relation: Swift.String
            /// Creates a new `v0_subject_relation`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - _type:
            ///   - name:
            ///   - name_cn:
            ///   - images:
            ///   - relation:
            internal init(
                id: Swift.Int,
                _type: Swift.Int,
                name: Swift.String,
                name_cn: Swift.String,
                images: Components.Schemas.Images? = nil,
                relation: Swift.String
            ) {
                self.id = id
                self._type = _type
                self.name = name
                self.name_cn = name_cn
                self.images = images
                self.relation = relation
            }
            internal enum CodingKeys: String, CodingKey {
                case id
                case _type = "type"
                case name
                case name_cn
                case images
                case relation
            }
        }
    }
    /// Types generated from the `#/components/parameters` section of the OpenAPI document.
    internal enum Parameters {
        /// 条目 ID
        ///
        /// - Remark: Generated from `#/components/parameters/path_subject_id`.
        internal typealias path_subject_id = Components.Schemas.SubjectID
        /// 设置了用户名之后无法使用 UID。
        ///
        /// - Remark: Generated from `#/components/parameters/path_username`.
        internal typealias path_username = Swift.String
        /// 章节 ID
        ///
        /// - Remark: Generated from `#/components/parameters/path_episode_id`.
        internal typealias path_episode_id = Swift.Int
        /// 角色 ID
        ///
        /// - Remark: Generated from `#/components/parameters/path_character_id`.
        internal typealias path_character_id = Swift.Int
        /// 人物 ID
        ///
        /// - Remark: Generated from `#/components/parameters/path_person_id`.
        internal typealias path_person_id = Swift.Int
        /// 目录 ID
        ///
        /// - Remark: Generated from `#/components/parameters/path_index_id`.
        internal typealias path_index_id = Swift.Int
        /// 条目 ID
        ///
        /// - Remark: Generated from `#/components/parameters/query_subject_id`.
        internal typealias query_subject_id = Components.Schemas.SubjectID
        /// 分页参数
        ///
        /// - Remark: Generated from `#/components/parameters/default_query_limit`.
        internal typealias default_query_limit = Swift.Int
        /// 分页参数
        ///
        /// - Remark: Generated from `#/components/parameters/default_query_offset`.
        internal typealias default_query_offset = Swift.Int
        /// 版本 ID
        ///
        /// - Remark: Generated from `#/components/parameters/path_revision_id`.
        internal typealias path_revision_id = Swift.Int
    }
    /// Types generated from the `#/components/requestBodies` section of the OpenAPI document.
    internal enum RequestBodies {}
    /// Types generated from the `#/components/responses` section of the OpenAPI document.
    internal enum Responses {
        internal struct _400: Sendable, Hashable {
            /// - Remark: Generated from `#/components/responses/400/content`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/components/responses/400/content/application\/json`.
                case json(Components.Schemas.ErrorDetail)
                /// The associated value of the enum case if `self` is `.json`.
                ///
                /// - Throws: An error if `self` is not `.json`.
                /// - SeeAlso: `.json`.
                internal var json: Components.Schemas.ErrorDetail {
                    get throws {
                        switch self {
                        case let .json(body):
                            return body
                        }
                    }
                }
            }
            /// Received HTTP response body
            internal var body: Components.Responses._400.Body
            /// Creates a new `_400`.
            ///
            /// - Parameters:
            ///   - body: Received HTTP response body
            internal init(body: Components.Responses._400.Body) {
                self.body = body
            }
        }
        internal struct _401: Sendable, Hashable {
            /// - Remark: Generated from `#/components/responses/401/content`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/components/responses/401/content/application\/json`.
                case json(Components.Schemas.ErrorDetail)
                /// The associated value of the enum case if `self` is `.json`.
                ///
                /// - Throws: An error if `self` is not `.json`.
                /// - SeeAlso: `.json`.
                internal var json: Components.Schemas.ErrorDetail {
                    get throws {
                        switch self {
                        case let .json(body):
                            return body
                        }
                    }
                }
            }
            /// Received HTTP response body
            internal var body: Components.Responses._401.Body
            /// Creates a new `_401`.
            ///
            /// - Parameters:
            ///   - body: Received HTTP response body
            internal init(body: Components.Responses._401.Body) {
                self.body = body
            }
        }
        internal struct _404: Sendable, Hashable {
            /// - Remark: Generated from `#/components/responses/404/content`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/components/responses/404/content/application\/json`.
                case json(Components.Schemas.ErrorDetail)
                /// The associated value of the enum case if `self` is `.json`.
                ///
                /// - Throws: An error if `self` is not `.json`.
                /// - SeeAlso: `.json`.
                internal var json: Components.Schemas.ErrorDetail {
                    get throws {
                        switch self {
                        case let .json(body):
                            return body
                        }
                    }
                }
            }
            /// Received HTTP response body
            internal var body: Components.Responses._404.Body
            /// Creates a new `_404`.
            ///
            /// - Parameters:
            ///   - body: Received HTTP response body
            internal init(body: Components.Responses._404.Body) {
                self.body = body
            }
        }
        internal struct _500: Sendable, Hashable {
            /// - Remark: Generated from `#/components/responses/500/content`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/components/responses/500/content/application\/json`.
                case json(Components.Schemas.ErrorDetail)
                /// The associated value of the enum case if `self` is `.json`.
                ///
                /// - Throws: An error if `self` is not `.json`.
                /// - SeeAlso: `.json`.
                internal var json: Components.Schemas.ErrorDetail {
                    get throws {
                        switch self {
                        case let .json(body):
                            return body
                        }
                    }
                }
            }
            /// Received HTTP response body
            internal var body: Components.Responses._500.Body
            /// Creates a new `_500`.
            ///
            /// - Parameters:
            ///   - body: Received HTTP response body
            internal init(body: Components.Responses._500.Body) {
                self.body = body
            }
        }
        internal struct _200_hyphen_no_hyphen_content: Sendable, Hashable {
            /// Creates a new `_200_hyphen_no_hyphen_content`.
            internal init() {}
        }
    }
    /// Types generated from the `#/components/headers` section of the OpenAPI document.
    internal enum Headers {}
}

/// API operations, with input and output types, generated from `#/paths` in the OpenAPI document.
internal enum Operations {
    /// 条目搜索
    ///
    /// ## 实验性 API， 本 schema 和实际的 API 行为都可能随时发生改动
    ///
    /// 目前支持的筛选条件包括:
    /// - `type`: 条目类型，参照 `SubjectType` enum， `或`。
    /// - `tag`: 标签，可以多次出现。`且` 关系。
    /// - `airdate`: 播出日期/发售日期。`且` 关系。
    /// - `rating`: 用于搜索指定评分的条目。`且` 关系。
    /// - `rank`: 用于搜索指定排名的条目。`且` 关系。
    /// - `nsfw`: 使用 `include` 包含NSFW搜索结果。默认排除搜索NSFW条目。无权限情况下忽略此选项，不会返回NSFW条目。
    ///
    /// 不同筛选条件之间为 `且`
    ///
    ///
    /// 由于目前 meilisearch 的一些问题，条目排名更新并不会触发搜索数据更新，所以条目排名可能是过期数据。
    ///
    /// 希望未来版本的 meilisearch 能解决相关的问题。
    ///
    ///
    /// - Remark: HTTP `POST /v0/search/subjects`.
    /// - Remark: Generated from `#/paths//v0/search/subjects/post(searchSubjects)`.
    internal enum searchSubjects {
        internal static let id: Swift.String = "searchSubjects"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/search/subjects/POST/query`.
            internal struct Query: Sendable, Hashable {
                /// 分页参数
                ///
                /// - Remark: Generated from `#/paths/v0/search/subjects/POST/query/limit`.
                internal var limit: Swift.Int?
                /// 分页参数
                ///
                /// - Remark: Generated from `#/paths/v0/search/subjects/POST/query/offset`.
                internal var offset: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - limit: 分页参数
                ///   - offset: 分页参数
                internal init(
                    limit: Swift.Int? = nil,
                    offset: Swift.Int? = nil
                ) {
                    self.limit = limit
                    self.offset = offset
                }
            }
            internal var query: Operations.searchSubjects.Input.Query
            /// - Remark: Generated from `#/paths/v0/search/subjects/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.searchSubjects.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.searchSubjects.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.searchSubjects.Input.Headers
            /// - Remark: Generated from `#/paths/v0/search/subjects/POST/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/search/subjects/POST/requestBody/json`.
                internal struct jsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v0/search/subjects/POST/requestBody/json/keyword`.
                    internal var keyword: Swift.String
                    /// 排序规则
                    ///
                    /// - `match` meilisearch 的默认排序，按照匹配程度
                    /// - `heat` 收藏人数
                    /// - `rank` 排名由高到低
                    /// - `score` 评分
                    ///
                    ///
                    /// - Remark: Generated from `#/paths/v0/search/subjects/POST/requestBody/json/sort`.
                    internal enum sortPayload: String, Codable, Hashable, Sendable, CaseIterable {
                        case match = "match"
                        case heat = "heat"
                        case rank = "rank"
                        case score = "score"
                    }
                    /// 排序规则
                    ///
                    /// - `match` meilisearch 的默认排序，按照匹配程度
                    /// - `heat` 收藏人数
                    /// - `rank` 排名由高到低
                    /// - `score` 评分
                    ///
                    ///
                    /// - Remark: Generated from `#/paths/v0/search/subjects/POST/requestBody/json/sort`.
                    internal var sort: Operations.searchSubjects.Input.Body.jsonPayload.sortPayload?
                    /// 不同条件之间是 `且` 的关系
                    ///
                    /// - Remark: Generated from `#/paths/v0/search/subjects/POST/requestBody/json/filter`.
                    internal struct filterPayload: Codable, Hashable, Sendable {
                        /// 条目类型，参照 `SubjectType` enum，多值之间为 `或` 的关系。
                        ///
                        /// - Remark: Generated from `#/paths/v0/search/subjects/POST/requestBody/json/filter/type`.
                        internal var _type: [Components.Schemas.SubjectType]?
                        /// 标签，可以多次出现。多值之间为 `且` 关系。
                        ///
                        /// - Remark: Generated from `#/paths/v0/search/subjects/POST/requestBody/json/filter/tag`.
                        internal var tag: [Swift.String]?
                        /// 播出日期/发售日期，日期必需为 `YYYY-MM-DD` 格式。多值之间为 `且` 关系。
                        ///
                        /// - Remark: Generated from `#/paths/v0/search/subjects/POST/requestBody/json/filter/air_date`.
                        internal var air_date: [Swift.String]?
                        /// 用于搜索指定评分的条目，多值之间为 `且` 关系。
                        ///
                        /// - Remark: Generated from `#/paths/v0/search/subjects/POST/requestBody/json/filter/rating`.
                        internal var rating: [Swift.String]?
                        /// 用于搜索指定排名的条目，多值之间为 `且` 关系。
                        ///
                        /// - Remark: Generated from `#/paths/v0/search/subjects/POST/requestBody/json/filter/rank`.
                        internal var rank: [Swift.String]?
                        /// 无权限的用户会直接忽略此字段，不会返回R18条目。
                        ///
                        /// 默认或者 `null` 会返回包含 R18 的所有搜索结果。
                        ///
                        /// `true` 只会返回 R18 条目。
                        ///
                        /// `false` 只会返回非 R18 条目。
                        ///
                        ///
                        /// - Remark: Generated from `#/paths/v0/search/subjects/POST/requestBody/json/filter/nsfw`.
                        internal var nsfw: Swift.Bool?
                        /// Creates a new `filterPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type: 条目类型，参照 `SubjectType` enum，多值之间为 `或` 的关系。
                        ///   - tag: 标签，可以多次出现。多值之间为 `且` 关系。
                        ///   - air_date: 播出日期/发售日期，日期必需为 `YYYY-MM-DD` 格式。多值之间为 `且` 关系。
                        ///   - rating: 用于搜索指定评分的条目，多值之间为 `且` 关系。
                        ///   - rank: 用于搜索指定排名的条目，多值之间为 `且` 关系。
                        ///   - nsfw: 无权限的用户会直接忽略此字段，不会返回R18条目。
                        internal init(
                            _type: [Components.Schemas.SubjectType]? = nil,
                            tag: [Swift.String]? = nil,
                            air_date: [Swift.String]? = nil,
                            rating: [Swift.String]? = nil,
                            rank: [Swift.String]? = nil,
                            nsfw: Swift.Bool? = nil
                        ) {
                            self._type = _type
                            self.tag = tag
                            self.air_date = air_date
                            self.rating = rating
                            self.rank = rank
                            self.nsfw = nsfw
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case tag
                            case air_date
                            case rating
                            case rank
                            case nsfw
                        }
                    }
                    /// 不同条件之间是 `且` 的关系
                    ///
                    /// - Remark: Generated from `#/paths/v0/search/subjects/POST/requestBody/json/filter`.
                    internal var filter: Operations.searchSubjects.Input.Body.jsonPayload.filterPayload?
                    /// Creates a new `jsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - keyword:
                    ///   - sort: 排序规则
                    ///   - filter: 不同条件之间是 `且` 的关系
                    internal init(
                        keyword: Swift.String,
                        sort: Operations.searchSubjects.Input.Body.jsonPayload.sortPayload? = nil,
                        filter: Operations.searchSubjects.Input.Body.jsonPayload.filterPayload? = nil
                    ) {
                        self.keyword = keyword
                        self.sort = sort
                        self.filter = filter
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case keyword
                        case sort
                        case filter
                    }
                }
                /// - Remark: Generated from `#/paths/v0/search/subjects/POST/requestBody/content/application\/json`.
                case json(Operations.searchSubjects.Input.Body.jsonPayload)
            }
            internal var body: Operations.searchSubjects.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            ///   - body:
            internal init(
                query: Operations.searchSubjects.Input.Query = .init(),
                headers: Operations.searchSubjects.Input.Headers = .init(),
                body: Operations.searchSubjects.Input.Body? = nil
            ) {
                self.query = query
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/search/subjects/POST/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// 用户信息
                    ///
                    /// - Remark: Generated from `#/paths/v0/search/subjects/POST/responses/200/content/json`.
                    internal struct jsonPayload: Codable, Hashable, Sendable {
                        /// 搜索结果数量
                        ///
                        /// - Remark: Generated from `#/paths/v0/search/subjects/POST/responses/200/content/json/total`.
                        internal var total: Swift.Int?
                        /// 当前分页参数
                        ///
                        /// - Remark: Generated from `#/paths/v0/search/subjects/POST/responses/200/content/json/limit`.
                        internal var limit: Swift.Int?
                        /// 当前分页参数
                        ///
                        /// - Remark: Generated from `#/paths/v0/search/subjects/POST/responses/200/content/json/offset`.
                        internal var offset: Swift.Int?
                        /// - Remark: Generated from `#/paths/v0/search/subjects/POST/responses/200/content/json/dataPayload`.
                        internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                            /// 条目ID
                            ///
                            /// - Remark: Generated from `#/paths/v0/search/subjects/POST/responses/200/content/json/dataPayload/id`.
                            internal var id: Swift.Int
                            /// - Remark: Generated from `#/paths/v0/search/subjects/POST/responses/200/content/json/dataPayload/type`.
                            internal var _type: Components.Schemas.SubjectType?
                            /// 上映/开播/连载开始日期，可能为空字符串
                            ///
                            /// - Remark: Generated from `#/paths/v0/search/subjects/POST/responses/200/content/json/dataPayload/date`.
                            internal var date: Swift.String
                            /// 封面
                            ///
                            /// - Remark: Generated from `#/paths/v0/search/subjects/POST/responses/200/content/json/dataPayload/image`.
                            internal var image: Swift.String
                            /// 条目描述
                            ///
                            /// - Remark: Generated from `#/paths/v0/search/subjects/POST/responses/200/content/json/dataPayload/summary`.
                            internal var summary: Swift.String
                            /// 条目原名
                            ///
                            /// - Remark: Generated from `#/paths/v0/search/subjects/POST/responses/200/content/json/dataPayload/name`.
                            internal var name: Swift.String
                            /// 条目中文名
                            ///
                            /// - Remark: Generated from `#/paths/v0/search/subjects/POST/responses/200/content/json/dataPayload/name_cn`.
                            internal var name_cn: Swift.String
                            /// - Remark: Generated from `#/paths/v0/search/subjects/POST/responses/200/content/json/dataPayload/tags`.
                            internal var tags: Components.Schemas.SubjectTags
                            /// 评分
                            ///
                            /// - Remark: Generated from `#/paths/v0/search/subjects/POST/responses/200/content/json/dataPayload/score`.
                            internal var score: Swift.Double
                            /// 排名
                            ///
                            /// - Remark: Generated from `#/paths/v0/search/subjects/POST/responses/200/content/json/dataPayload/rank`.
                            internal var rank: Swift.Int
                            /// Creates a new `dataPayloadPayload`.
                            ///
                            /// - Parameters:
                            ///   - id: 条目ID
                            ///   - _type:
                            ///   - date: 上映/开播/连载开始日期，可能为空字符串
                            ///   - image: 封面
                            ///   - summary: 条目描述
                            ///   - name: 条目原名
                            ///   - name_cn: 条目中文名
                            ///   - tags:
                            ///   - score: 评分
                            ///   - rank: 排名
                            internal init(
                                id: Swift.Int,
                                _type: Components.Schemas.SubjectType? = nil,
                                date: Swift.String,
                                image: Swift.String,
                                summary: Swift.String,
                                name: Swift.String,
                                name_cn: Swift.String,
                                tags: Components.Schemas.SubjectTags,
                                score: Swift.Double,
                                rank: Swift.Int
                            ) {
                                self.id = id
                                self._type = _type
                                self.date = date
                                self.image = image
                                self.summary = summary
                                self.name = name
                                self.name_cn = name_cn
                                self.tags = tags
                                self.score = score
                                self.rank = rank
                            }
                            internal enum CodingKeys: String, CodingKey {
                                case id
                                case _type = "type"
                                case date
                                case image
                                case summary
                                case name
                                case name_cn
                                case tags
                                case score
                                case rank
                            }
                        }
                        /// - Remark: Generated from `#/paths/v0/search/subjects/POST/responses/200/content/json/data`.
                        internal typealias dataPayload = [Operations.searchSubjects.Output.Ok.Body.jsonPayload.dataPayloadPayload]
                        /// - Remark: Generated from `#/paths/v0/search/subjects/POST/responses/200/content/json/data`.
                        internal var data: Operations.searchSubjects.Output.Ok.Body.jsonPayload.dataPayload?
                        /// Creates a new `jsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - total: 搜索结果数量
                        ///   - limit: 当前分页参数
                        ///   - offset: 当前分页参数
                        ///   - data:
                        internal init(
                            total: Swift.Int? = nil,
                            limit: Swift.Int? = nil,
                            offset: Swift.Int? = nil,
                            data: Operations.searchSubjects.Output.Ok.Body.jsonPayload.dataPayload? = nil
                        ) {
                            self.total = total
                            self.limit = limit
                            self.offset = offset
                            self.data = data
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case total
                            case limit
                            case offset
                            case data
                        }
                    }
                    /// - Remark: Generated from `#/paths/v0/search/subjects/POST/responses/200/content/application\/json`.
                    case json(Operations.searchSubjects.Output.Ok.Body.jsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Operations.searchSubjects.Output.Ok.Body.jsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.searchSubjects.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.searchSubjects.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// 返回搜索结果
            ///
            /// - Remark: Generated from `#/paths//v0/search/subjects/post(searchSubjects)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.searchSubjects.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.searchSubjects.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// 浏览条目
    ///
    /// 第一页会 cache 24h，之后会 cache 1h
    ///
    /// - Remark: HTTP `GET /v0/subjects`.
    /// - Remark: Generated from `#/paths//v0/subjects/get(getSubjects)`.
    internal enum getSubjects {
        internal static let id: Swift.String = "getSubjects"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/subjects/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// 条目类型
                ///
                /// - Remark: Generated from `#/paths/v0/subjects/GET/query/type`.
                internal var _type: Components.Schemas.SubjectType
                /// 条目分类，参照 `SubjectCategory` enum
                ///
                /// - Remark: Generated from `#/paths/v0/subjects/GET/query/cat`.
                internal var cat: Components.Schemas.SubjectCategory?
                /// 是否系列，仅对书籍类型的条目有效
                ///
                /// - Remark: Generated from `#/paths/v0/subjects/GET/query/series`.
                internal var series: Swift.Bool?
                /// 平台，仅对游戏类型的条目有效
                ///
                /// - Remark: Generated from `#/paths/v0/subjects/GET/query/platform`.
                internal var platform: Swift.String?
                /// 排序，枚举值 {date|rank}
                ///
                /// - Remark: Generated from `#/paths/v0/subjects/GET/query/sort`.
                internal var sort: Swift.String?
                /// 年份
                ///
                /// - Remark: Generated from `#/paths/v0/subjects/GET/query/year`.
                internal var year: Swift.Int?
                /// 月份
                ///
                /// - Remark: Generated from `#/paths/v0/subjects/GET/query/month`.
                internal var month: Swift.Int?
                /// 分页参数
                ///
                /// - Remark: Generated from `#/paths/v0/subjects/GET/query/limit`.
                internal var limit: Components.Parameters.default_query_limit?
                /// 分页参数
                ///
                /// - Remark: Generated from `#/paths/v0/subjects/GET/query/offset`.
                internal var offset: Components.Parameters.default_query_offset?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - _type: 条目类型
                ///   - cat: 条目分类，参照 `SubjectCategory` enum
                ///   - series: 是否系列，仅对书籍类型的条目有效
                ///   - platform: 平台，仅对游戏类型的条目有效
                ///   - sort: 排序，枚举值 {date|rank}
                ///   - year: 年份
                ///   - month: 月份
                ///   - limit: 分页参数
                ///   - offset: 分页参数
                internal init(
                    _type: Components.Schemas.SubjectType,
                    cat: Components.Schemas.SubjectCategory? = nil,
                    series: Swift.Bool? = nil,
                    platform: Swift.String? = nil,
                    sort: Swift.String? = nil,
                    year: Swift.Int? = nil,
                    month: Swift.Int? = nil,
                    limit: Components.Parameters.default_query_limit? = nil,
                    offset: Components.Parameters.default_query_offset? = nil
                ) {
                    self._type = _type
                    self.cat = cat
                    self.series = series
                    self.platform = platform
                    self.sort = sort
                    self.year = year
                    self.month = month
                    self.limit = limit
                    self.offset = offset
                }
            }
            internal var query: Operations.getSubjects.Input.Query
            /// - Remark: Generated from `#/paths/v0/subjects/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getSubjects.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getSubjects.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getSubjects.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.getSubjects.Input.Query,
                headers: Operations.getSubjects.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/subjects/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/subjects/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.Paged_Subject)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.Paged_Subject {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getSubjects.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getSubjects.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/subjects/get(getSubjects)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getSubjects.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getSubjects.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/subjects/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/subjects/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getSubjects.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getSubjects.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/subjects/get(getSubjects)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getSubjects.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getSubjects.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/subjects/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/subjects/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getSubjects.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getSubjects.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/subjects/get(getSubjects)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getSubjects.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getSubjects.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// 获取条目
    ///
    /// cache with 300s
    ///
    /// - Remark: HTTP `GET /v0/subjects/{subject_id}`.
    /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/get(getSubjectById)`.
    internal enum getSubjectById {
        internal static let id: Swift.String = "getSubjectById"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 条目 ID
                ///
                /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/GET/path/subject_id`.
                internal var subject_id: Components.Parameters.path_subject_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - subject_id: 条目 ID
                internal init(subject_id: Components.Parameters.path_subject_id) {
                    self.subject_id = subject_id
                }
            }
            internal var path: Operations.getSubjectById.Input.Path
            /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getSubjectById.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getSubjectById.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getSubjectById.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getSubjectById.Input.Path,
                headers: Operations.getSubjectById.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.Subject)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.Subject {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getSubjectById.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getSubjectById.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/get(getSubjectById)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getSubjectById.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getSubjectById.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getSubjectById.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getSubjectById.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/get(getSubjectById)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getSubjectById.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getSubjectById.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getSubjectById.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getSubjectById.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/get(getSubjectById)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getSubjectById.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getSubjectById.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get Subject Image
    ///
    /// - Remark: HTTP `GET /v0/subjects/{subject_id}/image`.
    /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/image/get(getSubjectImageById)`.
    internal enum getSubjectImageById {
        internal static let id: Swift.String = "getSubjectImageById"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/image/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 条目 ID
                ///
                /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/image/GET/path/subject_id`.
                internal var subject_id: Components.Parameters.path_subject_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - subject_id: 条目 ID
                internal init(subject_id: Components.Parameters.path_subject_id) {
                    self.subject_id = subject_id
                }
            }
            internal var path: Operations.getSubjectImageById.Input.Path
            /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/image/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// 枚举值 {small|grid|large|medium|common}
                ///
                /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/image/GET/query/type`.
                internal var _type: Swift.String
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - _type: 枚举值 {small|grid|large|medium|common}
                internal init(_type: Swift.String) {
                    self._type = _type
                }
            }
            internal var query: Operations.getSubjectImageById.Input.Query
            /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/image/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getSubjectImageById.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getSubjectImageById.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getSubjectImageById.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.getSubjectImageById.Input.Path,
                query: Operations.getSubjectImageById.Input.Query,
                headers: Operations.getSubjectImageById.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Found: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/image/GET/responses/302/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// 图片链接
                    /// 无图时返回默认图片 https://lain.bgm.tv/img/no_icon_subject.png
                    ///
                    /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/image/GET/responses/302/headers/Location`.
                    internal var Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Location: 图片链接
                    internal init(Location: Swift.String? = nil) {
                        self.Location = Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.getSubjectImageById.Output.Found.Headers
                /// Creates a new `Found`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                internal init(headers: Operations.getSubjectImageById.Output.Found.Headers = .init()) {
                    self.headers = headers
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/image/get(getSubjectImageById)/responses/302`.
            ///
            /// HTTP response code: `302 found`.
            case found(Operations.getSubjectImageById.Output.Found)
            /// The associated value of the enum case if `self` is `.found`.
            ///
            /// - Throws: An error if `self` is not `.found`.
            /// - SeeAlso: `.found`.
            internal var found: Operations.getSubjectImageById.Output.Found {
                get throws {
                    switch self {
                    case let .found(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "found",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/image/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/image/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getSubjectImageById.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getSubjectImageById.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/image/get(getSubjectImageById)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getSubjectImageById.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getSubjectImageById.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/image/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/image/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getSubjectImageById.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getSubjectImageById.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/image/get(getSubjectImageById)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getSubjectImageById.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getSubjectImageById.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get Subject Persons
    ///
    /// - Remark: HTTP `GET /v0/subjects/{subject_id}/persons`.
    /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/persons/get(getRelatedPersonsBySubjectId)`.
    internal enum getRelatedPersonsBySubjectId {
        internal static let id: Swift.String = "getRelatedPersonsBySubjectId"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/persons/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 条目 ID
                ///
                /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/persons/GET/path/subject_id`.
                internal var subject_id: Components.Parameters.path_subject_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - subject_id: 条目 ID
                internal init(subject_id: Components.Parameters.path_subject_id) {
                    self.subject_id = subject_id
                }
            }
            internal var path: Operations.getRelatedPersonsBySubjectId.Input.Path
            /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/persons/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getRelatedPersonsBySubjectId.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getRelatedPersonsBySubjectId.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getRelatedPersonsBySubjectId.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getRelatedPersonsBySubjectId.Input.Path,
                headers: Operations.getRelatedPersonsBySubjectId.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/persons/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/persons/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.RelatedPerson])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.RelatedPerson] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getRelatedPersonsBySubjectId.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getRelatedPersonsBySubjectId.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/persons/get(getRelatedPersonsBySubjectId)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getRelatedPersonsBySubjectId.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getRelatedPersonsBySubjectId.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/persons/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/persons/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getRelatedPersonsBySubjectId.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getRelatedPersonsBySubjectId.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/persons/get(getRelatedPersonsBySubjectId)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getRelatedPersonsBySubjectId.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getRelatedPersonsBySubjectId.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/persons/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/persons/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getRelatedPersonsBySubjectId.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getRelatedPersonsBySubjectId.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/persons/get(getRelatedPersonsBySubjectId)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getRelatedPersonsBySubjectId.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getRelatedPersonsBySubjectId.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get Subject Characters
    ///
    /// - Remark: HTTP `GET /v0/subjects/{subject_id}/characters`.
    /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/characters/get(getRelatedCharactersBySubjectId)`.
    internal enum getRelatedCharactersBySubjectId {
        internal static let id: Swift.String = "getRelatedCharactersBySubjectId"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/characters/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 条目 ID
                ///
                /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/characters/GET/path/subject_id`.
                internal var subject_id: Components.Parameters.path_subject_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - subject_id: 条目 ID
                internal init(subject_id: Components.Parameters.path_subject_id) {
                    self.subject_id = subject_id
                }
            }
            internal var path: Operations.getRelatedCharactersBySubjectId.Input.Path
            /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/characters/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getRelatedCharactersBySubjectId.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getRelatedCharactersBySubjectId.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getRelatedCharactersBySubjectId.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getRelatedCharactersBySubjectId.Input.Path,
                headers: Operations.getRelatedCharactersBySubjectId.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/characters/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/characters/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.RelatedCharacter])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.RelatedCharacter] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getRelatedCharactersBySubjectId.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getRelatedCharactersBySubjectId.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/characters/get(getRelatedCharactersBySubjectId)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getRelatedCharactersBySubjectId.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getRelatedCharactersBySubjectId.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/characters/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/characters/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getRelatedCharactersBySubjectId.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getRelatedCharactersBySubjectId.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/characters/get(getRelatedCharactersBySubjectId)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getRelatedCharactersBySubjectId.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getRelatedCharactersBySubjectId.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/characters/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/characters/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getRelatedCharactersBySubjectId.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getRelatedCharactersBySubjectId.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/characters/get(getRelatedCharactersBySubjectId)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getRelatedCharactersBySubjectId.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getRelatedCharactersBySubjectId.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get Subject Relations
    ///
    /// - Remark: HTTP `GET /v0/subjects/{subject_id}/subjects`.
    /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/subjects/get(getRelatedSubjectsBySubjectId)`.
    internal enum getRelatedSubjectsBySubjectId {
        internal static let id: Swift.String = "getRelatedSubjectsBySubjectId"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/subjects/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 条目 ID
                ///
                /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/subjects/GET/path/subject_id`.
                internal var subject_id: Components.Parameters.path_subject_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - subject_id: 条目 ID
                internal init(subject_id: Components.Parameters.path_subject_id) {
                    self.subject_id = subject_id
                }
            }
            internal var path: Operations.getRelatedSubjectsBySubjectId.Input.Path
            /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/subjects/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getRelatedSubjectsBySubjectId.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getRelatedSubjectsBySubjectId.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getRelatedSubjectsBySubjectId.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getRelatedSubjectsBySubjectId.Input.Path,
                headers: Operations.getRelatedSubjectsBySubjectId.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/subjects/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/subjects/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.v0_subject_relation])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.v0_subject_relation] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getRelatedSubjectsBySubjectId.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getRelatedSubjectsBySubjectId.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/subjects/get(getRelatedSubjectsBySubjectId)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getRelatedSubjectsBySubjectId.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getRelatedSubjectsBySubjectId.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/subjects/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/subjects/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getRelatedSubjectsBySubjectId.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getRelatedSubjectsBySubjectId.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/subjects/get(getRelatedSubjectsBySubjectId)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getRelatedSubjectsBySubjectId.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getRelatedSubjectsBySubjectId.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/subjects/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/subjects/{subject_id}/subjects/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getRelatedSubjectsBySubjectId.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getRelatedSubjectsBySubjectId.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/subjects/{subject_id}/subjects/get(getRelatedSubjectsBySubjectId)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getRelatedSubjectsBySubjectId.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getRelatedSubjectsBySubjectId.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get Episodes
    ///
    /// - Remark: HTTP `GET /v0/episodes`.
    /// - Remark: Generated from `#/paths//v0/episodes/get(getEpisodes)`.
    internal enum getEpisodes {
        internal static let id: Swift.String = "getEpisodes"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/episodes/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// 条目 ID
                ///
                /// - Remark: Generated from `#/paths/v0/episodes/GET/query/subject_id`.
                internal var subject_id: Components.Parameters.query_subject_id
                /// 参照章节的`type`
                ///
                /// - Remark: Generated from `#/paths/v0/episodes/GET/query/type`.
                internal struct _typePayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v0/episodes/GET/query/type/value1`.
                    internal var value1: Components.Schemas.EpType
                    /// Creates a new `_typePayload`.
                    ///
                    /// - Parameters:
                    ///   - value1:
                    internal init(value1: Components.Schemas.EpType) {
                        self.value1 = value1
                    }
                    internal init(from decoder: any Decoder) throws {
                        value1 = try decoder.decodeFromSingleValueContainer()
                    }
                    internal func encode(to encoder: any Encoder) throws {
                        try encoder.encodeToSingleValueContainer(value1)
                    }
                }
                /// 参照章节的`type`
                ///
                /// - Remark: Generated from `#/paths/v0/episodes/GET/query/type`.
                internal var _type: Operations.getEpisodes.Input.Query._typePayload?
                /// 分页参数
                ///
                /// - Remark: Generated from `#/paths/v0/episodes/GET/query/limit`.
                internal var limit: Swift.Int?
                /// 分页参数
                ///
                /// - Remark: Generated from `#/paths/v0/episodes/GET/query/offset`.
                internal var offset: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - subject_id: 条目 ID
                ///   - _type: 参照章节的`type`
                ///   - limit: 分页参数
                ///   - offset: 分页参数
                internal init(
                    subject_id: Components.Parameters.query_subject_id,
                    _type: Operations.getEpisodes.Input.Query._typePayload? = nil,
                    limit: Swift.Int? = nil,
                    offset: Swift.Int? = nil
                ) {
                    self.subject_id = subject_id
                    self._type = _type
                    self.limit = limit
                    self.offset = offset
                }
            }
            internal var query: Operations.getEpisodes.Input.Query
            /// - Remark: Generated from `#/paths/v0/episodes/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getEpisodes.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getEpisodes.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getEpisodes.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.getEpisodes.Input.Query,
                headers: Operations.getEpisodes.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/episodes/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/episodes/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.Paged_Episode)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.Paged_Episode {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getEpisodes.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getEpisodes.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/episodes/get(getEpisodes)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getEpisodes.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getEpisodes.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/episodes/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/episodes/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getEpisodes.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getEpisodes.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/episodes/get(getEpisodes)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getEpisodes.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getEpisodes.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/episodes/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/episodes/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getEpisodes.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getEpisodes.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/episodes/get(getEpisodes)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getEpisodes.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getEpisodes.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get Episode
    ///
    /// - Remark: HTTP `GET /v0/episodes/{episode_id}`.
    /// - Remark: Generated from `#/paths//v0/episodes/{episode_id}/get(getEpisodeById)`.
    internal enum getEpisodeById {
        internal static let id: Swift.String = "getEpisodeById"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/episodes/{episode_id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 章节 ID
                ///
                /// - Remark: Generated from `#/paths/v0/episodes/{episode_id}/GET/path/episode_id`.
                internal var episode_id: Components.Parameters.path_episode_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - episode_id: 章节 ID
                internal init(episode_id: Components.Parameters.path_episode_id) {
                    self.episode_id = episode_id
                }
            }
            internal var path: Operations.getEpisodeById.Input.Path
            /// - Remark: Generated from `#/paths/v0/episodes/{episode_id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getEpisodeById.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getEpisodeById.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getEpisodeById.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getEpisodeById.Input.Path,
                headers: Operations.getEpisodeById.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/episodes/{episode_id}/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/episodes/{episode_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.EpisodeDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.EpisodeDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getEpisodeById.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getEpisodeById.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/episodes/{episode_id}/get(getEpisodeById)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getEpisodeById.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getEpisodeById.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/episodes/{episode_id}/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/episodes/{episode_id}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getEpisodeById.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getEpisodeById.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/episodes/{episode_id}/get(getEpisodeById)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getEpisodeById.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getEpisodeById.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/episodes/{episode_id}/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/episodes/{episode_id}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getEpisodeById.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getEpisodeById.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/episodes/{episode_id}/get(getEpisodeById)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getEpisodeById.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getEpisodeById.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get Character Detail
    ///
    /// cache with 60s
    ///
    /// - Remark: HTTP `GET /v0/characters/{character_id}`.
    /// - Remark: Generated from `#/paths//v0/characters/{character_id}/get(getCharacterById)`.
    internal enum getCharacterById {
        internal static let id: Swift.String = "getCharacterById"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/characters/{character_id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 角色 ID
                ///
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/GET/path/character_id`.
                internal var character_id: Components.Parameters.path_character_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - character_id: 角色 ID
                internal init(character_id: Components.Parameters.path_character_id) {
                    self.character_id = character_id
                }
            }
            internal var path: Operations.getCharacterById.Input.Path
            /// - Remark: Generated from `#/paths/v0/characters/{character_id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getCharacterById.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getCharacterById.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getCharacterById.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getCharacterById.Input.Path,
                headers: Operations.getCharacterById.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/characters/{character_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.CharacterDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.CharacterDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getCharacterById.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getCharacterById.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/characters/{character_id}/get(getCharacterById)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getCharacterById.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getCharacterById.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/characters/{character_id}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getCharacterById.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getCharacterById.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/characters/{character_id}/get(getCharacterById)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getCharacterById.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getCharacterById.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/characters/{character_id}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getCharacterById.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getCharacterById.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/characters/{character_id}/get(getCharacterById)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getCharacterById.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getCharacterById.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get Character Image
    ///
    /// - Remark: HTTP `GET /v0/characters/{character_id}/image`.
    /// - Remark: Generated from `#/paths//v0/characters/{character_id}/image/get(getCharacterImageById)`.
    internal enum getCharacterImageById {
        internal static let id: Swift.String = "getCharacterImageById"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/characters/{character_id}/image/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 角色 ID
                ///
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/image/GET/path/character_id`.
                internal var character_id: Components.Parameters.path_character_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - character_id: 角色 ID
                internal init(character_id: Components.Parameters.path_character_id) {
                    self.character_id = character_id
                }
            }
            internal var path: Operations.getCharacterImageById.Input.Path
            /// - Remark: Generated from `#/paths/v0/characters/{character_id}/image/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// 枚举值 {small|grid|large|medium}
                ///
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/image/GET/query/type`.
                internal var _type: Swift.String
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - _type: 枚举值 {small|grid|large|medium}
                internal init(_type: Swift.String) {
                    self._type = _type
                }
            }
            internal var query: Operations.getCharacterImageById.Input.Query
            /// - Remark: Generated from `#/paths/v0/characters/{character_id}/image/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getCharacterImageById.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getCharacterImageById.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getCharacterImageById.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.getCharacterImageById.Input.Path,
                query: Operations.getCharacterImageById.Input.Query,
                headers: Operations.getCharacterImageById.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Found: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/image/GET/responses/302/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// 图片链接
                    /// 无图时返回默认图片 https://lain.bgm.tv/img/no_icon_subject.png
                    ///
                    /// - Remark: Generated from `#/paths/v0/characters/{character_id}/image/GET/responses/302/headers/Location`.
                    internal var Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Location: 图片链接
                    internal init(Location: Swift.String? = nil) {
                        self.Location = Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.getCharacterImageById.Output.Found.Headers
                /// Creates a new `Found`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                internal init(headers: Operations.getCharacterImageById.Output.Found.Headers = .init()) {
                    self.headers = headers
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/characters/{character_id}/image/get(getCharacterImageById)/responses/302`.
            ///
            /// HTTP response code: `302 found`.
            case found(Operations.getCharacterImageById.Output.Found)
            /// The associated value of the enum case if `self` is `.found`.
            ///
            /// - Throws: An error if `self` is not `.found`.
            /// - SeeAlso: `.found`.
            internal var found: Operations.getCharacterImageById.Output.Found {
                get throws {
                    switch self {
                    case let .found(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "found",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/image/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/characters/{character_id}/image/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getCharacterImageById.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getCharacterImageById.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/characters/{character_id}/image/get(getCharacterImageById)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getCharacterImageById.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getCharacterImageById.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/image/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/characters/{character_id}/image/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getCharacterImageById.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getCharacterImageById.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/characters/{character_id}/image/get(getCharacterImageById)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getCharacterImageById.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getCharacterImageById.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// get character related subjects
    ///
    /// - Remark: HTTP `GET /v0/characters/{character_id}/subjects`.
    /// - Remark: Generated from `#/paths//v0/characters/{character_id}/subjects/get(getRelatedSubjectsByCharacterId)`.
    internal enum getRelatedSubjectsByCharacterId {
        internal static let id: Swift.String = "getRelatedSubjectsByCharacterId"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/characters/{character_id}/subjects/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 角色 ID
                ///
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/subjects/GET/path/character_id`.
                internal var character_id: Components.Parameters.path_character_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - character_id: 角色 ID
                internal init(character_id: Components.Parameters.path_character_id) {
                    self.character_id = character_id
                }
            }
            internal var path: Operations.getRelatedSubjectsByCharacterId.Input.Path
            /// - Remark: Generated from `#/paths/v0/characters/{character_id}/subjects/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getRelatedSubjectsByCharacterId.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getRelatedSubjectsByCharacterId.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getRelatedSubjectsByCharacterId.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getRelatedSubjectsByCharacterId.Input.Path,
                headers: Operations.getRelatedSubjectsByCharacterId.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/subjects/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/characters/{character_id}/subjects/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.v0_RelatedSubject])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.v0_RelatedSubject] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getRelatedSubjectsByCharacterId.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getRelatedSubjectsByCharacterId.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/characters/{character_id}/subjects/get(getRelatedSubjectsByCharacterId)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getRelatedSubjectsByCharacterId.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getRelatedSubjectsByCharacterId.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/subjects/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/characters/{character_id}/subjects/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getRelatedSubjectsByCharacterId.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getRelatedSubjectsByCharacterId.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/characters/{character_id}/subjects/get(getRelatedSubjectsByCharacterId)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getRelatedSubjectsByCharacterId.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getRelatedSubjectsByCharacterId.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/subjects/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/characters/{character_id}/subjects/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getRelatedSubjectsByCharacterId.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getRelatedSubjectsByCharacterId.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/characters/{character_id}/subjects/get(getRelatedSubjectsByCharacterId)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getRelatedSubjectsByCharacterId.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getRelatedSubjectsByCharacterId.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// get character related persons
    ///
    /// - Remark: HTTP `GET /v0/characters/{character_id}/persons`.
    /// - Remark: Generated from `#/paths//v0/characters/{character_id}/persons/get(getRelatedPersonsByCharacterId)`.
    internal enum getRelatedPersonsByCharacterId {
        internal static let id: Swift.String = "getRelatedPersonsByCharacterId"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/characters/{character_id}/persons/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 角色 ID
                ///
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/persons/GET/path/character_id`.
                internal var character_id: Components.Parameters.path_character_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - character_id: 角色 ID
                internal init(character_id: Components.Parameters.path_character_id) {
                    self.character_id = character_id
                }
            }
            internal var path: Operations.getRelatedPersonsByCharacterId.Input.Path
            /// - Remark: Generated from `#/paths/v0/characters/{character_id}/persons/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getRelatedPersonsByCharacterId.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getRelatedPersonsByCharacterId.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getRelatedPersonsByCharacterId.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getRelatedPersonsByCharacterId.Input.Path,
                headers: Operations.getRelatedPersonsByCharacterId.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/persons/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/characters/{character_id}/persons/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.CharacterPerson])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.CharacterPerson] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getRelatedPersonsByCharacterId.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getRelatedPersonsByCharacterId.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/characters/{character_id}/persons/get(getRelatedPersonsByCharacterId)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getRelatedPersonsByCharacterId.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getRelatedPersonsByCharacterId.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/persons/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/characters/{character_id}/persons/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getRelatedPersonsByCharacterId.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getRelatedPersonsByCharacterId.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/characters/{character_id}/persons/get(getRelatedPersonsByCharacterId)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getRelatedPersonsByCharacterId.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getRelatedPersonsByCharacterId.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/persons/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/characters/{character_id}/persons/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getRelatedPersonsByCharacterId.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getRelatedPersonsByCharacterId.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/characters/{character_id}/persons/get(getRelatedPersonsByCharacterId)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getRelatedPersonsByCharacterId.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getRelatedPersonsByCharacterId.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Collect character for current user
    ///
    /// 为当前用户收藏角色
    ///
    /// - Remark: HTTP `POST /v0/characters/{character_id}/collect`.
    /// - Remark: Generated from `#/paths//v0/characters/{character_id}/collect/post(collectCharacterByCharacterIdAndUserId)`.
    internal enum collectCharacterByCharacterIdAndUserId {
        internal static let id: Swift.String = "collectCharacterByCharacterIdAndUserId"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/characters/{character_id}/collect/POST/path`.
            internal struct Path: Sendable, Hashable {
                /// 角色 ID
                ///
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/collect/POST/path/character_id`.
                internal var character_id: Components.Parameters.path_character_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - character_id: 角色 ID
                internal init(character_id: Components.Parameters.path_character_id) {
                    self.character_id = character_id
                }
            }
            internal var path: Operations.collectCharacterByCharacterIdAndUserId.Input.Path
            /// - Remark: Generated from `#/paths/v0/characters/{character_id}/collect/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.collectCharacterByCharacterIdAndUserId.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.collectCharacterByCharacterIdAndUserId.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.collectCharacterByCharacterIdAndUserId.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.collectCharacterByCharacterIdAndUserId.Input.Path,
                headers: Operations.collectCharacterByCharacterIdAndUserId.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/characters/{character_id}/collect/post(collectCharacterByCharacterIdAndUserId)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.collectCharacterByCharacterIdAndUserId.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.collectCharacterByCharacterIdAndUserId.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/collect/POST/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/characters/{character_id}/collect/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.collectCharacterByCharacterIdAndUserId.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.collectCharacterByCharacterIdAndUserId.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// character ID not valid
            ///
            /// - Remark: Generated from `#/paths//v0/characters/{character_id}/collect/post(collectCharacterByCharacterIdAndUserId)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.collectCharacterByCharacterIdAndUserId.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.collectCharacterByCharacterIdAndUserId.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/collect/POST/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/characters/{character_id}/collect/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.collectCharacterByCharacterIdAndUserId.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.collectCharacterByCharacterIdAndUserId.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// not authorized
            ///
            /// - Remark: Generated from `#/paths//v0/characters/{character_id}/collect/post(collectCharacterByCharacterIdAndUserId)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.collectCharacterByCharacterIdAndUserId.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.collectCharacterByCharacterIdAndUserId.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/collect/POST/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/characters/{character_id}/collect/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.collectCharacterByCharacterIdAndUserId.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.collectCharacterByCharacterIdAndUserId.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// 角色不存在
            ///
            /// - Remark: Generated from `#/paths//v0/characters/{character_id}/collect/post(collectCharacterByCharacterIdAndUserId)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.collectCharacterByCharacterIdAndUserId.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.collectCharacterByCharacterIdAndUserId.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Uncollect character for current user
    ///
    /// 为当前用户取消收藏角色
    ///
    /// - Remark: HTTP `DELETE /v0/characters/{character_id}/collect`.
    /// - Remark: Generated from `#/paths//v0/characters/{character_id}/collect/delete(uncollectCharacterByCharacterIdAndUserId)`.
    internal enum uncollectCharacterByCharacterIdAndUserId {
        internal static let id: Swift.String = "uncollectCharacterByCharacterIdAndUserId"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/characters/{character_id}/collect/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                /// 角色 ID
                ///
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/collect/DELETE/path/character_id`.
                internal var character_id: Components.Parameters.path_character_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - character_id: 角色 ID
                internal init(character_id: Components.Parameters.path_character_id) {
                    self.character_id = character_id
                }
            }
            internal var path: Operations.uncollectCharacterByCharacterIdAndUserId.Input.Path
            /// - Remark: Generated from `#/paths/v0/characters/{character_id}/collect/DELETE/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.uncollectCharacterByCharacterIdAndUserId.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.uncollectCharacterByCharacterIdAndUserId.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.uncollectCharacterByCharacterIdAndUserId.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.uncollectCharacterByCharacterIdAndUserId.Input.Path,
                headers: Operations.uncollectCharacterByCharacterIdAndUserId.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/characters/{character_id}/collect/delete(uncollectCharacterByCharacterIdAndUserId)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.uncollectCharacterByCharacterIdAndUserId.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.uncollectCharacterByCharacterIdAndUserId.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/collect/DELETE/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/characters/{character_id}/collect/DELETE/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.uncollectCharacterByCharacterIdAndUserId.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.uncollectCharacterByCharacterIdAndUserId.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// character ID not valid
            ///
            /// - Remark: Generated from `#/paths//v0/characters/{character_id}/collect/delete(uncollectCharacterByCharacterIdAndUserId)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.uncollectCharacterByCharacterIdAndUserId.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.uncollectCharacterByCharacterIdAndUserId.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/collect/DELETE/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/characters/{character_id}/collect/DELETE/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.uncollectCharacterByCharacterIdAndUserId.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.uncollectCharacterByCharacterIdAndUserId.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// not authorized
            ///
            /// - Remark: Generated from `#/paths//v0/characters/{character_id}/collect/delete(uncollectCharacterByCharacterIdAndUserId)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.uncollectCharacterByCharacterIdAndUserId.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.uncollectCharacterByCharacterIdAndUserId.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/characters/{character_id}/collect/DELETE/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/characters/{character_id}/collect/DELETE/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.uncollectCharacterByCharacterIdAndUserId.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.uncollectCharacterByCharacterIdAndUserId.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// 角色不存在
            ///
            /// - Remark: Generated from `#/paths//v0/characters/{character_id}/collect/delete(uncollectCharacterByCharacterIdAndUserId)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.uncollectCharacterByCharacterIdAndUserId.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.uncollectCharacterByCharacterIdAndUserId.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get Person
    ///
    /// cache with 60s
    ///
    /// - Remark: HTTP `GET /v0/persons/{person_id}`.
    /// - Remark: Generated from `#/paths//v0/persons/{person_id}/get(getPersonById)`.
    internal enum getPersonById {
        internal static let id: Swift.String = "getPersonById"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/persons/{person_id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 人物 ID
                ///
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/GET/path/person_id`.
                internal var person_id: Components.Parameters.path_person_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - person_id: 人物 ID
                internal init(person_id: Components.Parameters.path_person_id) {
                    self.person_id = person_id
                }
            }
            internal var path: Operations.getPersonById.Input.Path
            /// - Remark: Generated from `#/paths/v0/persons/{person_id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getPersonById.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getPersonById.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getPersonById.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getPersonById.Input.Path,
                headers: Operations.getPersonById.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/persons/{person_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.PersonDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.PersonDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getPersonById.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getPersonById.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/persons/{person_id}/get(getPersonById)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getPersonById.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getPersonById.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/persons/{person_id}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getPersonById.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getPersonById.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/persons/{person_id}/get(getPersonById)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getPersonById.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getPersonById.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/persons/{person_id}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getPersonById.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getPersonById.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/persons/{person_id}/get(getPersonById)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getPersonById.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getPersonById.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get Person Image
    ///
    /// - Remark: HTTP `GET /v0/persons/{person_id}/image`.
    /// - Remark: Generated from `#/paths//v0/persons/{person_id}/image/get(getPersonImageById)`.
    internal enum getPersonImageById {
        internal static let id: Swift.String = "getPersonImageById"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/persons/{person_id}/image/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 人物 ID
                ///
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/image/GET/path/person_id`.
                internal var person_id: Components.Parameters.path_person_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - person_id: 人物 ID
                internal init(person_id: Components.Parameters.path_person_id) {
                    self.person_id = person_id
                }
            }
            internal var path: Operations.getPersonImageById.Input.Path
            /// - Remark: Generated from `#/paths/v0/persons/{person_id}/image/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// 枚举值 {small|grid|large|medium}
                ///
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/image/GET/query/type`.
                internal var _type: Swift.String
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - _type: 枚举值 {small|grid|large|medium}
                internal init(_type: Swift.String) {
                    self._type = _type
                }
            }
            internal var query: Operations.getPersonImageById.Input.Query
            /// - Remark: Generated from `#/paths/v0/persons/{person_id}/image/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getPersonImageById.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getPersonImageById.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getPersonImageById.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.getPersonImageById.Input.Path,
                query: Operations.getPersonImageById.Input.Query,
                headers: Operations.getPersonImageById.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Found: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/image/GET/responses/302/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// 图片链接
                    /// 无图时返回默认图片 https://lain.bgm.tv/img/no_icon_subject.png
                    ///
                    /// - Remark: Generated from `#/paths/v0/persons/{person_id}/image/GET/responses/302/headers/Location`.
                    internal var Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Location: 图片链接
                    internal init(Location: Swift.String? = nil) {
                        self.Location = Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.getPersonImageById.Output.Found.Headers
                /// Creates a new `Found`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                internal init(headers: Operations.getPersonImageById.Output.Found.Headers = .init()) {
                    self.headers = headers
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/persons/{person_id}/image/get(getPersonImageById)/responses/302`.
            ///
            /// HTTP response code: `302 found`.
            case found(Operations.getPersonImageById.Output.Found)
            /// The associated value of the enum case if `self` is `.found`.
            ///
            /// - Throws: An error if `self` is not `.found`.
            /// - SeeAlso: `.found`.
            internal var found: Operations.getPersonImageById.Output.Found {
                get throws {
                    switch self {
                    case let .found(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "found",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/image/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/persons/{person_id}/image/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getPersonImageById.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getPersonImageById.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/persons/{person_id}/image/get(getPersonImageById)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getPersonImageById.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getPersonImageById.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/image/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/persons/{person_id}/image/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getPersonImageById.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getPersonImageById.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/persons/{person_id}/image/get(getPersonImageById)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getPersonImageById.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getPersonImageById.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// get person related subjects
    ///
    /// - Remark: HTTP `GET /v0/persons/{person_id}/subjects`.
    /// - Remark: Generated from `#/paths//v0/persons/{person_id}/subjects/get(getRelatedSubjectsByPersonId)`.
    internal enum getRelatedSubjectsByPersonId {
        internal static let id: Swift.String = "getRelatedSubjectsByPersonId"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/persons/{person_id}/subjects/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 人物 ID
                ///
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/subjects/GET/path/person_id`.
                internal var person_id: Components.Parameters.path_person_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - person_id: 人物 ID
                internal init(person_id: Components.Parameters.path_person_id) {
                    self.person_id = person_id
                }
            }
            internal var path: Operations.getRelatedSubjectsByPersonId.Input.Path
            /// - Remark: Generated from `#/paths/v0/persons/{person_id}/subjects/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getRelatedSubjectsByPersonId.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getRelatedSubjectsByPersonId.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getRelatedSubjectsByPersonId.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getRelatedSubjectsByPersonId.Input.Path,
                headers: Operations.getRelatedSubjectsByPersonId.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/subjects/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/persons/{person_id}/subjects/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.v0_RelatedSubject])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.v0_RelatedSubject] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getRelatedSubjectsByPersonId.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getRelatedSubjectsByPersonId.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/persons/{person_id}/subjects/get(getRelatedSubjectsByPersonId)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getRelatedSubjectsByPersonId.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getRelatedSubjectsByPersonId.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/subjects/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/persons/{person_id}/subjects/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getRelatedSubjectsByPersonId.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getRelatedSubjectsByPersonId.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/persons/{person_id}/subjects/get(getRelatedSubjectsByPersonId)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getRelatedSubjectsByPersonId.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getRelatedSubjectsByPersonId.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/subjects/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/persons/{person_id}/subjects/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getRelatedSubjectsByPersonId.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getRelatedSubjectsByPersonId.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/persons/{person_id}/subjects/get(getRelatedSubjectsByPersonId)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getRelatedSubjectsByPersonId.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getRelatedSubjectsByPersonId.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// get person related characters
    ///
    /// - Remark: HTTP `GET /v0/persons/{person_id}/characters`.
    /// - Remark: Generated from `#/paths//v0/persons/{person_id}/characters/get(getRelatedCharactersByPersonId)`.
    internal enum getRelatedCharactersByPersonId {
        internal static let id: Swift.String = "getRelatedCharactersByPersonId"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/persons/{person_id}/characters/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 人物 ID
                ///
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/characters/GET/path/person_id`.
                internal var person_id: Components.Parameters.path_person_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - person_id: 人物 ID
                internal init(person_id: Components.Parameters.path_person_id) {
                    self.person_id = person_id
                }
            }
            internal var path: Operations.getRelatedCharactersByPersonId.Input.Path
            /// - Remark: Generated from `#/paths/v0/persons/{person_id}/characters/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getRelatedCharactersByPersonId.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getRelatedCharactersByPersonId.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getRelatedCharactersByPersonId.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getRelatedCharactersByPersonId.Input.Path,
                headers: Operations.getRelatedCharactersByPersonId.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/characters/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/persons/{person_id}/characters/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.PersonCharacter])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.PersonCharacter] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getRelatedCharactersByPersonId.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getRelatedCharactersByPersonId.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/persons/{person_id}/characters/get(getRelatedCharactersByPersonId)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getRelatedCharactersByPersonId.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getRelatedCharactersByPersonId.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/characters/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/persons/{person_id}/characters/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getRelatedCharactersByPersonId.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getRelatedCharactersByPersonId.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/persons/{person_id}/characters/get(getRelatedCharactersByPersonId)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getRelatedCharactersByPersonId.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getRelatedCharactersByPersonId.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/characters/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/persons/{person_id}/characters/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getRelatedCharactersByPersonId.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getRelatedCharactersByPersonId.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/persons/{person_id}/characters/get(getRelatedCharactersByPersonId)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getRelatedCharactersByPersonId.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getRelatedCharactersByPersonId.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Collect person for current user
    ///
    /// 为当前用户收藏人物
    ///
    /// - Remark: HTTP `POST /v0/persons/{person_id}/collect`.
    /// - Remark: Generated from `#/paths//v0/persons/{person_id}/collect/post(collectPersonByPersonIdAndUserId)`.
    internal enum collectPersonByPersonIdAndUserId {
        internal static let id: Swift.String = "collectPersonByPersonIdAndUserId"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/persons/{person_id}/collect/POST/path`.
            internal struct Path: Sendable, Hashable {
                /// 人物 ID
                ///
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/collect/POST/path/person_id`.
                internal var person_id: Components.Parameters.path_person_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - person_id: 人物 ID
                internal init(person_id: Components.Parameters.path_person_id) {
                    self.person_id = person_id
                }
            }
            internal var path: Operations.collectPersonByPersonIdAndUserId.Input.Path
            /// - Remark: Generated from `#/paths/v0/persons/{person_id}/collect/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.collectPersonByPersonIdAndUserId.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.collectPersonByPersonIdAndUserId.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.collectPersonByPersonIdAndUserId.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.collectPersonByPersonIdAndUserId.Input.Path,
                headers: Operations.collectPersonByPersonIdAndUserId.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/persons/{person_id}/collect/post(collectPersonByPersonIdAndUserId)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.collectPersonByPersonIdAndUserId.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.collectPersonByPersonIdAndUserId.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/collect/POST/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/persons/{person_id}/collect/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.collectPersonByPersonIdAndUserId.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.collectPersonByPersonIdAndUserId.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// person ID not valid
            ///
            /// - Remark: Generated from `#/paths//v0/persons/{person_id}/collect/post(collectPersonByPersonIdAndUserId)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.collectPersonByPersonIdAndUserId.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.collectPersonByPersonIdAndUserId.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/collect/POST/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/persons/{person_id}/collect/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.collectPersonByPersonIdAndUserId.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.collectPersonByPersonIdAndUserId.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// not authorized
            ///
            /// - Remark: Generated from `#/paths//v0/persons/{person_id}/collect/post(collectPersonByPersonIdAndUserId)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.collectPersonByPersonIdAndUserId.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.collectPersonByPersonIdAndUserId.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/collect/POST/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/persons/{person_id}/collect/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.collectPersonByPersonIdAndUserId.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.collectPersonByPersonIdAndUserId.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// 人物不存在
            ///
            /// - Remark: Generated from `#/paths//v0/persons/{person_id}/collect/post(collectPersonByPersonIdAndUserId)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.collectPersonByPersonIdAndUserId.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.collectPersonByPersonIdAndUserId.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Uncollect person for current user
    ///
    /// 为当前用户取消收藏人物
    ///
    /// - Remark: HTTP `DELETE /v0/persons/{person_id}/collect`.
    /// - Remark: Generated from `#/paths//v0/persons/{person_id}/collect/delete(uncollectPersonByPersonIdAndUserId)`.
    internal enum uncollectPersonByPersonIdAndUserId {
        internal static let id: Swift.String = "uncollectPersonByPersonIdAndUserId"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/persons/{person_id}/collect/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                /// 人物 ID
                ///
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/collect/DELETE/path/person_id`.
                internal var person_id: Components.Parameters.path_person_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - person_id: 人物 ID
                internal init(person_id: Components.Parameters.path_person_id) {
                    self.person_id = person_id
                }
            }
            internal var path: Operations.uncollectPersonByPersonIdAndUserId.Input.Path
            /// - Remark: Generated from `#/paths/v0/persons/{person_id}/collect/DELETE/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.uncollectPersonByPersonIdAndUserId.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.uncollectPersonByPersonIdAndUserId.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.uncollectPersonByPersonIdAndUserId.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.uncollectPersonByPersonIdAndUserId.Input.Path,
                headers: Operations.uncollectPersonByPersonIdAndUserId.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/persons/{person_id}/collect/delete(uncollectPersonByPersonIdAndUserId)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.uncollectPersonByPersonIdAndUserId.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.uncollectPersonByPersonIdAndUserId.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/collect/DELETE/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/persons/{person_id}/collect/DELETE/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.uncollectPersonByPersonIdAndUserId.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.uncollectPersonByPersonIdAndUserId.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// person ID not valid
            ///
            /// - Remark: Generated from `#/paths//v0/persons/{person_id}/collect/delete(uncollectPersonByPersonIdAndUserId)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.uncollectPersonByPersonIdAndUserId.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.uncollectPersonByPersonIdAndUserId.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/collect/DELETE/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/persons/{person_id}/collect/DELETE/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.uncollectPersonByPersonIdAndUserId.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.uncollectPersonByPersonIdAndUserId.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// not authorized
            ///
            /// - Remark: Generated from `#/paths//v0/persons/{person_id}/collect/delete(uncollectPersonByPersonIdAndUserId)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.uncollectPersonByPersonIdAndUserId.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.uncollectPersonByPersonIdAndUserId.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/persons/{person_id}/collect/DELETE/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/persons/{person_id}/collect/DELETE/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.uncollectPersonByPersonIdAndUserId.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.uncollectPersonByPersonIdAndUserId.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// 人物不存在
            ///
            /// - Remark: Generated from `#/paths//v0/persons/{person_id}/collect/delete(uncollectPersonByPersonIdAndUserId)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.uncollectPersonByPersonIdAndUserId.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.uncollectPersonByPersonIdAndUserId.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get User by name
    ///
    /// 获取用户信息
    ///
    /// - Remark: HTTP `GET /v0/users/{username}`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/get(getUserByName)`.
    internal enum getUserByName {
        internal static let id: Swift.String = "getUserByName"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/users/{username}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 设置了用户名之后无法使用 UID。
                ///
                /// - Remark: Generated from `#/paths/v0/users/{username}/GET/path/username`.
                internal var username: Components.Parameters.path_username
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - username: 设置了用户名之后无法使用 UID。
                internal init(username: Components.Parameters.path_username) {
                    self.username = username
                }
            }
            internal var path: Operations.getUserByName.Input.Path
            /// - Remark: Generated from `#/paths/v0/users/{username}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserByName.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserByName.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getUserByName.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getUserByName.Input.Path,
                headers: Operations.getUserByName.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/{username}/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/{username}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.User)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.User {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserByName.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserByName.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/users/{username}/get(getUserByName)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getUserByName.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getUserByName.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/{username}/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/{username}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserByName.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserByName.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// username 太长
            ///
            /// - Remark: Generated from `#/paths//v0/users/{username}/get(getUserByName)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getUserByName.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getUserByName.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/{username}/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/{username}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserByName.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserByName.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// 对应用户不存在
            ///
            /// - Remark: Generated from `#/paths//v0/users/{username}/get(getUserByName)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getUserByName.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getUserByName.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get User Avatar by name
    ///
    /// 获取用户头像，302 重定向至头像地址，设置了 username 之后无法使用 UID 查询。
    ///
    /// - Remark: HTTP `GET /v0/users/{username}/avatar`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/avatar/get(getUserAvatarByName)`.
    internal enum getUserAvatarByName {
        internal static let id: Swift.String = "getUserAvatarByName"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/users/{username}/avatar/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 设置了用户名之后无法使用 UID。
                ///
                /// - Remark: Generated from `#/paths/v0/users/{username}/avatar/GET/path/username`.
                internal var username: Components.Parameters.path_username
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - username: 设置了用户名之后无法使用 UID。
                internal init(username: Components.Parameters.path_username) {
                    self.username = username
                }
            }
            internal var path: Operations.getUserAvatarByName.Input.Path
            /// - Remark: Generated from `#/paths/v0/users/{username}/avatar/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// 枚举值 {small|large|medium}
                ///
                /// - Remark: Generated from `#/paths/v0/users/{username}/avatar/GET/query/type`.
                internal var _type: Swift.String
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - _type: 枚举值 {small|large|medium}
                internal init(_type: Swift.String) {
                    self._type = _type
                }
            }
            internal var query: Operations.getUserAvatarByName.Input.Query
            /// - Remark: Generated from `#/paths/v0/users/{username}/avatar/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserAvatarByName.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserAvatarByName.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getUserAvatarByName.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.getUserAvatarByName.Input.Path,
                query: Operations.getUserAvatarByName.Input.Query,
                headers: Operations.getUserAvatarByName.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Found: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/{username}/avatar/GET/responses/302/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// 用户头像链接
                    /// 无头像时返回默认头像 https://lain.bgm.tv/pic/user/m/icon.jpg
                    ///
                    /// - Remark: Generated from `#/paths/v0/users/{username}/avatar/GET/responses/302/headers/Location`.
                    internal var Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Location: 用户头像链接
                    internal init(Location: Swift.String? = nil) {
                        self.Location = Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.getUserAvatarByName.Output.Found.Headers
                /// Creates a new `Found`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                internal init(headers: Operations.getUserAvatarByName.Output.Found.Headers = .init()) {
                    self.headers = headers
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/users/{username}/avatar/get(getUserAvatarByName)/responses/302`.
            ///
            /// HTTP response code: `302 found`.
            case found(Operations.getUserAvatarByName.Output.Found)
            /// The associated value of the enum case if `self` is `.found`.
            ///
            /// - Throws: An error if `self` is not `.found`.
            /// - SeeAlso: `.found`.
            internal var found: Operations.getUserAvatarByName.Output.Found {
                get throws {
                    switch self {
                    case let .found(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "found",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/{username}/avatar/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/{username}/avatar/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserAvatarByName.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserAvatarByName.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// username 太长
            ///
            /// - Remark: Generated from `#/paths//v0/users/{username}/avatar/get(getUserAvatarByName)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getUserAvatarByName.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getUserAvatarByName.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/{username}/avatar/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/{username}/avatar/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserAvatarByName.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserAvatarByName.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// 对应用户不存在
            ///
            /// - Remark: Generated from `#/paths//v0/users/{username}/avatar/get(getUserAvatarByName)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getUserAvatarByName.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getUserAvatarByName.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get User
    ///
    /// 返回当前 Access Token 对应的用户信息
    ///
    /// - Remark: HTTP `GET /v0/me`.
    /// - Remark: Generated from `#/paths//v0/me/get(getMyself)`.
    internal enum getMyself {
        internal static let id: Swift.String = "getMyself"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/me/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getMyself.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getMyself.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getMyself.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getMyself.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/me/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/me/GET/responses/200/content/json`.
                    internal struct jsonPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v0/me/GET/responses/200/content/json/value1`.
                        internal var value1: Components.Schemas.User
                        /// - Remark: Generated from `#/paths/v0/me/GET/responses/200/content/json/value2`.
                        internal struct Value2Payload: Codable, Hashable, Sendable {
                            /// 用户设置的时区偏移，以小时为单位。比如 GMT+8（shanghai/beijing）为 8
                            ///
                            /// - Remark: Generated from `#/paths/v0/me/GET/responses/200/content/json/value2/time_offset`.
                            internal var time_offset: Swift.Int?
                            /// Creates a new `Value2Payload`.
                            ///
                            /// - Parameters:
                            ///   - time_offset: 用户设置的时区偏移，以小时为单位。比如 GMT+8（shanghai/beijing）为 8
                            internal init(time_offset: Swift.Int? = nil) {
                                self.time_offset = time_offset
                            }
                            internal enum CodingKeys: String, CodingKey {
                                case time_offset
                            }
                        }
                        /// - Remark: Generated from `#/paths/v0/me/GET/responses/200/content/json/value2`.
                        internal var value2: Operations.getMyself.Output.Ok.Body.jsonPayload.Value2Payload
                        /// Creates a new `jsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - value1:
                        ///   - value2:
                        internal init(
                            value1: Components.Schemas.User,
                            value2: Operations.getMyself.Output.Ok.Body.jsonPayload.Value2Payload
                        ) {
                            self.value1 = value1
                            self.value2 = value2
                        }
                        internal init(from decoder: any Decoder) throws {
                            value1 = try .init(from: decoder)
                            value2 = try .init(from: decoder)
                        }
                        internal func encode(to encoder: any Encoder) throws {
                            try value1.encode(to: encoder)
                            try value2.encode(to: encoder)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v0/me/GET/responses/200/content/application\/json`.
                    case json(Operations.getMyself.Output.Ok.Body.jsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Operations.getMyself.Output.Ok.Body.jsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getMyself.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getMyself.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/me/get(getMyself)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getMyself.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getMyself.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/me/GET/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/me/GET/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getMyself.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getMyself.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// unauthorized
            ///
            /// - Remark: Generated from `#/paths//v0/me/get(getMyself)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.getMyself.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.getMyself.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// 获取用户收藏
    ///
    /// 获取对应用户的收藏，查看私有收藏需要access token。
    ///
    /// - Remark: HTTP `GET /v0/users/{username}/collections`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/collections/get(getUserCollectionsByUsername)`.
    internal enum getUserCollectionsByUsername {
        internal static let id: Swift.String = "getUserCollectionsByUsername"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/users/{username}/collections/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 设置了用户名之后无法使用 UID。
                ///
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/GET/path/username`.
                internal var username: Components.Parameters.path_username
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - username: 设置了用户名之后无法使用 UID。
                internal init(username: Components.Parameters.path_username) {
                    self.username = username
                }
            }
            internal var path: Operations.getUserCollectionsByUsername.Input.Path
            /// - Remark: Generated from `#/paths/v0/users/{username}/collections/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// 条目类型，默认为全部
                ///
                /// 具体含义见 [SubjectType](#model-SubjectType)
                ///
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/GET/query/subject_type`.
                internal var subject_type: Components.Schemas.SubjectType?
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/GET/query/type`.
                internal struct _typePayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v0/users/{username}/collections/GET/query/type/value1`.
                    internal var value1: Components.Schemas.SubjectCollectionType
                    /// Creates a new `_typePayload`.
                    ///
                    /// - Parameters:
                    ///   - value1:
                    internal init(value1: Components.Schemas.SubjectCollectionType) {
                        self.value1 = value1
                    }
                    internal init(from decoder: any Decoder) throws {
                        value1 = try decoder.decodeFromSingleValueContainer()
                    }
                    internal func encode(to encoder: any Encoder) throws {
                        try encoder.encodeToSingleValueContainer(value1)
                    }
                }
                /// 收藏类型，默认为全部
                ///
                /// 具体含义见 [CollectionType](#model-CollectionType)
                ///
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/GET/query/type`.
                internal var _type: Operations.getUserCollectionsByUsername.Input.Query._typePayload?
                /// 分页参数
                ///
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/GET/query/limit`.
                internal var limit: Components.Parameters.default_query_limit?
                /// 分页参数
                ///
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/GET/query/offset`.
                internal var offset: Components.Parameters.default_query_offset?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - subject_type: 条目类型，默认为全部
                ///   - _type: 收藏类型，默认为全部
                ///   - limit: 分页参数
                ///   - offset: 分页参数
                internal init(
                    subject_type: Components.Schemas.SubjectType? = nil,
                    _type: Operations.getUserCollectionsByUsername.Input.Query._typePayload? = nil,
                    limit: Components.Parameters.default_query_limit? = nil,
                    offset: Components.Parameters.default_query_offset? = nil
                ) {
                    self.subject_type = subject_type
                    self._type = _type
                    self.limit = limit
                    self.offset = offset
                }
            }
            internal var query: Operations.getUserCollectionsByUsername.Input.Query
            /// - Remark: Generated from `#/paths/v0/users/{username}/collections/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserCollectionsByUsername.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserCollectionsByUsername.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getUserCollectionsByUsername.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.getUserCollectionsByUsername.Input.Path,
                query: Operations.getUserCollectionsByUsername.Input.Query = .init(),
                headers: Operations.getUserCollectionsByUsername.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/{username}/collections/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.Paged_UserCollection)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.Paged_UserCollection {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserCollectionsByUsername.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserCollectionsByUsername.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/users/{username}/collections/get(getUserCollectionsByUsername)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getUserCollectionsByUsername.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getUserCollectionsByUsername.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/{username}/collections/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserCollectionsByUsername.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserCollectionsByUsername.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/users/{username}/collections/get(getUserCollectionsByUsername)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getUserCollectionsByUsername.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getUserCollectionsByUsername.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/{username}/collections/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserCollectionsByUsername.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserCollectionsByUsername.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// 用户不存在
            ///
            /// - Remark: Generated from `#/paths//v0/users/{username}/collections/get(getUserCollectionsByUsername)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getUserCollectionsByUsername.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getUserCollectionsByUsername.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// 获取用户单个条目收藏
    ///
    /// 获取对应用户的收藏，查看私有收藏需要 access token
    ///
    /// - Remark: HTTP `GET /v0/users/{username}/collections/{subject_id}`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/collections/{subject_id}/get(getUserCollection)`.
    internal enum getUserCollection {
        internal static let id: Swift.String = "getUserCollection"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/users/{username}/collections/{subject_id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 设置了用户名之后无法使用 UID。
                ///
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/{subject_id}/GET/path/username`.
                internal var username: Components.Parameters.path_username
                /// 条目 ID
                ///
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/{subject_id}/GET/path/subject_id`.
                internal var subject_id: Components.Parameters.path_subject_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - username: 设置了用户名之后无法使用 UID。
                ///   - subject_id: 条目 ID
                internal init(
                    username: Components.Parameters.path_username,
                    subject_id: Components.Parameters.path_subject_id
                ) {
                    self.username = username
                    self.subject_id = subject_id
                }
            }
            internal var path: Operations.getUserCollection.Input.Path
            /// - Remark: Generated from `#/paths/v0/users/{username}/collections/{subject_id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserCollection.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserCollection.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getUserCollection.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getUserCollection.Input.Path,
                headers: Operations.getUserCollection.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/{subject_id}/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/{username}/collections/{subject_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.UserSubjectCollection)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.UserSubjectCollection {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserCollection.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserCollection.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/users/{username}/collections/{subject_id}/get(getUserCollection)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getUserCollection.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getUserCollection.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/{subject_id}/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/{username}/collections/{subject_id}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserCollection.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserCollection.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/users/{username}/collections/{subject_id}/get(getUserCollection)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getUserCollection.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getUserCollection.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/{subject_id}/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/{username}/collections/{subject_id}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserCollection.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserCollection.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// 用户不存在或者条目未收藏，或者条目为私有收藏
            ///
            /// - Remark: Generated from `#/paths//v0/users/{username}/collections/{subject_id}/get(getUserCollection)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getUserCollection.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getUserCollection.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// 新增或修改用户单个条目收藏
    ///
    /// 修改条目收藏状态, 如果不存在则创建，如果存在则修改
    ///
    /// 由于直接修改剧集条目的完成度可能会引起意料之外效果，只能用于修改书籍类条目的完成度。
    ///
    /// 方法的所有请求体字段均可选
    ///
    ///
    /// - Remark: HTTP `POST /v0/users/-/collections/{subject_id}`.
    /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/post(postUserCollection)`.
    internal enum postUserCollection {
        internal static let id: Swift.String = "postUserCollection"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/POST/path`.
            internal struct Path: Sendable, Hashable {
                /// 条目 ID
                ///
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/POST/path/subject_id`.
                internal var subject_id: Components.Parameters.path_subject_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - subject_id: 条目 ID
                internal init(subject_id: Components.Parameters.path_subject_id) {
                    self.subject_id = subject_id
                }
            }
            internal var path: Operations.postUserCollection.Input.Path
            /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.postUserCollection.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.postUserCollection.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.postUserCollection.Input.Headers
            /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/POST/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.UserSubjectCollectionModifyPayload)
            }
            internal var body: Operations.postUserCollection.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.postUserCollection.Input.Path,
                headers: Operations.postUserCollection.Input.Headers = .init(),
                body: Operations.postUserCollection.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/post(postUserCollection)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.postUserCollection.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.postUserCollection.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/POST/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.postUserCollection.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.postUserCollection.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/post(postUserCollection)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.postUserCollection.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.postUserCollection.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/POST/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.postUserCollection.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.postUserCollection.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/post(postUserCollection)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.postUserCollection.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.postUserCollection.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/POST/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.postUserCollection.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.postUserCollection.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// 用户不存在
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/post(postUserCollection)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.postUserCollection.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.postUserCollection.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// 修改用户单个收藏
    ///
    /// 修改条目收藏状态
    ///
    /// 由于直接修改剧集条目的完成度可能会引起意料之外效果，只能用于修改书籍类条目的完成度。
    ///
    /// PATCH 方法的所有请求体字段均可选
    ///
    ///
    /// - Remark: HTTP `PATCH /v0/users/-/collections/{subject_id}`.
    /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/patch(patchUserCollection)`.
    internal enum patchUserCollection {
        internal static let id: Swift.String = "patchUserCollection"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/PATCH/path`.
            internal struct Path: Sendable, Hashable {
                /// 条目 ID
                ///
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/PATCH/path/subject_id`.
                internal var subject_id: Components.Parameters.path_subject_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - subject_id: 条目 ID
                internal init(subject_id: Components.Parameters.path_subject_id) {
                    self.subject_id = subject_id
                }
            }
            internal var path: Operations.patchUserCollection.Input.Path
            /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/PATCH/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.patchUserCollection.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.patchUserCollection.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.patchUserCollection.Input.Headers
            /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/PATCH/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/PATCH/requestBody/content/application\/json`.
                case json(Components.Schemas.UserSubjectCollectionModifyPayload)
            }
            internal var body: Operations.patchUserCollection.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.patchUserCollection.Input.Path,
                headers: Operations.patchUserCollection.Input.Headers = .init(),
                body: Operations.patchUserCollection.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/patch(patchUserCollection)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.patchUserCollection.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.patchUserCollection.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/PATCH/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/PATCH/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.patchUserCollection.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.patchUserCollection.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/patch(patchUserCollection)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.patchUserCollection.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.patchUserCollection.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/PATCH/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/PATCH/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.patchUserCollection.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.patchUserCollection.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/patch(patchUserCollection)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.patchUserCollection.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.patchUserCollection.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/PATCH/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/PATCH/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.patchUserCollection.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.patchUserCollection.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// 用户不存在或者条目未收藏
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/patch(patchUserCollection)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.patchUserCollection.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.patchUserCollection.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// 章节收藏信息
    ///
    /// - Remark: HTTP `GET /v0/users/-/collections/{subject_id}/episodes`.
    /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/episodes/get(getUserSubjectEpisodeCollection)`.
    internal enum getUserSubjectEpisodeCollection {
        internal static let id: Swift.String = "getUserSubjectEpisodeCollection"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 条目 ID
                ///
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/GET/path/subject_id`.
                internal var subject_id: Components.Parameters.path_subject_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - subject_id: 条目 ID
                internal init(subject_id: Components.Parameters.path_subject_id) {
                    self.subject_id = subject_id
                }
            }
            internal var path: Operations.getUserSubjectEpisodeCollection.Input.Path
            /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// 分页参数
                ///
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/GET/query/offset`.
                internal var offset: Components.Parameters.default_query_offset?
                /// 分页参数
                ///
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/GET/query/limit`.
                internal var limit: Swift.Int?
                /// 章节类型，不传则不按照章节进行筛选
                ///
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/GET/query/episode_type`.
                internal var episode_type: Components.Schemas.EpType?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - offset: 分页参数
                ///   - limit: 分页参数
                ///   - episode_type: 章节类型，不传则不按照章节进行筛选
                internal init(
                    offset: Components.Parameters.default_query_offset? = nil,
                    limit: Swift.Int? = nil,
                    episode_type: Components.Schemas.EpType? = nil
                ) {
                    self.offset = offset
                    self.limit = limit
                    self.episode_type = episode_type
                }
            }
            internal var query: Operations.getUserSubjectEpisodeCollection.Input.Query
            /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserSubjectEpisodeCollection.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserSubjectEpisodeCollection.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getUserSubjectEpisodeCollection.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.getUserSubjectEpisodeCollection.Input.Path,
                query: Operations.getUserSubjectEpisodeCollection.Input.Query = .init(),
                headers: Operations.getUserSubjectEpisodeCollection.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/GET/responses/200/content/json`.
                    internal struct jsonPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/GET/responses/200/content/json/value1`.
                        internal var value1: Components.Schemas.Page
                        /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/GET/responses/200/content/json/value2`.
                        internal struct Value2Payload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/GET/responses/200/content/json/value2/data`.
                            internal var data: [Components.Schemas.UserEpisodeCollection]?
                            /// Creates a new `Value2Payload`.
                            ///
                            /// - Parameters:
                            ///   - data:
                            internal init(data: [Components.Schemas.UserEpisodeCollection]? = nil) {
                                self.data = data
                            }
                            internal enum CodingKeys: String, CodingKey {
                                case data
                            }
                        }
                        /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/GET/responses/200/content/json/value2`.
                        internal var value2: Operations.getUserSubjectEpisodeCollection.Output.Ok.Body.jsonPayload.Value2Payload
                        /// Creates a new `jsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - value1:
                        ///   - value2:
                        internal init(
                            value1: Components.Schemas.Page,
                            value2: Operations.getUserSubjectEpisodeCollection.Output.Ok.Body.jsonPayload.Value2Payload
                        ) {
                            self.value1 = value1
                            self.value2 = value2
                        }
                        internal init(from decoder: any Decoder) throws {
                            value1 = try .init(from: decoder)
                            value2 = try .init(from: decoder)
                        }
                        internal func encode(to encoder: any Encoder) throws {
                            try value1.encode(to: encoder)
                            try value2.encode(to: encoder)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/GET/responses/200/content/application\/json`.
                    case json(Operations.getUserSubjectEpisodeCollection.Output.Ok.Body.jsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Operations.getUserSubjectEpisodeCollection.Output.Ok.Body.jsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserSubjectEpisodeCollection.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserSubjectEpisodeCollection.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/episodes/get(getUserSubjectEpisodeCollection)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getUserSubjectEpisodeCollection.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getUserSubjectEpisodeCollection.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserSubjectEpisodeCollection.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserSubjectEpisodeCollection.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/episodes/get(getUserSubjectEpisodeCollection)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getUserSubjectEpisodeCollection.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getUserSubjectEpisodeCollection.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/GET/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserSubjectEpisodeCollection.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserSubjectEpisodeCollection.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// not authorized
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/episodes/get(getUserSubjectEpisodeCollection)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.getUserSubjectEpisodeCollection.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.getUserSubjectEpisodeCollection.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserSubjectEpisodeCollection.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserSubjectEpisodeCollection.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// 条目不存在
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/episodes/get(getUserSubjectEpisodeCollection)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getUserSubjectEpisodeCollection.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getUserSubjectEpisodeCollection.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// 章节收藏信息
    ///
    /// 同时会重新计算条目的完成度
    ///
    ///
    /// - Remark: HTTP `PATCH /v0/users/-/collections/{subject_id}/episodes`.
    /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/episodes/patch(patchUserSubjectEpisodeCollection)`.
    internal enum patchUserSubjectEpisodeCollection {
        internal static let id: Swift.String = "patchUserSubjectEpisodeCollection"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/PATCH/path`.
            internal struct Path: Sendable, Hashable {
                /// 条目 ID
                ///
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/PATCH/path/subject_id`.
                internal var subject_id: Components.Parameters.path_subject_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - subject_id: 条目 ID
                internal init(subject_id: Components.Parameters.path_subject_id) {
                    self.subject_id = subject_id
                }
            }
            internal var path: Operations.patchUserSubjectEpisodeCollection.Input.Path
            /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/PATCH/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.patchUserSubjectEpisodeCollection.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.patchUserSubjectEpisodeCollection.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.patchUserSubjectEpisodeCollection.Input.Headers
            /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/PATCH/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/PATCH/requestBody/json`.
                internal struct jsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/PATCH/requestBody/json/episode_id`.
                    internal var episode_id: [Swift.Int]
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/PATCH/requestBody/json/type`.
                    internal var _type: Components.Schemas.EpisodeCollectionType
                    /// Creates a new `jsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - episode_id:
                    ///   - _type:
                    internal init(
                        episode_id: [Swift.Int],
                        _type: Components.Schemas.EpisodeCollectionType
                    ) {
                        self.episode_id = episode_id
                        self._type = _type
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case episode_id
                        case _type = "type"
                    }
                }
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/PATCH/requestBody/content/application\/json`.
                case json(Operations.patchUserSubjectEpisodeCollection.Input.Body.jsonPayload)
            }
            internal var body: Operations.patchUserSubjectEpisodeCollection.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.patchUserSubjectEpisodeCollection.Input.Path,
                headers: Operations.patchUserSubjectEpisodeCollection.Input.Headers = .init(),
                body: Operations.patchUserSubjectEpisodeCollection.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/episodes/patch(patchUserSubjectEpisodeCollection)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.patchUserSubjectEpisodeCollection.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.patchUserSubjectEpisodeCollection.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/PATCH/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/PATCH/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.patchUserSubjectEpisodeCollection.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.patchUserSubjectEpisodeCollection.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/episodes/patch(patchUserSubjectEpisodeCollection)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.patchUserSubjectEpisodeCollection.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.patchUserSubjectEpisodeCollection.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/PATCH/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/PATCH/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.patchUserSubjectEpisodeCollection.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.patchUserSubjectEpisodeCollection.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// not authorized
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/episodes/patch(patchUserSubjectEpisodeCollection)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.patchUserSubjectEpisodeCollection.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.patchUserSubjectEpisodeCollection.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/PATCH/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/{subject_id}/episodes/PATCH/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.patchUserSubjectEpisodeCollection.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.patchUserSubjectEpisodeCollection.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// 条目不存在
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/{subject_id}/episodes/patch(patchUserSubjectEpisodeCollection)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.patchUserSubjectEpisodeCollection.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.patchUserSubjectEpisodeCollection.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// 章节收藏信息
    ///
    /// - Remark: HTTP `GET /v0/users/-/collections/-/episodes/{episode_id}`.
    /// - Remark: Generated from `#/paths//v0/users/-/collections/-/episodes/{episode_id}/get(getUserEpisodeCollection)`.
    internal enum getUserEpisodeCollection {
        internal static let id: Swift.String = "getUserEpisodeCollection"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 章节 ID
                ///
                /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/GET/path/episode_id`.
                internal var episode_id: Components.Parameters.path_episode_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - episode_id: 章节 ID
                internal init(episode_id: Components.Parameters.path_episode_id) {
                    self.episode_id = episode_id
                }
            }
            internal var path: Operations.getUserEpisodeCollection.Input.Path
            /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserEpisodeCollection.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserEpisodeCollection.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getUserEpisodeCollection.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getUserEpisodeCollection.Input.Path,
                headers: Operations.getUserEpisodeCollection.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.UserEpisodeCollection)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.UserEpisodeCollection {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserEpisodeCollection.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserEpisodeCollection.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/-/episodes/{episode_id}/get(getUserEpisodeCollection)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getUserEpisodeCollection.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getUserEpisodeCollection.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserEpisodeCollection.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserEpisodeCollection.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// episode ID not valid
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/-/episodes/{episode_id}/get(getUserEpisodeCollection)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getUserEpisodeCollection.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getUserEpisodeCollection.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/GET/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserEpisodeCollection.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserEpisodeCollection.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// not authorized
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/-/episodes/{episode_id}/get(getUserEpisodeCollection)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.getUserEpisodeCollection.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.getUserEpisodeCollection.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserEpisodeCollection.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserEpisodeCollection.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// 条目或者章节不存在
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/-/episodes/{episode_id}/get(getUserEpisodeCollection)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getUserEpisodeCollection.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getUserEpisodeCollection.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// 更新章节收藏信息
    ///
    /// - Remark: HTTP `PUT /v0/users/-/collections/-/episodes/{episode_id}`.
    /// - Remark: Generated from `#/paths//v0/users/-/collections/-/episodes/{episode_id}/put(putUserEpisodeCollection)`.
    internal enum putUserEpisodeCollection {
        internal static let id: Swift.String = "putUserEpisodeCollection"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/PUT/path`.
            internal struct Path: Sendable, Hashable {
                /// 章节 ID
                ///
                /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/PUT/path/episode_id`.
                internal var episode_id: Components.Parameters.path_episode_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - episode_id: 章节 ID
                internal init(episode_id: Components.Parameters.path_episode_id) {
                    self.episode_id = episode_id
                }
            }
            internal var path: Operations.putUserEpisodeCollection.Input.Path
            /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.putUserEpisodeCollection.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.putUserEpisodeCollection.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.putUserEpisodeCollection.Input.Headers
            /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/PUT/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/PUT/requestBody/json`.
                internal struct jsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/PUT/requestBody/json/type`.
                    internal var _type: Components.Schemas.EpisodeCollectionType
                    /// Creates a new `jsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - _type:
                    internal init(_type: Components.Schemas.EpisodeCollectionType) {
                        self._type = _type
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case _type = "type"
                    }
                }
                /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/PUT/requestBody/content/application\/json`.
                case json(Operations.putUserEpisodeCollection.Input.Body.jsonPayload)
            }
            internal var body: Operations.putUserEpisodeCollection.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.putUserEpisodeCollection.Input.Path,
                headers: Operations.putUserEpisodeCollection.Input.Headers = .init(),
                body: Operations.putUserEpisodeCollection.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/-/episodes/{episode_id}/put(putUserEpisodeCollection)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.putUserEpisodeCollection.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.putUserEpisodeCollection.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/PUT/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/PUT/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.putUserEpisodeCollection.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.putUserEpisodeCollection.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// episode ID not valid or subject not collected
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/-/episodes/{episode_id}/put(putUserEpisodeCollection)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.putUserEpisodeCollection.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.putUserEpisodeCollection.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/PUT/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/PUT/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.putUserEpisodeCollection.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.putUserEpisodeCollection.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// not authorized
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/-/episodes/{episode_id}/put(putUserEpisodeCollection)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.putUserEpisodeCollection.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.putUserEpisodeCollection.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/PUT/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/-/collections/-/episodes/{episode_id}/PUT/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.putUserEpisodeCollection.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.putUserEpisodeCollection.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// 条目或者章节不存在
            ///
            /// - Remark: Generated from `#/paths//v0/users/-/collections/-/episodes/{episode_id}/put(putUserEpisodeCollection)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.putUserEpisodeCollection.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.putUserEpisodeCollection.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// 获取用户角色收藏列表
    ///
    /// - Remark: HTTP `GET /v0/users/{username}/collections/-/characters`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/collections/-/characters/get(getUserCharacterCollections)`.
    internal enum getUserCharacterCollections {
        internal static let id: Swift.String = "getUserCharacterCollections"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/characters/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 设置了用户名之后无法使用 UID。
                ///
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/characters/GET/path/username`.
                internal var username: Components.Parameters.path_username
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - username: 设置了用户名之后无法使用 UID。
                internal init(username: Components.Parameters.path_username) {
                    self.username = username
                }
            }
            internal var path: Operations.getUserCharacterCollections.Input.Path
            /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/characters/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserCharacterCollections.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserCharacterCollections.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getUserCharacterCollections.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getUserCharacterCollections.Input.Path,
                headers: Operations.getUserCharacterCollections.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/characters/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/characters/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.Paged_UserCharacterCollection)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.Paged_UserCharacterCollection {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserCharacterCollections.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserCharacterCollections.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/users/{username}/collections/-/characters/get(getUserCharacterCollections)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getUserCharacterCollections.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getUserCharacterCollections.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/characters/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/characters/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserCharacterCollections.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserCharacterCollections.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// 用户不存在
            ///
            /// - Remark: Generated from `#/paths//v0/users/{username}/collections/-/characters/get(getUserCharacterCollections)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getUserCharacterCollections.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getUserCharacterCollections.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// 获取用户单个角色收藏信息
    ///
    /// - Remark: HTTP `GET /v0/users/{username}/collections/-/characters/{character_id}`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/collections/-/characters/{character_id}/get(getUserCharacterCollection)`.
    internal enum getUserCharacterCollection {
        internal static let id: Swift.String = "getUserCharacterCollection"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/characters/{character_id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 设置了用户名之后无法使用 UID。
                ///
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/characters/{character_id}/GET/path/username`.
                internal var username: Components.Parameters.path_username
                /// 角色 ID
                ///
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/characters/{character_id}/GET/path/character_id`.
                internal var character_id: Components.Parameters.path_character_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - username: 设置了用户名之后无法使用 UID。
                ///   - character_id: 角色 ID
                internal init(
                    username: Components.Parameters.path_username,
                    character_id: Components.Parameters.path_character_id
                ) {
                    self.username = username
                    self.character_id = character_id
                }
            }
            internal var path: Operations.getUserCharacterCollection.Input.Path
            /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/characters/{character_id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserCharacterCollection.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserCharacterCollection.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getUserCharacterCollection.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getUserCharacterCollection.Input.Path,
                headers: Operations.getUserCharacterCollection.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/characters/{character_id}/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/characters/{character_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.UserCharacterCollection)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.UserCharacterCollection {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserCharacterCollection.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserCharacterCollection.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/users/{username}/collections/-/characters/{character_id}/get(getUserCharacterCollection)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getUserCharacterCollection.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getUserCharacterCollection.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/characters/{character_id}/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/characters/{character_id}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserCharacterCollection.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserCharacterCollection.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// character ID not valid
            ///
            /// - Remark: Generated from `#/paths//v0/users/{username}/collections/-/characters/{character_id}/get(getUserCharacterCollection)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getUserCharacterCollection.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getUserCharacterCollection.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/characters/{character_id}/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/characters/{character_id}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserCharacterCollection.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserCharacterCollection.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// 用户或角色不存在
            ///
            /// - Remark: Generated from `#/paths//v0/users/{username}/collections/-/characters/{character_id}/get(getUserCharacterCollection)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getUserCharacterCollection.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getUserCharacterCollection.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// 获取用户人物收藏列表
    ///
    /// - Remark: HTTP `GET /v0/users/{username}/collections/-/persons`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/collections/-/persons/get(getUserPersonCollections)`.
    internal enum getUserPersonCollections {
        internal static let id: Swift.String = "getUserPersonCollections"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/persons/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 设置了用户名之后无法使用 UID。
                ///
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/persons/GET/path/username`.
                internal var username: Components.Parameters.path_username
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - username: 设置了用户名之后无法使用 UID。
                internal init(username: Components.Parameters.path_username) {
                    self.username = username
                }
            }
            internal var path: Operations.getUserPersonCollections.Input.Path
            /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/persons/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserPersonCollections.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserPersonCollections.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getUserPersonCollections.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getUserPersonCollections.Input.Path,
                headers: Operations.getUserPersonCollections.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/persons/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/persons/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.Paged_UserPersonCollection)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.Paged_UserPersonCollection {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserPersonCollections.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserPersonCollections.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/users/{username}/collections/-/persons/get(getUserPersonCollections)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getUserPersonCollections.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getUserPersonCollections.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/persons/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/persons/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserPersonCollections.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserPersonCollections.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// 用户不存在
            ///
            /// - Remark: Generated from `#/paths//v0/users/{username}/collections/-/persons/get(getUserPersonCollections)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getUserPersonCollections.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getUserPersonCollections.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// 获取用户单个人物收藏信息
    ///
    /// - Remark: HTTP `GET /v0/users/{username}/collections/-/persons/{person_id}`.
    /// - Remark: Generated from `#/paths//v0/users/{username}/collections/-/persons/{person_id}/get(getUserPersonCollection)`.
    internal enum getUserPersonCollection {
        internal static let id: Swift.String = "getUserPersonCollection"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/persons/{person_id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 设置了用户名之后无法使用 UID。
                ///
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/persons/{person_id}/GET/path/username`.
                internal var username: Components.Parameters.path_username
                /// 人物 ID
                ///
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/persons/{person_id}/GET/path/person_id`.
                internal var person_id: Components.Parameters.path_person_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - username: 设置了用户名之后无法使用 UID。
                ///   - person_id: 人物 ID
                internal init(
                    username: Components.Parameters.path_username,
                    person_id: Components.Parameters.path_person_id
                ) {
                    self.username = username
                    self.person_id = person_id
                }
            }
            internal var path: Operations.getUserPersonCollection.Input.Path
            /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/persons/{person_id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserPersonCollection.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserPersonCollection.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getUserPersonCollection.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getUserPersonCollection.Input.Path,
                headers: Operations.getUserPersonCollection.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/persons/{person_id}/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/persons/{person_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.UserPersonCollection)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.UserPersonCollection {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserPersonCollection.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserPersonCollection.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/users/{username}/collections/-/persons/{person_id}/get(getUserPersonCollection)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getUserPersonCollection.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getUserPersonCollection.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/persons/{person_id}/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/persons/{person_id}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserPersonCollection.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserPersonCollection.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// person ID not valid
            ///
            /// - Remark: Generated from `#/paths//v0/users/{username}/collections/-/persons/{person_id}/get(getUserPersonCollection)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getUserPersonCollection.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getUserPersonCollection.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/persons/{person_id}/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/users/{username}/collections/-/persons/{person_id}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserPersonCollection.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserPersonCollection.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// 用户或人物不存在
            ///
            /// - Remark: Generated from `#/paths//v0/users/{username}/collections/-/persons/{person_id}/get(getUserPersonCollection)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getUserPersonCollection.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getUserPersonCollection.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get Person Revisions
    ///
    /// - Remark: HTTP `GET /v0/revisions/persons`.
    /// - Remark: Generated from `#/paths//v0/revisions/persons/get(getPersonRevisions)`.
    internal enum getPersonRevisions {
        internal static let id: Swift.String = "getPersonRevisions"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/revisions/persons/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// 角色 ID
                ///
                /// - Remark: Generated from `#/paths/v0/revisions/persons/GET/query/person_id`.
                internal var person_id: Swift.Int
                /// 分页参数
                ///
                /// - Remark: Generated from `#/paths/v0/revisions/persons/GET/query/limit`.
                internal var limit: Components.Parameters.default_query_limit?
                /// 分页参数
                ///
                /// - Remark: Generated from `#/paths/v0/revisions/persons/GET/query/offset`.
                internal var offset: Components.Parameters.default_query_offset?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - person_id: 角色 ID
                ///   - limit: 分页参数
                ///   - offset: 分页参数
                internal init(
                    person_id: Swift.Int,
                    limit: Components.Parameters.default_query_limit? = nil,
                    offset: Components.Parameters.default_query_offset? = nil
                ) {
                    self.person_id = person_id
                    self.limit = limit
                    self.offset = offset
                }
            }
            internal var query: Operations.getPersonRevisions.Input.Query
            /// - Remark: Generated from `#/paths/v0/revisions/persons/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getPersonRevisions.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getPersonRevisions.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getPersonRevisions.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.getPersonRevisions.Input.Query,
                headers: Operations.getPersonRevisions.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/revisions/persons/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/revisions/persons/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.Paged_Revision)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.Paged_Revision {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getPersonRevisions.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getPersonRevisions.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/revisions/persons/get(getPersonRevisions)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getPersonRevisions.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getPersonRevisions.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/revisions/persons/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/revisions/persons/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getPersonRevisions.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getPersonRevisions.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/revisions/persons/get(getPersonRevisions)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getPersonRevisions.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getPersonRevisions.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get Person Revision
    ///
    /// - Remark: HTTP `GET /v0/revisions/persons/{revision_id}`.
    /// - Remark: Generated from `#/paths//v0/revisions/persons/{revision_id}/get(getPersonRevisionByRevisionId)`.
    internal enum getPersonRevisionByRevisionId {
        internal static let id: Swift.String = "getPersonRevisionByRevisionId"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/revisions/persons/{revision_id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 历史版本 ID
                ///
                /// - Remark: Generated from `#/paths/v0/revisions/persons/{revision_id}/GET/path/revision_id`.
                internal var revision_id: Swift.Int
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - revision_id: 历史版本 ID
                internal init(revision_id: Swift.Int) {
                    self.revision_id = revision_id
                }
            }
            internal var path: Operations.getPersonRevisionByRevisionId.Input.Path
            /// - Remark: Generated from `#/paths/v0/revisions/persons/{revision_id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getPersonRevisionByRevisionId.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getPersonRevisionByRevisionId.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getPersonRevisionByRevisionId.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getPersonRevisionByRevisionId.Input.Path,
                headers: Operations.getPersonRevisionByRevisionId.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/revisions/persons/{revision_id}/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/revisions/persons/{revision_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.PersonRevision)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.PersonRevision {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getPersonRevisionByRevisionId.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getPersonRevisionByRevisionId.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/revisions/persons/{revision_id}/get(getPersonRevisionByRevisionId)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getPersonRevisionByRevisionId.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getPersonRevisionByRevisionId.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/revisions/persons/{revision_id}/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/revisions/persons/{revision_id}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getPersonRevisionByRevisionId.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getPersonRevisionByRevisionId.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/revisions/persons/{revision_id}/get(getPersonRevisionByRevisionId)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getPersonRevisionByRevisionId.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getPersonRevisionByRevisionId.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/revisions/persons/{revision_id}/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/revisions/persons/{revision_id}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getPersonRevisionByRevisionId.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getPersonRevisionByRevisionId.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/revisions/persons/{revision_id}/get(getPersonRevisionByRevisionId)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getPersonRevisionByRevisionId.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getPersonRevisionByRevisionId.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get Character Revisions
    ///
    /// - Remark: HTTP `GET /v0/revisions/characters`.
    /// - Remark: Generated from `#/paths//v0/revisions/characters/get(getCharacterRevisions)`.
    internal enum getCharacterRevisions {
        internal static let id: Swift.String = "getCharacterRevisions"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/revisions/characters/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// 角色 ID
                ///
                /// - Remark: Generated from `#/paths/v0/revisions/characters/GET/query/character_id`.
                internal var character_id: Swift.Int
                /// 分页参数
                ///
                /// - Remark: Generated from `#/paths/v0/revisions/characters/GET/query/limit`.
                internal var limit: Components.Parameters.default_query_limit?
                /// 分页参数
                ///
                /// - Remark: Generated from `#/paths/v0/revisions/characters/GET/query/offset`.
                internal var offset: Components.Parameters.default_query_offset?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - character_id: 角色 ID
                ///   - limit: 分页参数
                ///   - offset: 分页参数
                internal init(
                    character_id: Swift.Int,
                    limit: Components.Parameters.default_query_limit? = nil,
                    offset: Components.Parameters.default_query_offset? = nil
                ) {
                    self.character_id = character_id
                    self.limit = limit
                    self.offset = offset
                }
            }
            internal var query: Operations.getCharacterRevisions.Input.Query
            /// - Remark: Generated from `#/paths/v0/revisions/characters/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getCharacterRevisions.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getCharacterRevisions.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getCharacterRevisions.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.getCharacterRevisions.Input.Query,
                headers: Operations.getCharacterRevisions.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/revisions/characters/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/revisions/characters/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.Paged_Revision)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.Paged_Revision {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getCharacterRevisions.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getCharacterRevisions.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/revisions/characters/get(getCharacterRevisions)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getCharacterRevisions.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getCharacterRevisions.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/revisions/characters/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/revisions/characters/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getCharacterRevisions.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getCharacterRevisions.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/revisions/characters/get(getCharacterRevisions)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getCharacterRevisions.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getCharacterRevisions.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get Character Revision
    ///
    /// - Remark: HTTP `GET /v0/revisions/characters/{revision_id}`.
    /// - Remark: Generated from `#/paths//v0/revisions/characters/{revision_id}/get(getCharacterRevisionByRevisionId)`.
    internal enum getCharacterRevisionByRevisionId {
        internal static let id: Swift.String = "getCharacterRevisionByRevisionId"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/revisions/characters/{revision_id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 版本 ID
                ///
                /// - Remark: Generated from `#/paths/v0/revisions/characters/{revision_id}/GET/path/revision_id`.
                internal var revision_id: Components.Parameters.path_revision_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - revision_id: 版本 ID
                internal init(revision_id: Components.Parameters.path_revision_id) {
                    self.revision_id = revision_id
                }
            }
            internal var path: Operations.getCharacterRevisionByRevisionId.Input.Path
            /// - Remark: Generated from `#/paths/v0/revisions/characters/{revision_id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getCharacterRevisionByRevisionId.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getCharacterRevisionByRevisionId.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getCharacterRevisionByRevisionId.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getCharacterRevisionByRevisionId.Input.Path,
                headers: Operations.getCharacterRevisionByRevisionId.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/revisions/characters/{revision_id}/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/revisions/characters/{revision_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.CharacterRevision)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.CharacterRevision {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getCharacterRevisionByRevisionId.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getCharacterRevisionByRevisionId.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/revisions/characters/{revision_id}/get(getCharacterRevisionByRevisionId)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getCharacterRevisionByRevisionId.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getCharacterRevisionByRevisionId.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/revisions/characters/{revision_id}/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/revisions/characters/{revision_id}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getCharacterRevisionByRevisionId.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getCharacterRevisionByRevisionId.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/revisions/characters/{revision_id}/get(getCharacterRevisionByRevisionId)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getCharacterRevisionByRevisionId.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getCharacterRevisionByRevisionId.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/revisions/characters/{revision_id}/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/revisions/characters/{revision_id}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getCharacterRevisionByRevisionId.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getCharacterRevisionByRevisionId.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/revisions/characters/{revision_id}/get(getCharacterRevisionByRevisionId)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getCharacterRevisionByRevisionId.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getCharacterRevisionByRevisionId.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get Subject Revisions
    ///
    /// - Remark: HTTP `GET /v0/revisions/subjects`.
    /// - Remark: Generated from `#/paths//v0/revisions/subjects/get(getSubjectRevisions)`.
    internal enum getSubjectRevisions {
        internal static let id: Swift.String = "getSubjectRevisions"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/revisions/subjects/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// 条目 ID
                ///
                /// - Remark: Generated from `#/paths/v0/revisions/subjects/GET/query/subject_id`.
                internal var subject_id: Swift.Int
                /// 分页参数
                ///
                /// - Remark: Generated from `#/paths/v0/revisions/subjects/GET/query/limit`.
                internal var limit: Components.Parameters.default_query_limit?
                /// 分页参数
                ///
                /// - Remark: Generated from `#/paths/v0/revisions/subjects/GET/query/offset`.
                internal var offset: Components.Parameters.default_query_offset?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - subject_id: 条目 ID
                ///   - limit: 分页参数
                ///   - offset: 分页参数
                internal init(
                    subject_id: Swift.Int,
                    limit: Components.Parameters.default_query_limit? = nil,
                    offset: Components.Parameters.default_query_offset? = nil
                ) {
                    self.subject_id = subject_id
                    self.limit = limit
                    self.offset = offset
                }
            }
            internal var query: Operations.getSubjectRevisions.Input.Query
            /// - Remark: Generated from `#/paths/v0/revisions/subjects/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getSubjectRevisions.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getSubjectRevisions.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getSubjectRevisions.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.getSubjectRevisions.Input.Query,
                headers: Operations.getSubjectRevisions.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/revisions/subjects/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/revisions/subjects/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.Paged_Revision)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.Paged_Revision {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getSubjectRevisions.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getSubjectRevisions.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/revisions/subjects/get(getSubjectRevisions)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getSubjectRevisions.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getSubjectRevisions.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/revisions/subjects/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/revisions/subjects/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getSubjectRevisions.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getSubjectRevisions.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/revisions/subjects/get(getSubjectRevisions)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getSubjectRevisions.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getSubjectRevisions.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get Subject Revision
    ///
    /// - Remark: HTTP `GET /v0/revisions/subjects/{revision_id}`.
    /// - Remark: Generated from `#/paths//v0/revisions/subjects/{revision_id}/get(getSubjectRevisionByRevisionId)`.
    internal enum getSubjectRevisionByRevisionId {
        internal static let id: Swift.String = "getSubjectRevisionByRevisionId"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/revisions/subjects/{revision_id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 版本 ID
                ///
                /// - Remark: Generated from `#/paths/v0/revisions/subjects/{revision_id}/GET/path/revision_id`.
                internal var revision_id: Components.Parameters.path_revision_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - revision_id: 版本 ID
                internal init(revision_id: Components.Parameters.path_revision_id) {
                    self.revision_id = revision_id
                }
            }
            internal var path: Operations.getSubjectRevisionByRevisionId.Input.Path
            /// - Remark: Generated from `#/paths/v0/revisions/subjects/{revision_id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getSubjectRevisionByRevisionId.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getSubjectRevisionByRevisionId.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getSubjectRevisionByRevisionId.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getSubjectRevisionByRevisionId.Input.Path,
                headers: Operations.getSubjectRevisionByRevisionId.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/revisions/subjects/{revision_id}/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/revisions/subjects/{revision_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.SubjectRevision)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.SubjectRevision {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getSubjectRevisionByRevisionId.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getSubjectRevisionByRevisionId.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/revisions/subjects/{revision_id}/get(getSubjectRevisionByRevisionId)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getSubjectRevisionByRevisionId.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getSubjectRevisionByRevisionId.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/revisions/subjects/{revision_id}/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/revisions/subjects/{revision_id}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getSubjectRevisionByRevisionId.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getSubjectRevisionByRevisionId.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/revisions/subjects/{revision_id}/get(getSubjectRevisionByRevisionId)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getSubjectRevisionByRevisionId.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getSubjectRevisionByRevisionId.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/revisions/subjects/{revision_id}/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/revisions/subjects/{revision_id}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getSubjectRevisionByRevisionId.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getSubjectRevisionByRevisionId.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/revisions/subjects/{revision_id}/get(getSubjectRevisionByRevisionId)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getSubjectRevisionByRevisionId.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getSubjectRevisionByRevisionId.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get Episode Revisions
    ///
    /// - Remark: HTTP `GET /v0/revisions/episodes`.
    /// - Remark: Generated from `#/paths//v0/revisions/episodes/get(getEpisodeRevisions)`.
    internal enum getEpisodeRevisions {
        internal static let id: Swift.String = "getEpisodeRevisions"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/revisions/episodes/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// 章节 ID
                ///
                /// - Remark: Generated from `#/paths/v0/revisions/episodes/GET/query/episode_id`.
                internal var episode_id: Swift.Int
                /// 分页参数
                ///
                /// - Remark: Generated from `#/paths/v0/revisions/episodes/GET/query/limit`.
                internal var limit: Components.Parameters.default_query_limit?
                /// 分页参数
                ///
                /// - Remark: Generated from `#/paths/v0/revisions/episodes/GET/query/offset`.
                internal var offset: Components.Parameters.default_query_offset?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - episode_id: 章节 ID
                ///   - limit: 分页参数
                ///   - offset: 分页参数
                internal init(
                    episode_id: Swift.Int,
                    limit: Components.Parameters.default_query_limit? = nil,
                    offset: Components.Parameters.default_query_offset? = nil
                ) {
                    self.episode_id = episode_id
                    self.limit = limit
                    self.offset = offset
                }
            }
            internal var query: Operations.getEpisodeRevisions.Input.Query
            /// - Remark: Generated from `#/paths/v0/revisions/episodes/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getEpisodeRevisions.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getEpisodeRevisions.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getEpisodeRevisions.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.getEpisodeRevisions.Input.Query,
                headers: Operations.getEpisodeRevisions.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/revisions/episodes/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/revisions/episodes/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.Paged_Revision)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.Paged_Revision {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getEpisodeRevisions.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getEpisodeRevisions.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/revisions/episodes/get(getEpisodeRevisions)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getEpisodeRevisions.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getEpisodeRevisions.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/revisions/episodes/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/revisions/episodes/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getEpisodeRevisions.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getEpisodeRevisions.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/revisions/episodes/get(getEpisodeRevisions)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getEpisodeRevisions.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getEpisodeRevisions.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get Episode Revision
    ///
    /// - Remark: HTTP `GET /v0/revisions/episodes/{revision_id}`.
    /// - Remark: Generated from `#/paths//v0/revisions/episodes/{revision_id}/get(getEpisodeRevisionByRevisionId)`.
    internal enum getEpisodeRevisionByRevisionId {
        internal static let id: Swift.String = "getEpisodeRevisionByRevisionId"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/revisions/episodes/{revision_id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 版本 ID
                ///
                /// - Remark: Generated from `#/paths/v0/revisions/episodes/{revision_id}/GET/path/revision_id`.
                internal var revision_id: Components.Parameters.path_revision_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - revision_id: 版本 ID
                internal init(revision_id: Components.Parameters.path_revision_id) {
                    self.revision_id = revision_id
                }
            }
            internal var path: Operations.getEpisodeRevisionByRevisionId.Input.Path
            /// - Remark: Generated from `#/paths/v0/revisions/episodes/{revision_id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getEpisodeRevisionByRevisionId.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getEpisodeRevisionByRevisionId.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getEpisodeRevisionByRevisionId.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getEpisodeRevisionByRevisionId.Input.Path,
                headers: Operations.getEpisodeRevisionByRevisionId.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/revisions/episodes/{revision_id}/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/revisions/episodes/{revision_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.DetailedRevision)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.DetailedRevision {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getEpisodeRevisionByRevisionId.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getEpisodeRevisionByRevisionId.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/revisions/episodes/{revision_id}/get(getEpisodeRevisionByRevisionId)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getEpisodeRevisionByRevisionId.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getEpisodeRevisionByRevisionId.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/revisions/episodes/{revision_id}/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/revisions/episodes/{revision_id}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getEpisodeRevisionByRevisionId.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getEpisodeRevisionByRevisionId.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Validation Error
            ///
            /// - Remark: Generated from `#/paths//v0/revisions/episodes/{revision_id}/get(getEpisodeRevisionByRevisionId)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.getEpisodeRevisionByRevisionId.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.getEpisodeRevisionByRevisionId.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/revisions/episodes/{revision_id}/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/revisions/episodes/{revision_id}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getEpisodeRevisionByRevisionId.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getEpisodeRevisionByRevisionId.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/revisions/episodes/{revision_id}/get(getEpisodeRevisionByRevisionId)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getEpisodeRevisionByRevisionId.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getEpisodeRevisionByRevisionId.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create a new index
    ///
    /// - Remark: HTTP `POST /v0/indices`.
    /// - Remark: Generated from `#/paths//v0/indices/post(newIndex)`.
    internal enum newIndex {
        internal static let id: Swift.String = "newIndex"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/indices/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.newIndex.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.newIndex.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.newIndex.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.newIndex.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/indices/POST/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/indices/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.Index)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.Index {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.newIndex.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.newIndex.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/indices/post(newIndex)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.newIndex.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.newIndex.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/indices/POST/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/indices/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorDetail)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorDetail {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.newIndex.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.newIndex.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//v0/indices/post(newIndex)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.newIndex.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.newIndex.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get Index By ID
    ///
    /// - Remark: HTTP `GET /v0/indices/{index_id}`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/get(getIndexById)`.
    internal enum getIndexById {
        internal static let id: Swift.String = "getIndexById"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/indices/{index_id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 目录 ID
                ///
                /// - Remark: Generated from `#/paths/v0/indices/{index_id}/GET/path/index_id`.
                internal var index_id: Components.Parameters.path_index_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - index_id: 目录 ID
                internal init(index_id: Components.Parameters.path_index_id) {
                    self.index_id = index_id
                }
            }
            internal var path: Operations.getIndexById.Input.Path
            /// - Remark: Generated from `#/paths/v0/indices/{index_id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getIndexById.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getIndexById.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getIndexById.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getIndexById.Input.Path,
                headers: Operations.getIndexById.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/indices/{index_id}/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/indices/{index_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.Index)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.Index {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getIndexById.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getIndexById.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/get(getIndexById)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getIndexById.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getIndexById.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/get(getIndexById)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses._404)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Components.Responses._404 {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Edit index's information
    ///
    /// - Remark: HTTP `PUT /v0/indices/{index_id}`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/put(editIndexById)`.
    internal enum editIndexById {
        internal static let id: Swift.String = "editIndexById"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/indices/{index_id}/PUT/path`.
            internal struct Path: Sendable, Hashable {
                /// 目录 ID
                ///
                /// - Remark: Generated from `#/paths/v0/indices/{index_id}/PUT/path/index_id`.
                internal var index_id: Components.Parameters.path_index_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - index_id: 目录 ID
                internal init(index_id: Components.Parameters.path_index_id) {
                    self.index_id = index_id
                }
            }
            internal var path: Operations.editIndexById.Input.Path
            /// - Remark: Generated from `#/paths/v0/indices/{index_id}/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.editIndexById.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.editIndexById.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.editIndexById.Input.Headers
            /// - Remark: Generated from `#/paths/v0/indices/{index_id}/PUT/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/indices/{index_id}/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.IndexBasicInfo)
            }
            internal var body: Operations.editIndexById.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.editIndexById.Input.Path,
                headers: Operations.editIndexById.Input.Headers = .init(),
                body: Operations.editIndexById.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/indices/{index_id}/PUT/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v0/indices/{index_id}/PUT/responses/200/content/application\/json`.
                    case json(Components.Schemas.Index)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.Index {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.editIndexById.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.editIndexById.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/put(editIndexById)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.editIndexById.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.editIndexById.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/put(editIndexById)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Components.Responses._400)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Components.Responses._400 {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/put(editIndexById)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Components.Responses._401)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Components.Responses._401 {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/put(editIndexById)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses._404)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Components.Responses._404 {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get Index Subjects
    ///
    /// - Remark: HTTP `GET /v0/indices/{index_id}/subjects`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/get(getIndexSubjectsByIndexId)`.
    internal enum getIndexSubjectsByIndexId {
        internal static let id: Swift.String = "getIndexSubjectsByIndexId"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/indices/{index_id}/subjects/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// 目录 ID
                ///
                /// - Remark: Generated from `#/paths/v0/indices/{index_id}/subjects/GET/path/index_id`.
                internal var index_id: Components.Parameters.path_index_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - index_id: 目录 ID
                internal init(index_id: Components.Parameters.path_index_id) {
                    self.index_id = index_id
                }
            }
            internal var path: Operations.getIndexSubjectsByIndexId.Input.Path
            /// - Remark: Generated from `#/paths/v0/indices/{index_id}/subjects/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// 条目类型
                ///
                /// - Remark: Generated from `#/paths/v0/indices/{index_id}/subjects/GET/query/type`.
                internal var _type: Components.Schemas.SubjectType?
                /// 分页参数
                ///
                /// - Remark: Generated from `#/paths/v0/indices/{index_id}/subjects/GET/query/limit`.
                internal var limit: Components.Parameters.default_query_limit?
                /// 分页参数
                ///
                /// - Remark: Generated from `#/paths/v0/indices/{index_id}/subjects/GET/query/offset`.
                internal var offset: Components.Parameters.default_query_offset?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - _type: 条目类型
                ///   - limit: 分页参数
                ///   - offset: 分页参数
                internal init(
                    _type: Components.Schemas.SubjectType? = nil,
                    limit: Components.Parameters.default_query_limit? = nil,
                    offset: Components.Parameters.default_query_offset? = nil
                ) {
                    self._type = _type
                    self.limit = limit
                    self.offset = offset
                }
            }
            internal var query: Operations.getIndexSubjectsByIndexId.Input.Query
            /// - Remark: Generated from `#/paths/v0/indices/{index_id}/subjects/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getIndexSubjectsByIndexId.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getIndexSubjectsByIndexId.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getIndexSubjectsByIndexId.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.getIndexSubjectsByIndexId.Input.Path,
                query: Operations.getIndexSubjectsByIndexId.Input.Query = .init(),
                headers: Operations.getIndexSubjectsByIndexId.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// Creates a new `Ok`.
                internal init() {}
            }
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/get(getIndexSubjectsByIndexId)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getIndexSubjectsByIndexId.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getIndexSubjectsByIndexId.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/get(getIndexSubjectsByIndexId)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Components.Responses._400)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Components.Responses._400 {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/get(getIndexSubjectsByIndexId)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses._404)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Components.Responses._404 {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Add a subject to Index
    ///
    /// - Remark: HTTP `POST /v0/indices/{index_id}/subjects`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/post(addSubjectToIndexByIndexId)`.
    internal enum addSubjectToIndexByIndexId {
        internal static let id: Swift.String = "addSubjectToIndexByIndexId"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/indices/{index_id}/subjects/POST/path`.
            internal struct Path: Sendable, Hashable {
                /// 目录 ID
                ///
                /// - Remark: Generated from `#/paths/v0/indices/{index_id}/subjects/POST/path/index_id`.
                internal var index_id: Components.Parameters.path_index_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - index_id: 目录 ID
                internal init(index_id: Components.Parameters.path_index_id) {
                    self.index_id = index_id
                }
            }
            internal var path: Operations.addSubjectToIndexByIndexId.Input.Path
            /// - Remark: Generated from `#/paths/v0/indices/{index_id}/subjects/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.addSubjectToIndexByIndexId.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.addSubjectToIndexByIndexId.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.addSubjectToIndexByIndexId.Input.Headers
            /// - Remark: Generated from `#/paths/v0/indices/{index_id}/subjects/POST/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/indices/{index_id}/subjects/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.IndexSubjectAddInfo)
            }
            internal var body: Operations.addSubjectToIndexByIndexId.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.addSubjectToIndexByIndexId.Input.Path,
                headers: Operations.addSubjectToIndexByIndexId.Input.Headers = .init(),
                body: Operations.addSubjectToIndexByIndexId.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/post(addSubjectToIndexByIndexId)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Components.Responses._200_hyphen_no_hyphen_content)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Components.Responses._200_hyphen_no_hyphen_content {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/post(addSubjectToIndexByIndexId)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Components.Responses._401)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Components.Responses._401 {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/post(addSubjectToIndexByIndexId)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Components.Responses._400)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Components.Responses._400 {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/post(addSubjectToIndexByIndexId)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses._404)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Components.Responses._404 {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Edit subject information in a index
    ///
    /// 如果条目不存在于目录，会创建该条目
    ///
    /// - Remark: HTTP `PUT /v0/indices/{index_id}/subjects/{subject_id}`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/{subject_id}/put(editIndexSubjectsByIndexIdAndSubjectID)`.
    internal enum editIndexSubjectsByIndexIdAndSubjectID {
        internal static let id: Swift.String = "editIndexSubjectsByIndexIdAndSubjectID"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/indices/{index_id}/subjects/{subject_id}/PUT/path`.
            internal struct Path: Sendable, Hashable {
                /// 目录 ID
                ///
                /// - Remark: Generated from `#/paths/v0/indices/{index_id}/subjects/{subject_id}/PUT/path/index_id`.
                internal var index_id: Components.Parameters.path_index_id
                /// 条目 ID
                ///
                /// - Remark: Generated from `#/paths/v0/indices/{index_id}/subjects/{subject_id}/PUT/path/subject_id`.
                internal var subject_id: Components.Parameters.path_subject_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - index_id: 目录 ID
                ///   - subject_id: 条目 ID
                internal init(
                    index_id: Components.Parameters.path_index_id,
                    subject_id: Components.Parameters.path_subject_id
                ) {
                    self.index_id = index_id
                    self.subject_id = subject_id
                }
            }
            internal var path: Operations.editIndexSubjectsByIndexIdAndSubjectID.Input.Path
            /// - Remark: Generated from `#/paths/v0/indices/{index_id}/subjects/{subject_id}/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.editIndexSubjectsByIndexIdAndSubjectID.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.editIndexSubjectsByIndexIdAndSubjectID.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.editIndexSubjectsByIndexIdAndSubjectID.Input.Headers
            /// - Remark: Generated from `#/paths/v0/indices/{index_id}/subjects/{subject_id}/PUT/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v0/indices/{index_id}/subjects/{subject_id}/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.IndexSubjectEditInfo)
            }
            internal var body: Operations.editIndexSubjectsByIndexIdAndSubjectID.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.editIndexSubjectsByIndexIdAndSubjectID.Input.Path,
                headers: Operations.editIndexSubjectsByIndexIdAndSubjectID.Input.Headers = .init(),
                body: Operations.editIndexSubjectsByIndexIdAndSubjectID.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/{subject_id}/put(editIndexSubjectsByIndexIdAndSubjectID)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Components.Responses._200_hyphen_no_hyphen_content)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Components.Responses._200_hyphen_no_hyphen_content {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/{subject_id}/put(editIndexSubjectsByIndexIdAndSubjectID)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Components.Responses._400)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Components.Responses._400 {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/{subject_id}/put(editIndexSubjectsByIndexIdAndSubjectID)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Components.Responses._401)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Components.Responses._401 {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/{subject_id}/put(editIndexSubjectsByIndexIdAndSubjectID)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses._404)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Components.Responses._404 {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete a subject from a Index
    ///
    /// - Remark: HTTP `DELETE /v0/indices/{index_id}/subjects/{subject_id}`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/{subject_id}/delete(delelteSubjectFromIndexByIndexIdAndSubjectID)`.
    internal enum delelteSubjectFromIndexByIndexIdAndSubjectID {
        internal static let id: Swift.String = "delelteSubjectFromIndexByIndexIdAndSubjectID"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/indices/{index_id}/subjects/{subject_id}/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                /// 目录 ID
                ///
                /// - Remark: Generated from `#/paths/v0/indices/{index_id}/subjects/{subject_id}/DELETE/path/index_id`.
                internal var index_id: Components.Parameters.path_index_id
                /// 条目 ID
                ///
                /// - Remark: Generated from `#/paths/v0/indices/{index_id}/subjects/{subject_id}/DELETE/path/subject_id`.
                internal var subject_id: Components.Parameters.path_subject_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - index_id: 目录 ID
                ///   - subject_id: 条目 ID
                internal init(
                    index_id: Components.Parameters.path_index_id,
                    subject_id: Components.Parameters.path_subject_id
                ) {
                    self.index_id = index_id
                    self.subject_id = subject_id
                }
            }
            internal var path: Operations.delelteSubjectFromIndexByIndexIdAndSubjectID.Input.Path
            /// - Remark: Generated from `#/paths/v0/indices/{index_id}/subjects/{subject_id}/DELETE/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.delelteSubjectFromIndexByIndexIdAndSubjectID.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.delelteSubjectFromIndexByIndexIdAndSubjectID.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.delelteSubjectFromIndexByIndexIdAndSubjectID.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.delelteSubjectFromIndexByIndexIdAndSubjectID.Input.Path,
                headers: Operations.delelteSubjectFromIndexByIndexIdAndSubjectID.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/{subject_id}/delete(delelteSubjectFromIndexByIndexIdAndSubjectID)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Components.Responses._200_hyphen_no_hyphen_content)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Components.Responses._200_hyphen_no_hyphen_content {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/{subject_id}/delete(delelteSubjectFromIndexByIndexIdAndSubjectID)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Components.Responses._401)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Components.Responses._401 {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/subjects/{subject_id}/delete(delelteSubjectFromIndexByIndexIdAndSubjectID)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses._404)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Components.Responses._404 {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Collect index for current user
    ///
    /// 为当前用户收藏一条目录
    ///
    /// - Remark: HTTP `POST /v0/indices/{index_id}/collect`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/collect/post(collectIndexByIndexIdAndUserId)`.
    internal enum collectIndexByIndexIdAndUserId {
        internal static let id: Swift.String = "collectIndexByIndexIdAndUserId"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/indices/{index_id}/collect/POST/path`.
            internal struct Path: Sendable, Hashable {
                /// 目录 ID
                ///
                /// - Remark: Generated from `#/paths/v0/indices/{index_id}/collect/POST/path/index_id`.
                internal var index_id: Components.Parameters.path_index_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - index_id: 目录 ID
                internal init(index_id: Components.Parameters.path_index_id) {
                    self.index_id = index_id
                }
            }
            internal var path: Operations.collectIndexByIndexIdAndUserId.Input.Path
            /// - Remark: Generated from `#/paths/v0/indices/{index_id}/collect/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.collectIndexByIndexIdAndUserId.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.collectIndexByIndexIdAndUserId.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.collectIndexByIndexIdAndUserId.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.collectIndexByIndexIdAndUserId.Input.Path,
                headers: Operations.collectIndexByIndexIdAndUserId.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/collect/post(collectIndexByIndexIdAndUserId)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Components.Responses._200_hyphen_no_hyphen_content)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Components.Responses._200_hyphen_no_hyphen_content {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/collect/post(collectIndexByIndexIdAndUserId)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Components.Responses._401)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Components.Responses._401 {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/collect/post(collectIndexByIndexIdAndUserId)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses._404)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Components.Responses._404 {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/collect/post(collectIndexByIndexIdAndUserId)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Components.Responses._500)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            internal var internalServerError: Components.Responses._500 {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Uncollect index for current user
    ///
    /// 为当前用户取消收藏一条目录
    ///
    /// - Remark: HTTP `DELETE /v0/indices/{index_id}/collect`.
    /// - Remark: Generated from `#/paths//v0/indices/{index_id}/collect/delete(uncollectIndexByIndexIdAndUserId)`.
    internal enum uncollectIndexByIndexIdAndUserId {
        internal static let id: Swift.String = "uncollectIndexByIndexIdAndUserId"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v0/indices/{index_id}/collect/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                /// 目录 ID
                ///
                /// - Remark: Generated from `#/paths/v0/indices/{index_id}/collect/DELETE/path/index_id`.
                internal var index_id: Components.Parameters.path_index_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - index_id: 目录 ID
                internal init(index_id: Components.Parameters.path_index_id) {
                    self.index_id = index_id
                }
            }
            internal var path: Operations.uncollectIndexByIndexIdAndUserId.Input.Path
            /// - Remark: Generated from `#/paths/v0/indices/{index_id}/collect/DELETE/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.uncollectIndexByIndexIdAndUserId.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.uncollectIndexByIndexIdAndUserId.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.uncollectIndexByIndexIdAndUserId.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.uncollectIndexByIndexIdAndUserId.Input.Path,
                headers: Operations.uncollectIndexByIndexIdAndUserId.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            /// Successful Response
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/collect/delete(uncollectIndexByIndexIdAndUserId)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Components.Responses._200_hyphen_no_hyphen_content)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Components.Responses._200_hyphen_no_hyphen_content {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/collect/delete(uncollectIndexByIndexIdAndUserId)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Components.Responses._401)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Components.Responses._401 {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/collect/delete(uncollectIndexByIndexIdAndUserId)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses._404)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Components.Responses._404 {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//v0/indices/{index_id}/collect/delete(uncollectIndexByIndexIdAndUserId)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Components.Responses._500)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            internal var internalServerError: Components.Responses._500 {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
}
